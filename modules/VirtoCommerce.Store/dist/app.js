!function(e){var t={};function o(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)o.d(r,i,function(t){return e[t]}.bind(null,i));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){o(1),o(2),o(3),o(4),o(5),o(6),o(7),o(8),o(9),o(10),o(11),o(12),o(13),o(14),e.exports=o(15)},function(e,t){null!=AppDependencies&&AppDependencies.push("virtoCommerce.storeModule"),angular.module("virtoCommerce.storeModule",["ngSanitize"]).config(["$stateProvider",function(e){e.state("workspace.storeModule",{url:"/store",templateUrl:"$(Platform)/Scripts/common/templates/home.tpl.html",controller:["$scope","platformWebApp.bladeNavigationService",function(e,t){t.showBlade({id:"store",title:"stores.blades.stores-list.title",controller:"virtoCommerce.storeModule.storesListController",template:"Modules/$(VirtoCommerce.Store)/Scripts/blades/stores-list.tpl.html",isClosingDisabled:!0})}]})}]).run(["platformWebApp.bladeNavigationService","platformWebApp.metaFormsService","platformWebApp.loginOfBehalfUrlResolver","$q","platformWebApp.mainMenuService","platformWebApp.widgetService","$state","platformWebApp.permissionScopeResolver","virtoCommerce.storeModule.stores",function(e,t,o,r,i,n,s,a,l){var c={path:"browse/store",icon:"fa fa-archive",title:"stores.main-menu-title",priority:110,action:function(){s.go("workspace.storeModule")},permission:"store:access"};i.addMenuItem(c),t.registerMetaFields("accountDetails",[{name:"storeId",templateUrl:"Modules/$(VirtoCommerce.Store)/Scripts/blades/templates/accountDetails/storeId.html",priority:100}]),n.registerWidget({controller:"virtoCommerce.storeModule.assetsWidgetController",template:"Modules/$(VirtoCommerce.Store)/Scripts/widgets/assetsWidget.tpl.html"},"storeDetail"),n.registerWidget({controller:"virtoCommerce.coreModule.seo.seoWidgetController",template:"Modules/$(VirtoCommerce.Core)/Scripts/SEO/widgets/seoWidget.tpl.html",objectType:"Store",getFixedStoreId:function(e){return e.currentEntity.id},getDefaultContainerId:function(e){return e.currentEntity.id},getLanguages:function(e){return e.currentEntity.languages}},"storeDetail"),n.registerWidget({controller:"virtoCommerce.storeModule.storeAdvancedWidgetController",template:"Modules/$(VirtoCommerce.Store)/Scripts/widgets/storeAdvancedWidget.tpl.html"},"storeDetail"),n.registerWidget({controller:"platformWebApp.dynamicPropertyWidgetController",template:"$(Platform)/Scripts/app/dynamicProperties/widgets/dynamicPropertyWidget.tpl.html"},"storeDetail"),n.registerWidget({controller:"platformWebApp.entitySettingsWidgetController",template:"$(Platform)/Scripts/app/settings/widgets/entitySettingsWidget.tpl.html"},"storeDetail"),n.registerWidget({controller:"virtoCommerce.storeModule.storeNotificationsWidgetController",template:"Modules/$(VirtoCommerce.Store)/Scripts/widgets/storeNotificationsWidget.tpl.html"},"storeDetail"),n.registerWidget({controller:"virtoCommerce.storeModule.storeNotificationsLogWidgetController",template:"Modules/$(VirtoCommerce.Store)/Scripts/widgets/storeNotificationsLogWidget.tpl.html"},"storeDetail");var d={type:"StoreSelectedScope",title:"Only for selected stores",selectFn:function(t,o){var r={id:"store-pick",title:this.title,subtitle:"Select stores",currentEntity:this,onChangesConfirmedFn:o,dataService:l,controller:"platformWebApp.security.scopeValuePickFromSimpleListController",template:"$(Platform)/Scripts/app/security/blades/common/scope-value-pick-from-simple-list.tpl.html"};e.showBlade(r,t)}};a.register(d),o.register(e=>r((function(t){e.storeId?l.get({id:e.storeId},e=>t(e.url)):t(null)})))}])},function(e,t){angular.module("virtoCommerce.storeModule").controller("virtoCommerce.storeModule.storeAdvancedController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.storeModule.stores","platformWebApp.common.countries","platformWebApp.common.timeZones",function(e,t,o,r,i){e.saveChanges=function(){angular.copy(e.blade.currentEntity,e.blade.origEntity),e.bladeClose()},e.setForm=function(t){e.formScope=t},e.isValid=function(){return e.formScope&&e.formScope.$valid},e.cancelChanges=function(){e.bladeClose()},e.blade.refresh=function(){},e.blade.headIcon="fa fa-archive",e.blade.isLoading=!1,e.blade.currentEntity=angular.copy(e.blade.entity),e.blade.origEntity=e.blade.entity,e.countries=r.query(),e.timeZones=i.query()}])},function(e,t){angular.module("virtoCommerce.storeModule").controller("virtoCommerce.storeModule.storeDetailController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.storeModule.stores","virtoCommerce.storeModule.catalogs","platformWebApp.settings","platformWebApp.settings.helper","platformWebApp.dialogService","virtoCommerce.coreModule.currency.currencyUtils",function(e,t,o,r,i,n,s,a){var l=e.blade;function c(){return!angular.equals(l.currentEntity,l.origEntity)&&l.hasUpdatePermission()}function d(){return c()&&e.formScope&&e.formScope.$valid}l.updatePermission="store:update",l.subtitle="stores.blades.store-detail.subtitle",l.catalogId=void 0,l.refresh=function(e){l.isLoading=!0,o.get({id:l.currentEntityId},t=>{!function(e){e.additionalLanguages=_.without(e.languages,e.defaultLanguage),e.additionalCurrencies=_.without(e.currencies,e.defaultCurrency),l.currentEntityId=e.id,l.catalogId=e.catalog,l.title=e.name,n.fixValues(e.settings),e.shippingMethods&&e.shippingMethods.sort((function(e,t){return e.priority-t.priority}));e.paymentMethods&&e.paymentMethods.sort((function(e,t){return e.priority-t.priority}));_.each(e.shippingMethods,(function(e){n.fixValues(e.settings)})),_.each(e.paymentMethods,(function(e){n.fixValues(e.settings)})),_.each(e.taxProviders,(function(e){n.fixValues(e.settings)})),l.currentEntity=angular.copy(e),l.origEntity=e,l.isLoading=!1,l.currentEntity.scopes&&angular.isArray(l.currentEntity.scopes)&&(l.scopes=l.currentEntity.scopes)}(t),e&&l.parentBlade.refresh()})},e.saveChanges=function(){l.isLoading=!0;var e=angular.copy(l.currentEntity);e.languages=_.union([e.defaultLanguage],e.additionalLanguages),e.currencies=_.union([e.defaultCurrency],e.additionalCurrencies),n.toApiFormat(e.settings),_.each(e.shippingMethods,(function(e){n.toApiFormat(e.settings)})),_.each(e.paymentMethods,(function(e){n.toApiFormat(e.settings)})),_.each(e.taxProviders,(function(e){n.toApiFormat(e.settings)})),o.update({},e,e=>l.refresh(!0))},e.setForm=function(t){e.formScope=t},l.onClose=function(o){t.showConfirmationIfNeeded(c(),d(),l,e.saveChanges,o,"stores.dialogs.store-save.title","stores.dialogs.store-save.message")},l.headIcon="fa fa-archive",l.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:e.saveChanges,canExecuteMethod:d,permission:l.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(l.origEntity,l.currentEntity),l.childrenBlades&&_.each(l.childrenBlades,(function(e){e.refresh&&e.refresh(l.currentEntity)}))},canExecuteMethod:c,permission:l.updatePermission},{name:"platform.commands.open-browser",icon:"fa fa-external-link",executeMethod:function(){window.open(l.currentEntity.url,"_blank")},canExecuteMethod:function(){return l.currentEntity&&l.currentEntity.url}},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){var t={id:"confirmDelete",title:"stores.dialogs.store-delete.title",message:"stores.dialogs.store-delete.message",callback:function(t){t&&(l.isLoading=!0,o.remove({ids:l.currentEntityId},(function(){e.bladeClose(),l.parentBlade.refresh()})))}};s.showConfirmationDialog(t)},canExecuteMethod:function(){return!0},permission:"store:delete"}],e.openLanguagesDictionarySettingManagement=function(){var o={id:"settingDetailChild",isApiSave:!0,currentEntityId:"VirtoCommerce.Core.General.Languages",parentRefresh:function(t){e.languages=t},controller:"platformWebApp.settingDictionaryController",template:"$(Platform)/Scripts/app/settings/blades/setting-dictionary.tpl.html"};t.showBlade(o,l)},e.openStatesDictionarySettingManagement=function(){var o={id:"settingDetailChild",isApiSave:!0,currentEntityId:"Stores.States",parentRefresh:function(t){e.storeStates=t},controller:"platformWebApp.settingDictionaryController",template:"$(Platform)/Scripts/app/settings/blades/setting-dictionary.tpl.html"};t.showBlade(o,l)},e.$on("refresh-entity-by-id",(function(e,o){l.currentEntityId===o&&t.closeChildrenBlades(l,l.refresh)})),l.refresh(),e.catalogDataSource=e=>r.search(e).$promise,e.storeStates=i.getValues({id:"Stores.States"}),e.languages=i.getValues({id:"VirtoCommerce.Core.General.Languages"}),e.currencyUtils=a}])},function(e,t){angular.module("virtoCommerce.storeModule").controller("virtoCommerce.storeModule.storesListController",["$scope","virtoCommerce.storeModule.stores","platformWebApp.bladeUtils","platformWebApp.authService","uiGridConstants","platformWebApp.uiGridHelper",function(e,t,o,r,i,n){e.uiGridConstants=i;var s=e.blade,a=o.bladeNavigationService;s.refresh=function(){s.isLoading=!0,t.search({keyword:l.keyword?l.keyword:void 0,sort:n.getSortExpression(e),skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount},(function(t){s.isLoading=!1,e.pageSettings.totalItems=t.totalCount,s.currentEntities=t.results}),(function(e){a.setError("Error "+e.status,s)}))},s.selectNode=function(t){e.selectedNodeId=t.id;var o={id:"storeDetails",currentEntityId:t.id,title:t.name,controller:"virtoCommerce.storeModule.storeDetailController",template:"Modules/$(VirtoCommerce.Store)/Scripts/blades/store-detail.tpl.html"};a.showBlade(o,s)},s.headIcon="fa fa-archive",s.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:s.refresh,canExecuteMethod:function(){return!0}},{name:"platform.commands.add",icon:"fas fa-plus",executeMethod:function(){e.selectedNodeId=null,a.showBlade({id:"storeDetails",currentEntity:{},title:"stores.blades.new-store-wizard.title",subtitle:"stores.blades.new-store-wizard.subtitle",controller:"virtoCommerce.storeModule.newStoreWizardController",template:"Modules/$(VirtoCommerce.Store)/Scripts/wizards/newStore/new-store-wizard.tpl.html"},s)},canExecuteMethod:function(){return!0},permission:"store:create"}];var l=e.filter={};l.criteriaChanged=function(){e.pageSettings.currentPage>1?e.pageSettings.currentPage=1:s.refresh()},e.setGridOptions=function(t){n.initialize(e,t,(function(t){n.bindRefreshOnSortChanged(e)})),o.initializePagination(e)}}])},function(e,t){angular.module("virtoCommerce.storeModule").controller("virtoCommerce.storeModule.accountDetails.storeIdController",["$scope","virtoCommerce.storeModule.stores",function(e,t){e.$watch("blade.currentEntity.storeId",(function(o){o&&t.get({id:o},(function(t){e.storeName=t.name}))}))}])},function(e,t){angular.module("virtoCommerce.storeModule").directive("uiScrollStore",[function(){return{restrict:"E",replace:!0,scope:{data:"&",label:"=",placeholder:"=",selectedId:"="},templateUrl:"Modules/$(VirtoCommerce.Store)/Scripts/directives/uiScrollStore.tpl.html",controller:["$scope",function(e){e.list=[],e.pageSize=20,e.setValue=t=>{e.selectedId=t.id},e.fetch=t=>{if(0==e.list.length)if(t.page=0,e.selectedId){let o={objectIds:[e.selectedId]};e.data({criteria:o}).then(o=>{e.list=o.results,e.fetchNext(t)})}else e.fetchNext(t)},e.fetchNext=t=>{let o={searchPhrase:t.search,take:e.pageSize,skip:t.page*e.pageSize};e.data({criteria:o}).then(o=>{e.list=e.list.concat(o.results),t.page++,e.list.length<o.totalCount&&e.$broadcast("scrollCompleted")})}}]}}])},function(e,t){angular.module("virtoCommerce.storeModule").directive("vaStoreSelector",["$q","virtoCommerce.storeModule.stores",function(e,t){return{restrict:"E",require:"ngModel",replace:!0,scope:{disabled:"=?",multiple:"=?",pageSize:"=?",placeholder:"=?",required:"=?",storesToHide:"=?"},templateUrl:"Modules/$(VirtoCommerce.Store)/Scripts/directives/vaStoreSelector.tpl.html",link:function(o,r,i,n){o.context={modelValue:null,required:angular.isDefined(i.required)&&(""===i.required||"true"===i.required.toLowerCase()),multiple:angular.isDefined(i.multiple)&&(""===i.multiple||"true"===i.multiple.toLowerCase())};var s=o.pageSize||25;o.choices=[],o.isNoChoices=!0;var a="",l=0,c=angular.isArray(o.storesToHide)?o.storesToHide.length:0;function d(e){e=_.reject(e,e=>_.any(o.choices,t=>t.id===e.id)||_.indexOf(o.storesToHide,e.id)>-1),_.any(e)&&(o.choices=o.choices.concat(e),o.isNoChoices=0===o.choices.length)}o.fetchStores=function(e){var r;r=o.context.multiple?o.context.modelValue:[o.context.modelValue],o.isNoChoices&&_.any(r)&&t.search({storeIds:r,take:r.length,responseGroup:"none"},e=>{d(e.results)}),o.disabled||o.fetchNextStores(e)},o.fetchNextStores=r=>(r.page=r.page||0,a!==r.search&&l>o.choices.length&&(a=r.search,r.page=0),0===r.page||l>o.choices.length?t.search({searchPhrase:r.search,take:s,skip:r.page*s,responseGroup:"none"},e=>{d(e.results),r.page++,r.page*s<e.totalCount&&o.$broadcast("scrollCompleted"),l=Math.max(l,e.totalCount-c)}).$promise:e.resolve()),o.$watch("context.modelValue",(function(e,t){e!==t&&n.$setViewValue(o.context.modelValue)})),n.$render=function(){o.context.modelValue=n.$modelValue}}}}])},function(e,t){angular.module("virtoCommerce.storeModule").factory("virtoCommerce.storeModule.catalogs",["$resource",function(e){return e("api/catalog/catalogs/:id",{id:"@Id"},{get:{method:"GET"},getCatalogs:{method:"GET",isArray:!0},search:{method:"POST",url:"api/catalog/catalogs/search"}})}])},function(e,t){angular.module("virtoCommerce.storeModule").factory("virtoCommerce.storeModule.stores",["$resource",function(e){return e("api/stores",{},{search:{method:"POST",url:"api/stores/search"},get:{url:"api/stores/:id"},update:{method:"PUT"}})}])},function(e,t){angular.module("virtoCommerce.storeModule").controller("virtoCommerce.storeModule.assetsWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var o=e.blade;e.openBlade=function(){var e={id:"storeAssetList",subtitle:o.title,controller:"virtoCommerce.assetsModule.assetListController",template:"Modules/$(VirtoCommerce.Assets)/Scripts/blades/asset-list.tpl.html",currentEntity:{url:"/stores/"+o.currentEntityId}};t.showBlade(e,o)}}])},function(e,t){angular.module("virtoCommerce.storeModule").controller("virtoCommerce.storeModule.storeAdvancedWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var o=e.widget.blade;e.openBlade=function(){var e={id:"storeChildBlade",entity:o.currentEntity,title:o.title,subtitle:"stores.widgets.storeAdvancedWidget.blade-subtitle",controller:"virtoCommerce.storeModule.storeAdvancedController",template:"Modules/$(VirtoCommerce.Store)/Scripts/blades/store-advanced.tpl.html"};t.showBlade(e,o)}}])},function(e,t){angular.module("virtoCommerce.storeModule").controller("virtoCommerce.storeModule.storeNotificationsLogWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var o=e.widget.blade;o.showNotificationsLog=function(){var e=o.currentEntity.id,r={id:"storeNotificationLogWidgetChild",title:"stores.widgets.storeNotificationsLogWidget.blade-title",titleValues:{id:o.currentEntity.id},objectId:e,objectType:"Store",subtitle:"stores.widgets.storeNotificationsLogWidget.blade-subtitle",controller:"virtoCommerce.notificationsModule.notificationsJournalController",template:"Modules/$(VirtoCommerce.Notifications)/Scripts/blades/notifications-journal.tpl.html"};t.showBlade(r,o)}}])},function(e,t){angular.module("virtoCommerce.storeModule").controller("virtoCommerce.storeModule.storeNotificationsWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var o=e.widget.blade;o.showNotifications=function(){var e=o.currentEntity.id,r={id:"storeNotificationWidgetChild",title:"stores.widgets.storeNotificationsWidget.blade-title",titleValues:{id:o.currentEntity.id},tenantId:e,tenantType:"Store",languages:o.currentEntity.languages,subtitle:"stores.widgets.storeNotificationsWidget.blade-subtitle",controller:"virtoCommerce.notificationsModule.notificationsListController",template:"Modules/$(VirtoCommerce.Notifications)/Scripts/blades/notifications-list.tpl.html"};t.showBlade(r,o)}}])},function(e,t){},function(e,t){angular.module("virtoCommerce.storeModule").controller("virtoCommerce.storeModule.newStoreWizardController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.storeModule.stores","virtoCommerce.storeModule.catalogs","platformWebApp.settings","platformWebApp.dialogService","virtoCommerce.coreModule.currency.currencyUtils",function(e,t,o,r,i,n,s){var a,l=e.blade;e.saveChanges=function(){l.isLoading=!0,l.currentEntity.languages=[l.currentEntity.defaultLanguage],l.currentEntity.currencies=[l.currentEntity.defaultCurrency],o.save(l.currentEntity,(function(e){l.parentBlade.refresh(),l.parentBlade.selectNode(e)}),(function(e){t.setError("Error "+e.status,l)}))},e.setForm=function(t){e.formScope=t},e.openLanguagesDictionarySettingManagement=function(){var o={id:"settingDetailChild",isApiSave:!0,currentEntityId:"VirtoCommerce.Core.General.Languages",parentRefresh:function(t){e.languages=t},controller:"platformWebApp.settingDictionaryController",template:"$(Platform)/Scripts/app/settings/blades/setting-dictionary.tpl.html"};t.showBlade(o,l)},e.openStatesDictionarySettingManagement=function(){var o={id:"settingDetailChild",isApiSave:!0,currentEntityId:"Stores.States",parentRefresh:function(t){e.storeStates=t},controller:"platformWebApp.settingDictionaryController",template:"$(Platform)/Scripts/app/settings/blades/setting-dictionary.tpl.html"};t.showBlade(o,l)},e.catalogDataSource=e=>r.search(e).$promise,e.languages=i.getValues({id:"VirtoCommerce.Core.General.Languages"}),e.currencyUtils=s,e.storeStates=i.getValues({id:"Stores.States"}),a=l.currentEntity,l.currentEntityId=a.id,l.currentEntity=angular.copy(a),l.origEntity=a,l.isLoading=!1,l.currentEntity.validationRuleCodePattern="^[a-zA-Z0-9_-]*$"}])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,