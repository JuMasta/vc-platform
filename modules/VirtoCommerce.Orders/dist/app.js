!function(e){var t={};function r(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(o,i,function(t){return e[t]}.bind(null,i));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){r(1),r(2),r(3),r(4),r(5),r(6),r(7),r(8),r(9),r(10),r(11),r(12),r(13),r(14),r(15),r(16),r(17),r(18),r(19),r(20),r(21),r(22),r(23),r(24),r(25),r(26),r(27),r(28),r(29),r(30),r(31),r(32),r(33),r(34),r(35),r(36),e.exports=r(37)},function(e,t){void 0!==AppDependencies&&AppDependencies.push("virtoCommerce.orderModule"),angular.module("virtoCommerce.orderModule",[,"virtoCommerce.customerModule","virtoCommerce.storeModule","virtoCommerce.inventoryModule"]).config(["$stateProvider",function(e){e.state("workspace.orderModule",{url:"/orders",templateUrl:"$(Platform)/Scripts/common/templates/home.tpl.html",controller:["$scope","platformWebApp.bladeNavigationService",function(e,t){t.showBlade({id:"orders",title:"orders.blades.customerOrder-list.title",controller:"virtoCommerce.orderModule.customerOrderListController",isExpandable:!0,template:"Modules/$(VirtoCommerce.Orders)/Scripts/blades/customerOrder-list.tpl.html",isClosingDisabled:!0}),e.moduleName="vc-order"}]})}]).factory("virtoCommerce.orderModule.knownOperations",["platformWebApp.bladeNavigationService",function(e){var t={};return{registerOperation:function(e){var r=angular.copy(e);r.detailBlade=angular.extend({id:"operationDetail",knownChildrenOperations:[],metaFields:[],controller:"virtoCommerce.orderModule.operationDetailController"},r.detailBlade),t[e.type]=r},getOperation:function(e){return t[e]}}}]).run(["$rootScope","$http","$compile","platformWebApp.mainMenuService","platformWebApp.widgetService","platformWebApp.bladeNavigationService","$state","$localStorage","virtoCommerce.orderModule.order_res_customerOrders","platformWebApp.permissionScopeResolver","virtoCommerce.storeModule.stores","virtoCommerce.orderModule.knownOperations","platformWebApp.authService","platformWebApp.metaFormsService",function(e,t,r,o,i,n,a,l,s,d,c,m,u,p){var g={path:"browse/orders",icon:"fa fa-file-text",title:"orders.main-menu-title",priority:90,action:function(){a.go("workspace.orderModule")},permission:"order:access"};o.addMenuItem(g),m.registerOperation({type:"CustomerOrder",treeTemplateUrl:"orderOperationDefault.tpl.html",detailBlade:{id:"orderDetail",template:"Modules/$(VirtoCommerce.Orders)/Scripts/blades/customerOrder-detail.tpl.html",knownChildrenOperations:["Shipment","PaymentIn"],metaFields:[{name:"isApproved",title:"orders.blades.customerOrder-detail.labels.approved",valueType:"Boolean",isVisibleFn:function(e){return!e.isNew}},{name:"employeeId",title:"orders.blades.customerOrder-detail.labels.employee",templateUrl:"order-employeeSelector.html"},{name:"number",isRequired:!0,title:"orders.blades.customerOrder-detail.labels.order-number",valueType:"ShortText"},{name:"createdDate",isReadOnly:!0,title:"orders.blades.customerOrder-detail.labels.from",valueType:"DateTime"},{name:"status",templateUrl:"statusSelector.html"},{name:"customerName",title:"orders.blades.customerOrder-detail.labels.customer",templateUrl:"customerSelector.html"},{name:"discountAmount",title:"orders.blades.customerOrder-items.labels.discount",templateUrl:"discountAmount.html"},{name:"storeId",title:"orders.blades.customerOrder-detail.labels.store",templateUrl:"storeSelector.html"}]}});m.registerOperation({type:"PaymentIn",description:"orders.blades.newOperation-wizard.menu.payment-operation.description",detailBlade:{template:"Modules/$(VirtoCommerce.Orders)/Scripts/blades/payment-detail.tpl.html",metaFields:[{name:"number",isRequired:!0,title:"orders.blades.payment-detail.labels.payment-number",valueType:"ShortText"},{name:"createdDate",isReadOnly:!0,title:"orders.blades.payment-detail.labels.from",valueType:"DateTime"},{name:"price",title:"orders.blades.payment-detail.labels.price",templateUrl:"price.html"},{name:"priceWithTax",title:"orders.blades.payment-detail.labels.price-with-tax",templateUrl:"priceWithTax.html"}]}});m.registerOperation({type:"Shipment",description:"orders.blades.newOperation-wizard.menu.shipment-operation.description",detailBlade:{template:"Modules/$(VirtoCommerce.Orders)/Scripts/blades/shipment-detail.tpl.html",metaFields:[{name:"number",isRequired:!0,title:"orders.blades.shipment-detail.labels.shipment-number",valueType:"ShortText"},{name:"createdDate",isReadOnly:!0,title:"orders.blades.shipment-detail.labels.from",valueType:"DateTime"},{name:"status",templateUrl:"statusSelector.html"},{name:"employeeId",title:"orders.blades.shipment-detail.labels.employee",templateUrl:"shipment-employeeSelector.html"},{name:"price",title:"orders.blades.shipment-detail.labels.price",templateUrl:"price.html"},{name:"priceWithTax",title:"orders.blades.shipment-detail.labels.price-with-tax",templateUrl:"priceWithTax.html"}]}}),i.registerWidget({controller:"virtoCommerce.orderModule.notificationsLogWidgetController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/notificationsLogWidget.tpl.html",isVisible:function(e){return u.checkPermission("notifications:access")}},"customerOrderDetailWidgets");i.registerWidget({controller:"virtoCommerce.orderModule.customerOrderItemsWidgetController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/customerOrder-items-widget.tpl.html"},"customerOrderDetailWidgets"),i.registerWidget({controller:"virtoCommerce.orderModule.customerOrderChangeLogWidgetController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/customerOrder-change-log-widget.tpl.html"},"customerOrderDetailWidgets");i.registerWidget({controller:"virtoCommerce.orderModule.shipmentItemsWidgetController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/shipment-items-widget.tpl.html"},"shipmentDetailWidgets"),i.registerWidget({controller:"platformWebApp.changeLog.operationsWidgetController",template:"$(Platform)/Scripts/app/changeLog/widgets/operations-widget.tpl.html"},"shipmentDetailWidgets");function f(){return u.checkPermission("order:read_prices")}i.registerWidget({controller:"virtoCommerce.orderModule.customerOrderAddressWidgetController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/customerOrder-address-widget.tpl.html"},"customerOrderDetailWidgets");var h={controller:"virtoCommerce.orderModule.customerOrderTotalsWidgetController",size:[2,2],isVisible:f,template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/customerOrder-totals-widget.tpl.html"};i.registerWidget(h,"customerOrderDetailWidgets");var b={controller:"virtoCommerce.orderModule.operationCommentWidgetController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/operation-comment-widget.tpl.html"};i.registerWidget(b,"customerOrderDetailWidgets"),i.registerWidget(b,"shipmentDetailWidgets"),i.registerWidget(b,"paymentDetailWidgets");i.registerWidget({controller:"virtoCommerce.orderModule.shipmentAddressWidgetController",size:[2,1],template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/shipment-address-widget.tpl.html"},"shipmentDetailWidgets");var y={controller:"virtoCommerce.orderModule.shipmentTotalsWidgetController",size:[2,1],isVisible:f,template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/shipment-totals-widget.tpl.html"};i.registerWidget(y,"shipmentDetailWidgets"),i.registerWidget({controller:"virtoCommerce.orderModule.paymentAddressWidgetController",size:[2,1],template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/payment-address-widget.tpl.html"},"paymentDetailWidgets");var C={controller:"virtoCommerce.orderModule.paymentTotalsWidgetController",size:[2,1],isVisible:f,template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/payment-totals-widget.tpl.html"};i.registerWidget(C,"paymentDetailWidgets");i.registerWidget({controller:"virtoCommerce.orderModule.paymentTransactionsWidgetController",size:[1,1],template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/payment-transactions-widget.tpl.html"},"paymentDetailWidgets"),i.registerWidget({controller:"platformWebApp.changeLog.operationsWidgetController",template:"$(Platform)/Scripts/app/changeLog/widgets/operations-widget.tpl.html"},"paymentDetailWidgets");var v={controller:"platformWebApp.dynamicPropertyWidgetController",template:"$(Platform)/Scripts/app/dynamicProperties/widgets/dynamicPropertyWidget.tpl.html",isVisible:function(e){return u.checkPermission("platform:dynamic_properties:read")}};i.registerWidget(v,"shipmentDetailWidgets"),i.registerWidget(v,"customerOrderDetailWidgets"),i.registerWidget(v,"paymentDetailWidgets");i.registerWidget({controller:"virtoCommerce.orderModule.operationTreeWidgetController",size:[4,3],template:"Modules/$(VirtoCommerce.Orders)/Scripts/widgets/operation-tree-widget.tpl.html"},"customerOrderDetailWidgets");var O="virtoCommerce.orderModule.dashboard.statisticsWidgetController";i.registerWidget({controller:O,size:[2,1],template:"order-statistics-revenue.html"},"mainDashboard"),i.registerWidget({controller:O,size:[2,1],template:"order-statistics-customersCount.html"},"mainDashboard"),i.registerWidget({controller:O,size:[2,1],template:"order-statistics-revenuePerCustomer.html"},"mainDashboard"),i.registerWidget({controller:O,size:[2,1],template:"order-statistics-orderValue.html"},"mainDashboard"),i.registerWidget({controller:O,size:[2,1],template:"order-statistics-itemsPurchased.html"},"mainDashboard"),i.registerWidget({controller:O,size:[2,1],template:"order-statistics-lineitemsPerOrder.html"},"mainDashboard"),i.registerWidget({controller:O,size:[3,2],template:"order-statistics-revenueByQuarter.html"},"mainDashboard"),i.registerWidget({controller:O,size:[3,2],template:"order-statistics-orderValueByQuarter.html"},"mainDashboard"),s.indexedSearchEnabled((function(e){if(e.result){i.registerWidget({documentType:"CustomerOrder",controller:"virtoCommerce.searchModule.indexWidgetController",template:"Modules/$(VirtoCommerce.Search)/Scripts/widgets/index-widget.tpl.html",isVisible:function(e){return!e.isNew}},"customerOrderDetailWidgets")}})),t.get("Modules/$(VirtoCommerce.Orders)/Scripts/widgets/dashboard/statistics-templates.html").then((function(e){r(e.data)})),p.registerMetaFields("orderFilterDetail",[{name:"statuses",title:"orders.blades.customerOrder-detail.labels.status",templateUrl:"statusesSelector.html"},{name:"storeIds",title:"orders.blades.customerOrder-detail.labels.store",templateUrl:"storeSelector.html"},{name:"startDate",title:"orders.blades.filter-detail.labels.from",valueType:"DateTime"},{name:"endDate",title:"orders.blades.filter-detail.labels.to",valueType:"DateTime"},{name:"customerId",title:"orders.blades.customerOrder-detail.labels.customer",templateUrl:"customerSelector.html"},{name:"employeeId",title:"orders.blades.shipment-detail.labels.employee",templateUrl:"filter-employeeSelector.html"}]);var S={type:"OrderSelectedStoreScope",title:"Only for orders in selected stores",selectFn:function(e,t){var r={id:"store-pick",title:this.title,subtitle:"Select stores",currentEntity:this,onChangesConfirmedFn:t,dataService:c,controller:"platformWebApp.security.scopeValuePickFromSimpleListController",template:"$(Platform)/Scripts/app/security/blades/common/scope-value-pick-from-simple-list.tpl.html"};n.showBlade(r,e)}};d.register(S);d.register({type:"OnlyOrderResponsibleScope",title:"Only for order responsible"}),e.$on("loginStatusChanged",(function(e,t){if(t.isAuthenticated){var r=new Date,o=new Date;o.setFullYear(r.getFullYear()-1),s.getDashboardStatistics({start:o,end:r},(function(e){var t=function(e,t){var r=_.groupBy(e,(function(e){return e.year+" Q"+e.quarter}));return _.map(r,(function(e,r){var o=[{v:r}];return _.each(t,(function(t){var r=_.findWhere(e,{currency:t});o.push({v:r?r.amount:0})})),{c:o}}))},r=_.unique(_.pluck(e.avgOrderValuePeriodDetails,"currency").sort()),o=[{id:"quarter",label:"Quarter",type:"string"}];_.each(r,(function(e){o.push({id:"revenue"+e,label:e,type:"number"})})),e.chartRevenueByQuarter={type:"LineChart",data:{cols:o,rows:t(e.revenuePeriodDetails,r)},options:{title:"Revenue by quarter",legend:{position:"top"},vAxis:{gridlines:{count:8}},hAxis:{slantedText:!0,slantedTextAngle:20}},formatters:{}},o=[{id:"quarter",label:"Quarter",type:"string"}],_.each(r,(function(e){o.push({id:"avg-orderValue"+e,label:e,type:"number"})})),e.chartOrderValueByQuarter={type:"ColumnChart",data:{cols:o,rows:t(e.avgOrderValuePeriodDetails,r)},options:{title:"Average Order value by quarter",legend:{position:"top"},vAxis:{gridlines:{count:8}},hAxis:{slantedText:!0,slantedTextAngle:20}},formatters:{}},l.ordersDashboardStatistics=e}),(function(e){console.log(e)}))}}))}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.customerOrderChangeLogController",["$scope","virtoCommerce.orderModule.order_res_customerOrders","platformWebApp.uiGridHelper","platformWebApp.bladeUtils","$timeout",function(e,t,r,o,i){var n=e.blade;function a(){e.hasMore&&(++e.pageSettings.currentPage,e.gridApi.infiniteScroll.saveScrollPercentage(),n.isLoading=!0,t.searchOrderChanges(l(),t=>{n.isLoading=!1,e.pageSettings.totalItems=t.totalCount,n.currentEntities=n.currentEntities.concat(t.results),e.hasMore=t.results.length===e.pageSettings.itemsPerPageCount,e.gridApi.infiniteScroll.dataLoaded()}))}function l(){return{orderId:n.orderId,sort:r.getSortExpression(e),skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount}}e.pageSettings={},e.pageSettings.currentPage=1,e.pageSettings.itemsPerPageCount=20,e.pageSettings.totalItems=0,n.refresh=function(){n.isLoading=!0,1!==e.pageSettings.currentPage&&(e.pageSettings.currentPage=1),t.searchOrderChanges(l(),t=>{n.isLoading=!1,e.pageSettings.totalItems=t.totalCount,n.currentEntities=t.results,e.hasMore=t.results.length===e.pageSettings.itemsPerPageCount,e.gridApi&&(e.gridApi.infiniteScroll.resetScroll(!0,!0),e.gridApi.infiniteScroll.dataLoaded())})},(n.filter=e.filter={}).criteriaChanged=function(){e.pageSettings.currentPage>1?e.pageSettings.currentPage=1:n.refresh()},e.setGridOptions=function(t){o.initializePagination(e,!0),r.initialize(e,t,(function(t){e.gridApi=t,r.bindRefreshOnSortChanged(e),e.gridApi.infiniteScroll.on.needLoadMoreData(e,a)})),i((function(){n.refresh()}))}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.customerOrderDetailController",["$scope","$window","platformWebApp.bladeNavigationService","platformWebApp.dialogService","platformWebApp.settings","virtoCommerce.customerModule.members","virtoCommerce.customerModule.memberTypesResolverService","virtoCommerce.orderModule.statusTranslationService","virtoCommerce.orderModule.securityAccounts","platformWebApp.authService",function(e,t,r,o,i,n,a,l,s,d){var c=e.blade;function m(e){c.statuses=l.translateStatuses(e,"customerOrder")}c.currentEntityId=c.customerOrder.id,c.isVisiblePrices=d.checkPermission("order:read_prices"),angular.extend(c,{title:"orders.blades.customerOrder-detail.title",titleValues:{customer:c.customerOrder.customerName},subtitle:"orders.blades.customerOrder-detail.subtitle"}),c.toolbarCommands.push({name:"orders.blades.customerOrder-detail.labels.invoice",icon:"fa fa-download",index:5,executeMethod:function(e){t.open("api/order/customerOrders/invoice/"+e.currentEntity.number,"_blank")},canExecuteMethod:function(){return!0}}),i.getValues({id:"Order.Status"},m),c.openStatusSettingManagement=function(){var e={id:"settingDetailChild",isApiSave:!0,currentEntityId:"Order.Status",parentRefresh:m,controller:"platformWebApp.settingDictionaryController",template:"$(Platform)/Scripts/app/settings/blades/setting-dictionary.tpl.html"};r.showBlade(e,c)},c.openCustomerDetails=function(){s.get({id:c.customerOrder.customerId},(function(e){var t=e&&e.memberId?e.memberId:c.customerOrder.customerId;n.get({id:t},(function(e){e&&e.id&&function(e){var t=a.resolve(e.memberType);if(t){var i=angular.copy(t.detailBlade);i.currentEntity=e,r.showBlade(i,c)}else o.showNotificationDialog({id:"error",title:"customer.dialogs.unknown-member-type.title",message:"customer.dialogs.unknown-member-type.message",messageValues:{memberType:e.memberType}})}(e)}))}))},n.search({memberType:"Employee",sort:"fullName:asc",take:1e3},(function(e){c.employees=e.results})),c.customInitialize=function(){c.isLocked="Completed"===c.currentEntity.status||"Completed"===c.currentEntity.cancelledState||c.currentEntity.isCancelled}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.orderItemSelectController",["$scope","platformWebApp.bladeUtils",function(e,t){var r=e.blade,o=t.bladeNavigationService;r.title||(r.title="Select Order items..."),e.options=angular.extend({showCheckingMultiple:!0,allowCheckingItem:!0,selectedItemIds:[],gridColumns:[]},r.options),r.refresh=function(){e.items=angular.copy(r.orderItems),_.each(e.items,(function(e){e.quantityOnShipment=e.quantity})),e.options.onItemsLoaded&&e.options.onItemsLoaded(e.items),r.isLoading=!1},r.toolbarCommands=[{name:"orders.commands.add-item",icon:"fas fa-plus",executeMethod:function(t){var r=_.map(_.where(e.items,{selected:!0}),(function(e){return{lineItemId:e.id,lineItem:e,quantity:e.quantityOnShipment}}));_.each(r,(function(e){t.currentEntity.items.push(e)})),o.closeBlade(t)},canExecuteMethod:function(){return _.any(e.items,(function(e){return e.selected}))},permission:r.updatePermission}],e.checkAll=function(t){angular.forEach(e.items,(function(e){e.selected=t}))},r.refresh()}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.customerOrderItemsController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.orderModule.catalogItems","virtoCommerce.pricingModule.prices","$translate","platformWebApp.authService",function(e,t,r,o,i,n){var a=e.blade;a.updatePermission="order:update",a.isVisiblePrices=n.checkPermission("order:read_prices");var l=[];function s(e){angular.forEach(e,(function(e){r.get({id:e.id},(function(t){o.getProductPrices({id:e.id},(function(e){var r=_.find(e,(function(e){return e.currency===a.currentEntity.currency})),o={productId:t.id,catalogId:t.catalogId,categoryId:t.categoryId,name:t.name,imageUrl:t.imgSrc,sku:t.code,quantity:1,price:r&&r.list?r.list:0,discountAmount:r&&r.list&&r.sale?r.list-r.sale:0,currency:a.currentEntity.currency};a.currentEntity.items.push(o),a.recalculateFn()}))}))}))}i("orders.blades.customerOrder-detail.title",{customer:a.currentEntity.customerName}).then((function(e){a.title="orders.widgets.customerOrder-items.blade-title",a.titleValues={title:e},a.subtitle="orders.widgets.customerOrder-items.blade-subtitle"})),a.refresh=function(){a.isLoading=!1,a.selectedAll=!1},e.openItemDynamicProperties=function(r){var o={id:"dynamicPropertiesList",currentEntity:r,controller:"platformWebApp.propertyValueListController",template:"$(Platform)/Scripts/app/dynamicProperties/blades/propertyValue-list.tpl.html"};t.showBlade(o,e.blade)},e.openItemDetail=function(r){var o={id:"listItemDetail",itemId:r.productId,productType:r.productType,title:r.name,controller:"virtoCommerce.catalogModule.itemDetailController",template:"Modules/$(VirtoCommerce.Catalog)/Scripts/blades/item-detail.tpl.html"};t.showBlade(o,e.blade)},a.toolbarCommands=[{name:"orders.commands.add-item",icon:"fas fa-plus",executeMethod:function(){var r,o;r={checkItemFn:function(e,t){t?_.all(l,(function(t){return t.id!==e.id}))&&l.push(e):l=_.reject(l,(function(t){return t.id===e.id}))}},o={id:"CatalogItemsSelect",currentEntities:a.currentEntity,title:"orders.blades.catalog-items-select.title",controller:"virtoCommerce.catalogModule.catalogItemSelectController",template:"Modules/$(VirtoCommerce.Catalog)/Scripts/blades/common/catalog-items-select.tpl.html",options:r,breadcrumbs:[],toolbarCommands:[{name:"orders.commands.add-selected",icon:"fas fa-plus",executeMethod:function(e){s(l),l.length=0,t.closeBlade(e)},canExecuteMethod:function(){return l.length>0}}]},t.showBlade(o,e.blade)},canExecuteMethod:function(){return"CustomerOrder"===a.currentEntity.operationType},permission:a.updatePermission},{name:"platform.commands.remove",icon:"fas fa-trash-alt",executeMethod:function(){var e=a.currentEntity.items;a.currentEntity.items=_.difference(e,_.filter(e,(function(e){return e.selected}))),a.recalculateFn()},canExecuteMethod:function(){return _.any(a.currentEntity.items,(function(e){return e.selected}))},permission:a.updatePermission}],e.checkAll=function(e){angular.forEach(a.currentEntity.items,(function(t){t.selected=e}))},a.refresh()}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.customerOrderListController",["$rootScope","$scope","$localStorage","virtoCommerce.orderModule.order_res_customerOrders","platformWebApp.bladeUtils","platformWebApp.dialogService","platformWebApp.authService","uiGridConstants","platformWebApp.uiGridHelper","platformWebApp.ui-grid.extension","virtoCommerce.orderModule.knownOperations","$translate",function(e,t,r,o,i,n,a,l,s,d,c,m){var u=t.blade,p=i.bladeNavigationService;t.uiGridConstants=l,t.getPricesVisibility=()=>a.checkPermission("order:read_prices"),t.getGridOptions=()=>({useExternalSorting:!0,data:"objects",rowTemplate:"order-list.row.html",columnDefs:[{name:"actions",displayName:"",enableColumnResizing:!1,enableSorting:!1,width:30,cellTemplate:"list-actions.cell.html",pinnedLeft:!0,displayAlways:!0},{name:"number",displayName:"orders.blades.customerOrder-list.labels.number",width:"***",displayAlways:!0},{name:"customerName",displayName:"orders.blades.customerOrder-list.labels.customer",width:"***"},{name:"storeId",displayName:"orders.blades.customerOrder-list.labels.store",width:"**"},{name:"total",displayName:"orders.blades.customerOrder-list.labels.total",cellFilter:"currency | showPrice:"+t.getPricesVisibility(),width:"**"},{name:"currency",displayName:"orders.blades.customerOrder-list.labels.currency",width:"*"},{name:"isApproved",displayName:"orders.blades.customerOrder-list.labels.confirmed",width:"*",cellClass:"__blue"},{name:"status",displayName:"orders.blades.customerOrder-list.labels.status",cellFilter:"statusTranslate:row.entity",width:"*"},{name:"createdDate",displayName:"orders.blades.customerOrder-list.labels.created",width:"**",sort:{direction:l.DESC}}]}),e.$on("loginStatusChanged",e=>{m.refresh().then(()=>{let e=t.getGridOptions();t.setGridOptions("customerOrder-list-grid",e)})}),u.refresh=function(){if(angular.isFunction(u.refreshCallback)){u.isLoading=!0;var e=u.refreshCallback(u);angular.isDefined(e.$promise)&&e.$promise.then((function(e){u.isLoading=!1,t.pageSettings.totalItems=e.totalCount,t.objects=e.results}))}else if(u.preloadedOrders)t.pageSettings.totalItems=u.preloadedOrders.length,t.objects=u.preloadedOrders,u.isLoading=!1;else{u.isLoading=!0;var r={responseGroup:"WithPrices",keyword:g.keyword,sort:s.getSortExpression(t),skip:(t.pageSettings.currentPage-1)*t.pageSettings.itemsPerPageCount,take:t.pageSettings.itemsPerPageCount};u.searchCriteria&&angular.extend(r,u.searchCriteria),g.current&&angular.extend(r,g.current),o.search(r,(function(e){u.isLoading=!1,t.pageSettings.totalItems=e.totalCount,t.objects=e.results}))}},t.selectNode=function(e){t.selectedNodeId=e.id;var r=c.getOperation(e.operationType);if(r){var o=angular.copy(r.detailBlade);(u.preloadedOrders||angular.isFunction(u.refreshCallback))&&(o.id="preloadedOrderDetails"),o.customerOrder=e,p.showBlade(o,u)}},t.deleteList=function(e){var r={id:"confirmDeleteItem",title:"orders.dialogs.orders-delete.title",message:"orders.dialogs.orders-delete.message",callback:function(r){if(r){t.isLoading=!0,angular.forEach(u.childrenBlades.slice(),(function(e){p.closeBlade(e)}));var i=_.pluck(e,"id");o.remove({ids:i},(function(e,t){u.refresh()}),(function(e){p.setError("Error "+e.status,u)}))}}};n.showConfirmationDialog(r)},u.headIcon="fa fa-file-text",u.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:u.refresh,canExecuteMethod:function(){return!0}}],u.hideDelete||u.toolbarCommands.push({name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){t.deleteList(t.gridApi.selection.getSelectedRows())},canExecuteMethod:function(){return t.gridApi&&_.any(t.gridApi.selection.getSelectedRows())},permission:"order:delete"});var g=u.filter=t.filter={};function f(e){var t={id:"filterDetail",controller:"virtoCommerce.orderModule.filterDetailController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/blades/filter-detail.tpl.html"};angular.extend(t,e),p.showBlade(t,u)}t.$localStorage=r,r.orderSearchFilters||(r.orderSearchFilters=[{name:"orders.blades.customerOrder-list.labels.new-filter"}]),r.orderSearchFilterId&&(g.current=_.findWhere(r.orderSearchFilters,{id:r.orderSearchFilterId})),g.change=function(){r.orderSearchFilterId=g.current?g.current.id:null,g.current&&!g.current.id?(g.current=null,f({isNew:!0})):(p.closeBlade({id:"filterDetail"}),g.criteriaChanged())},g.edit=function(){g.current&&f({data:g.current})},g.criteriaChanged=function(){t.pageSettings.currentPage>1?t.pageSettings.currentPage=1:u.refresh()},u.onExpand=function(){t.gridOptions.onExpand()},u.onCollapse=function(){t.gridOptions.onCollapse()},t.setGridOptions=function(e,r){return Array.prototype.push.apply(r.columnDefs,_.map(["discountAmount","subTotal","subTotalWithTax","subTotalDiscount","subTotalDiscountWithTax","subTotalTaxTotal","shippingTotal","shippingTotalWithTax","shippingSubTotal","shippingSubTotalWithTax","shippingDiscountTotal","shippingDiscountTotalWithTax","shippingTaxTotal","paymentTotal","paymentTotalWithTax","paymentSubTotal","paymentSubTotalWithTax","paymentDiscountTotal","paymentDiscountTotalWithTax","paymentTaxTotal","discountTotal","discountTotalWithTax","fee","feeWithTax","feeTotal","feeTotalWithTax","taxTotal","sum"],(function(e){return{name:e,cellFilter:"currency | showPrice:"+t.getPricesVisibility(),visible:!1}}))),t.gridOptions=r,d.tryExtendGridOptions(e,r),s.initialize(t,r,(function(e){u.preloadedOrders?(t.gridOptions.enableSorting=!0,t.gridOptions.useExternalSorting=!1):s.bindRefreshOnSortChanged(t)})),i.initializePagination(t),r}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.filterDetailController",["$scope","$localStorage","platformWebApp.settings","virtoCommerce.customerModule.members","$translate","virtoCommerce.orderModule.statusTranslationService","platformWebApp.metaFormsService","platformWebApp.accounts",function(e,t,r,o,i,n,a,l){var s,d=e.blade;function c(e){d.currentEntity=angular.copy(e),d.origEntity=e,d.isLoading=!1,d.title=d.isNew?"orders.blades.filter-detail.new-title":e.name,d.subtitle=d.isNew?"orders.blades.filter-detail.new-subtitle":"orders.blades.filter-detail.subtitle"}d.metaFields=d.metaFields?d.metaFields:a.getMetaFields("orderFilterDetail"),r.getValues({id:"Order.Status"},(function(e){d.statuses=n.translateStatuses(e,"customerOrder")})),o.search({memberType:"Employee",sort:"fullName:asc",take:1e3},(function(e){d.employees=e.results})),o.search({memberType:"Contact",sort:"fullName:asc",take:1e3},(function(e){d.contacts=e.results})),e.applyCriteria=function(){angular.copy(d.currentEntity,d.origEntity),d.isNew&&(t.orderSearchFilters.push(d.origEntity),t.orderSearchFilterId=d.origEntity.id,d.parentBlade.filter.current=d.origEntity,d.isNew=!1),c(d.origEntity),d.parentBlade.filter.criteriaChanged()},e.saveChanges=function(){d.currentEntity.customerId?l.search({MemberIds:[d.currentEntity.customerId]},(function(t){d.currentEntity.customerIds=_.pluck(t.users,"id"),e.applyCriteria()})):e.applyCriteria()},e.setForm=function(e){s=e},d.headIcon="fa fa-filter",d.toolbarCommands=[{name:"core.commands.apply-filter",icon:"fa fa-filter",executeMethod:function(){e.saveChanges()},canExecuteMethod:function(){return s&&s.$valid}},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(d.origEntity,d.currentEntity)},canExecuteMethod:function(){return!angular.equals(d.currentEntity,d.origEntity)}},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){d.parentBlade.filter.current=null,t.orderSearchFilters.splice(t.orderSearchFilters.indexOf(d.origEntity),1),delete t.orderSearchFilterId,d.parentBlade.refresh(),e.bladeClose()},canExecuteMethod:function(){return!d.isNew}}],d.isNew?i("orders.blades.customerOrder-list.labels.unnamed-filter").then((function(e){c({id:(new Date).getTime(),name:e})})):c(d.data)}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.orderOperationCommentDetail",["$scope",function(e){var t=e.blade;e.cancelChanges=function(){e.bladeClose()},e.isValid=function(){return!0},e.saveChanges=function(){t.origEntity.comment=t.currentEntity,e.bladeClose()},t.origEntity=t.currentEntity,t.currentEntity=angular.copy(t.origEntity.comment),t.isLoading=!1}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.operationDetailController",["$scope","platformWebApp.dialogService","platformWebApp.bladeNavigationService","virtoCommerce.orderModule.order_res_customerOrders","platformWebApp.objCompareService","$timeout","focus",function(e,t,r,o,i,n,a){var l=e.blade;function s(){return l.origEntity&&!i.equal(l.origEntity,l.currentEntity)&&!l.isNew&&l.hasUpdatePermission()}function d(){return s()&&(!e.formScope||e.formScope.$valid)}l.updatePermission="order:update",l.refresh=function(){"operationDetail"===l.id?l.isNew||l.initialize(l.currentEntity):(l.isLoading=!0,o.get({id:l.customerOrder.id},(function(e){l.initialize(e),l.customerOrder=l.currentEntity,l.securityScopes=e.scopes})))},l.initialize=function(e){l.origEntity=e,l.currentEntity=angular.copy(e),n((function(){l.customInitialize()})),l.isLoading=!1},l.customInitialize=function(){},l.setEntityStatus=function(e){l.currentEntity.status=e},l.recalculate=function(){l.isLoading=!0,o.recalculate(l.customerOrder,(function(e){angular.copy(e,l.customerOrder);var t=document.activeElement.id;t&&n((function(){a(t),document.getElementById(t).select()})),l.isLoading=!1}))},e.setForm=function(t){e.formScope=t},e.cancelChanges=function(){l.currentEntity=l.origEntity,e.bladeClose()},e.saveChanges=function(){if("operationDetail"===l.id){if(angular.copy(l.currentEntity,l.origEntity),l.isNew)l.realOperationsCollection.push(l.currentEntity),l.customerOrder.childrenOperations.push(angular.copy(l.currentEntity));else{var t=_.findWhere(l.realOperationsCollection,{id:l.origEntity.id});angular.copy(l.origEntity,t)}e.bladeClose(),l.isTotalsRecalculationNeeded&&l.recalculate()}else l.isLoading=!0,o.update(l.customerOrder,(function(){l.isNew=!1,l.refresh(),l.parentBlade.refresh(),r.closeChildrenBlades(l)}))},l.toolbarCommands=[{name:"orders.commands.new-document",icon:"fas fa-plus",executeMethod:function(){var e={id:"newOperationWizard",customerOrder:l.customerOrder,currentEntity:l.currentEntity,availableTypes:l.knownChildrenOperations,title:"orders.blades.newOperation-wizard.title",subtitle:"orders.blades.newOperation-wizard.subtitle",controller:"virtoCommerce.orderModule.newOperationWizardController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/wizards/newOperation/newOperation-wizard.tpl.html"};r.showBlade(e,l)},canExecuteMethod:function(){return _.any(l.knownChildrenOperations)},permission:l.updatePermission},{name:"platform.commands.save",icon:"fas fa-save",executeMethod:e.saveChanges,canExecuteMethod:d,permission:l.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(l.origEntity,l.currentEntity)},canExecuteMethod:s,permission:l.updatePermission},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){var e={id:"confirmDeleteItem",title:"orders.dialogs.operation-delete.title",message:"orders.dialogs.operation-delete.message",callback:function(e){if(e)if("operationDetail"===l.id){var t=_.findIndex(l.customerOrder.childrenOperations,(function(e){return e.id===l.origEntity.id}));l.customerOrder.childrenOperations.splice(t,1);t=_.findIndex(l.realOperationsCollection,(function(e){return e.id===l.origEntity.id}));l.realOperationsCollection.splice(t,1),r.closeBlade(l)}else o.delete({ids:l.customerOrder.id},(function(){l.parentBlade.refresh(),r.closeBlade(l)}))}};t.showConfirmationDialog(e)},canExecuteMethod:function(){return!0},permission:"order:delete"},{name:"orders.commands.cancel-document",icon:"fa fa-remove",executeMethod:function(){var r={id:"confirmCancelOperation",callback:function(t){switch(l.currentEntity.operationType){case"PaymentIn":l.currentEntity.cancelledState="Requested";break;case"CustomerOrder":_.forEach(l.currentEntity.inPayments,(function(e){e.cancelledState="Requested"})),l.currentEntity.isCancelled=!0,l.setEntityStatus("Cancelled");break;default:l.currentEntity.isCancelled=!0,l.setEntityStatus("Cancelled")}l.currentEntity.cancelReason=null==t||t.replace(/\s/g,"").length<1?null:t,l.currentEntity.cancelledDate=new Date,e.saveChanges()}};t.showDialog(r,"Modules/$(VirtoCommerce.Orders)/Scripts/dialogs/cancelOperation-dialog.tpl.html","virtoCommerce.orderModule.confirmCancelDialogController")},canExecuteMethod:function(){return l.currentEntity&&(!l.currentEntity.isCancelled||"Undefined"===l.currentEntity.cancelledState)},permission:l.updatePermission}],"operationDetail"===l.id&&l.toolbarCommands.splice(1,1),l.onClose=function(t){r.showConfirmationIfNeeded(s(),d(),l,e.saveChanges,t,"orders.dialogs.operation-save.title","orders.dialogs.operation-save.message")},e.cancelOperationResolution=function(e){$modalInstance.close(e)},l.refresh()}]).controller("virtoCommerce.orderModule.confirmCancelDialogController",["$scope","$modalInstance",function(e,t,r){e.cancelReason=void 0,e.yes=function(){t.close(e.cancelReason)},e.cancel=function(){t.dismiss("cancel")}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.paymentDetailController",["$scope","platformWebApp.bladeNavigationService","platformWebApp.dialogService","platformWebApp.settings","virtoCommerce.orderModule.order_res_customerOrders","virtoCommerce.orderModule.statusTranslationService","platformWebApp.authService","virtoCommerce.paymentModule.paymentMethods",function(e,t,r,o,i,n,a,l){var s=e.blade;if(s.isVisiblePrices=a.checkPermission("order:read_prices"),s.paymentMethods=[],s.isNew){s.title="orders.blades.payment-detail.title-new";var d=_.findWhere(s.metaFields,{name:"createdDate"});d&&(d.isReadOnly=!1),i.getNewPayment({id:s.customerOrder.id},s.initialize)}else s.title="orders.blades.payment-detail.title",s.titleValues={number:s.currentEntity.number},s.subtitle="orders.blades.payment-detail.subtitle";function c(e){s.statuses=n.translateStatuses(e,"PaymentIn")}s.realOperationsCollection=s.customerOrder.inPayments,l.search({storeId:s.customerOrder.storeId},(function(e){s.paymentMethods=e.results}),(function(e){t.setError("Error "+e.status,s)})),o.getValues({id:"PaymentIn.Status"},c),s.openStatusSettingManagement=function(){var e={id:"settingDetailChild",isApiSave:!0,currentEntityId:"PaymentIn.Status",parentRefresh:c,controller:"platformWebApp.settingDictionaryController",template:"$(Platform)/Scripts/app/settings/blades/setting-dictionary.tpl.html"};t.showBlade(e,s)},s.customInitialize=function(){s.isLocked="Paid"==s.currentEntity.status||"Completed"===s.currentEntity.cancelledState||s.currentEntity.isCancelled},s.setEntityStatus=function(e){s.currentEntity.status=e,s.currentEntity.paymentStatus=e},s.updateRecalculationFlag=function(){s.isTotalsRecalculationNeeded=s.origEntity.price!=s.currentEntity.price||s.origEntity.priceWithTax!=s.currentEntity.priceWithTax},e.$watch("blade.currentEntity.paymentMethod",(function(e){s.isNew&&e&&(s.currentEntity.gatewayCode=e.code)}),!0)}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.paymentTransactionsDetailController",["$scope","platformWebApp.bladeNavigationService","platformWebApp.dialogService","platformWebApp.bladeUtils",function(e,t,r){var o=e.blade;o.isLoading=!1,o.title="orders.blades.transaction-detail.title",o.subtitle="orders.blades.transaction-detail.subtitle"}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.paymentTransactionsListController",["$scope","platformWebApp.bladeNavigationService","platformWebApp.dialogService","platformWebApp.bladeUtils",function(e,t,r){var o=e.blade;o.isLoading=!1,o.title="orders.blades.transactions-list.title",o.subtitle="orders.blades.transactions-list.subtitle",e.setGridOptions=function(t){Array.prototype.push.apply(t.columnDefs,_.map(["amount"],(function(e){return{name:e,cellFilter:"currency",visible:!1}}))),e.gridOptions=t},e.selectNode=function(e){var r={id:"transactionDetail",currentEntity:e,controller:"virtoCommerce.orderModule.paymentTransactionsDetailController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/blades/payment-transactions-detail.tpl.html"};t.showBlade(r,o)}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.shipmentDetailController",["$scope","platformWebApp.bladeNavigationService","platformWebApp.dialogService","platformWebApp.settings","virtoCommerce.orderModule.order_res_customerOrders","virtoCommerce.inventoryModule.fulfillments","virtoCommerce.orderModule.statusTranslationService","platformWebApp.authService","virtoCommerce.shippingModule.shippingMethods",function(e,t,r,o,i,n,a,l,s){var d=e.blade;if(d.isVisiblePrices=l.checkPermission("order:read_prices"),d.shippingMethods=[],d.isNew){d.title="orders.blades.shipment-detail.title-new";var c=_.findWhere(d.metaFields,{name:"createdDate"});c&&(c.isReadOnly=!1),i.getNewShipment({id:d.customerOrder.id},d.initialize)}else d.title="orders.blades.shipment-detail.title",d.titleValues={number:d.currentEntity.number},d.subtitle="orders.blades.shipment-detail.subtitle";function m(e){d.statuses=a.translateStatuses(e,"shipment")}d.realOperationsCollection=d.customerOrder.shipments,s.search({storeId:d.customerOrder.storeId},(function(e){d.isLoading=!1,d.shippingMethods=e.results}),(function(e){t.setError("Error "+e.status,d)})),o.getValues({id:"Shipment.Status"},m),d.openStatusSettingManagement=function(){var e={id:"settingDetailChild",isApiSave:!0,currentEntityId:"Shipment.Status",parentRefresh:m,controller:"platformWebApp.settingDictionaryController",template:"$(Platform)/Scripts/app/settings/blades/setting-dictionary.tpl.html"};t.showBlade(e,d)},d.employees=d.parentBlade.employees,n.search({take:100},(function(e){d.fulfillmentCenters=e.results})),d.openFulfillmentCentersList=function(){t.showBlade({id:"fulfillmentCenterList",controller:"virtoCommerce.inventoryModule.fulfillmentListController",template:"Modules/$(VirtoCommerce.Inventory)/Scripts/blades/fulfillment-center-list.tpl.html"},d)},d.customInitialize=function(){d.isLocked="Send"==d.currentEntity.status||"Completed"===d.currentEntity.cancelledState||d.currentEntity.isCancelled},d.updateRecalculationFlag=function(){d.isTotalsRecalculationNeeded=d.origEntity.price!=d.currentEntity.price||d.origEntity.priceWithTax!=d.currentEntity.priceWithTax},e.$watch("blade.currentEntity.shippingMethod",(function(e){d.isNew&&e&&(d.currentEntity.shipmentMethodCode=e.code)}),!0)}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.shipmentItemsController",["$scope","platformWebApp.bladeNavigationService","platformWebApp.dialogService","platformWebApp.authService",function(e,t,r,o){var i=e.blade;i.updatePermission="order:update",i.isVisiblePrices=o.checkPermission("order:read_prices"),i.currentEntity.items=i.currentEntity.items||[];var n=null,a=[];i.refresh=function(){i.isLoading=!1,i.selectedAll=!1},i.toolbarCommands=[{name:"orders.commands.add-item",icon:"fas fa-plus",executeMethod:function(){var r,o;r={checkItemFn:function(e,t){t?_.all(a,(function(t){return t.id!=e.id}))&&a.push(e):a=_.reject(a,(function(t){return t.id==e.id}))}},o={id:"OrderItemsSelect",currentEntity:i.currentEntity,orderItems:i.parentBlade.parentBlade.currentEntity.items,title:"orders.blades.catalog-items-select.title",controller:"virtoCommerce.orderModule.orderItemSelectController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/blades/customerOrder-items-select.tpl.html",options:r,breadcrumbs:[],toolbarCommands:[{name:"orders.commands.add-selected",icon:"fas fa-plus",executeMethod:function(e){a.length=0,t.closeBlade(e)},canExecuteMethod:function(){return a.length>0}}]},t.showBlade(o,e.blade)},canExecuteMethod:function(){return"Shipment"===i.currentEntity.operationType},permission:i.updatePermission},{name:"platform.commands.remove",icon:"fas fa-trash-alt",executeMethod:function(){var e=i.currentEntity.items;i.currentEntity.items=_.difference(e,_.filter(e,(function(e){return e.selected})))},canExecuteMethod:function(){return _.any(i.currentEntity.items,(function(e){return e.selected}))},permission:i.updatePermission}],e.selectItem=function(t){n=t,e.selectedNodeId=n.id},e.checkAll=function(e){angular.forEach(i.currentEntity.items,(function(t){t.selected=e}))},i.refresh()}])},function(e,t){angular.module("virtoCommerce.orderModule").directive("maskMoney",["showPriceFilter",function(e){return{restrict:"A",require:"ngModel",scope:{maskMoney:"="},link:function(t,r,o,i){var n=t.maskMoney;n&&r.attr("readonly",!0),i.$formatters.unshift((function(t){return n?e(t,!1):t}))}}}])},function(e,t){angular.module("virtoCommerce.orderModule").factory("virtoCommerce.orderModule.catalogItems",["$resource",function(e){return e("api/catalog/products/:id",null,{})}])},function(e,t){angular.module("virtoCommerce.orderModule").factory("virtoCommerce.orderModule.order_res_customerOrders",["$resource",function(e){return e("api/order/customerOrders/:id",{id:"@Id"},{search:{method:"POST",url:"api/order/customerOrders/search"},getNewShipment:{url:"api/order/customerOrders/:id/shipments/new"},getNewPayment:{url:"api/order/customerOrders/:id/payments/new"},recalculate:{method:"PUT",url:"api/order/customerOrders/recalculate"},update:{method:"PUT",url:"api/order/customerOrders"},getDashboardStatistics:{url:"api/order/dashboardStatistics"},getOrderChanges:{method:"GET",url:"api/order/customerOrders/:id/changes",isArray:!0},searchOrderChanges:{method:"POST",url:"api/order/customerOrders/searchChanges"},indexedSearch:{method:"POST",url:"api/order/customerOrders/indexed/search"},indexedSearchEnabled:{method:"GET",url:"/api/order/customerOrders/indexed/searchEnabled"}})}])},function(e,t){angular.module("virtoCommerce.orderModule").factory("virtoCommerce.orderModule.order_res_fulfilmentCenters",["$resource",function(e){return e("api/fulfillment/centers")}])},function(e,t){angular.module("virtoCommerce.orderModule").factory("virtoCommerce.orderModule.securityAccounts",["$resource",function(e){return e("api/platform/security/users/id/:id",{id:"@Id"},{})}])},function(e,t){angular.module("virtoCommerce.orderModule").filter("showPrice",(function(){return function(e,t){var r=/\d/g;return r.test(e)&&arguments.length>1&&!t&&(e=String(e).replace(r,"#")),e}}))},function(e,t){function r(e,t,r){var o="orders.settings."+t.toLowerCase()+"-status."+e.toLowerCase(),i=r.instant(o);return i===o?e:i}angular.module("virtoCommerce.orderModule").factory("virtoCommerce.orderModule.statusTranslationService",["$translate",function(e){return{translateStatuses:function(t,o){return _.map(t,(function(t){return{key:t,value:r(t,o,e)}}))}}}]).filter("statusTranslate",["$translate",function(e){return function(t,o){return(o=o||t).status?r(o.status,o.operationType,e):""}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.customerOrderAddressWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){e.operation={},e.openAddressesBlade=function(){var r={id:"orderOperationAddresses",title:"orders.widgets.customerOrder-address.blade-title",currentEntities:e.operation.addresses,controller:"virtoCommerce.coreModule.common.coreAddressListController",template:"Modules/$(VirtoCommerce.Core)/Scripts/common/blades/address-list.tpl.html"};t.showBlade(r,e.blade)},e.$watch("widget.blade.customerOrder",(function(t){e.operation=t}))}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.customerOrderChangeLogWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var r=e.widget.blade;r.showOrderChanges=function(){var e={id:"customerOrderChangeLog",orderId:r.customerOrder.id,headIcon:r.headIcon,title:r.title,titleValues:{customer:r.customerOrder.customerName},subtitle:"platform.widgets.operations.blade-subtitle",isExpandable:!0,controller:"virtoCommerce.orderModule.customerOrderChangeLogController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/blades/customerOrder-change-log.tpl.html"};t.showBlade(e,r)}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.customerOrderItemsWidgetController",["$scope","$translate","platformWebApp.bladeNavigationService",function(e,t,r){var o=e.widget.blade;e.$watch("widget.blade.customerOrder",(function(t){e.operation=t})),e.openItemsBlade=function(){var t={id:"customerOrderItems",currentEntity:e.operation,recalculateFn:o.recalculate,controller:"virtoCommerce.orderModule.customerOrderItemsController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/blades/customerOrder-items.tpl.html"};r.showBlade(t,o)}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.customerOrderTotalsWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.notificationsLogWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var r=e.widget.blade;r.showNotificationsLog=function(){var e={id:"notificationLogWidgetChild",objectId:r.currentEntity.id,objectType:"CustomerOrder",title:"orders.widgets.notifications.title",subtitle:"orders.widgets.notifications.subtitle",controller:"virtoCommerce.notificationsModule.notificationsJournalController",template:"Modules/$(VirtoCommerce.Notifications)/Scripts/blades/notifications-journal.tpl.html"};t.showBlade(e,r)}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.operationCommentWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){e.operation={},e.openCommentBlade=function(){var r={id:"operationComment",title:"orders.widgets.operation-comment.blade-title",currentEntity:e.operation,controller:"virtoCommerce.orderModule.orderOperationCommentDetail",template:"Modules/$(VirtoCommerce.Orders)/Scripts/blades/operation-comment.tpl.html"};t.showBlade(r,e.blade)},e.$watch("widget.blade.currentEntity",(function(t){e.operation=t}))}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.operationTreeWidgetController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.orderModule.knownOperations",function(e,t,r){var o=e.blade;e.$watchCollection("blade.customerOrder.childrenOperations",(function(){if(e.currentOperationId=o.customerOrder.id,!o.isLoading){var t={};!function e(t,o){var i=r.getOperation(t.operationType);if(!i)return void console.log("Could not find template for:"+t.operationType);var n=angular.copy(i);n.operation=t;o.childrenNodes=o.childrenNodes||[];o.childrenNodes.push(n);_.each(t.childrenOperations,(function(t){e(t,n)}))}(o.customerOrder,t),e.node=t.childrenNodes[0]}})),e.selectOperation=function(r){if(e.currentOperationId=r.operation.id,r.operation.id===o.customerOrder.id)t.closeChildrenBlades(o);else{var i=r.detailBlade;angular.extend(i,{customerOrder:o.customerOrder,currentEntity:r.operation}),t.showBlade(i,o)}}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.paymentAddressWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){e.operation={},e.openBlade=function(){var r=e.operation.billingAddress;r||(r={isNew:!0,addressType:"billing"});var o={id:"orderOperationAddresses",title:"orders.widgets.payment-address.blade-title",currentEntity:r,controller:"virtoCommerce.coreModule.common.coreAddressDetailController",template:"Modules/$(VirtoCommerce.Core)/Scripts/common/blades/address-detail.tpl.html",deleteFn:function(t){e.operation.billingAddress=null},confirmChangesFn:function(t){e.operation.billingAddress=t,t.isNew=!1}};t.showBlade(o,e.blade)},e.getAddressName=function(e){var t=null;return e&&(t=[e.countryCode,e.regionName,e.city,e.line1].join(",")),t},e.$watch("widget.blade.currentEntity",(function(t){e.operation=t}))}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.paymentTotalsWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){e.blade=e.widget.blade,e.$watch("widget.blade.currentEntity",(function(t){t&&(e.payment=t)}),!0)}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.paymentTransactionsWidgetController",["$scope","$translate","platformWebApp.bladeNavigationService",function(e,t,r){var o=e.widget.blade;e.$watch("widget.blade.currentEntity",(function(t){e.operation=t})),e.openItemsBlade=function(){var t={id:"transactions",currentEntity:e.operation,controller:"virtoCommerce.orderModule.paymentTransactionsListController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/blades/payment-transactions-list.tpl.html"};r.showBlade(t,o)}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.shipmentAddressWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){e.operation={},e.openAddressesBlade=function(){var r=e.operation.deliveryAddress;r||(r={isNew:!0});var o={id:"orderOperationAddresses",title:"orders.widgets.shipment-address.blade-title",currentEntity:r,controller:"virtoCommerce.coreModule.common.coreAddressDetailController",template:"Modules/$(VirtoCommerce.Core)/Scripts/common/blades/address-detail.tpl.html",deleteFn:function(t){e.operation.deliveryAddress=null},confirmChangesFn:function(t){e.operation.deliveryAddress=t,t.isNew=!1}};t.showBlade(o,e.blade)},e.getAddressName=function(e){var t=null;return e&&(t=[e.countryCode,e.regionName,e.city,e.line1].join(",")),t},e.$watch("widget.blade.currentEntity",(function(t){e.operation=t}))}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.shipmentItemsWidgetController",["$scope","$translate","platformWebApp.bladeNavigationService",function(e,t,r){var o=e.widget.blade;e.$watch("widget.blade.currentEntity",(function(t){e.operation=t})),e.openItemsBlade=function(){t("orders.blades.shipment-detail.title",{number:e.operation.number}).then((function(e){var t={id:"shipmentItems",title:"orders.blades.shipment-items.title",titleValues:{title:e},subtitle:"orders.blades.shipment-items.subtitle",currentEntity:o.currentEntity,controller:"virtoCommerce.orderModule.shipmentItemsController",template:"Modules/$(VirtoCommerce.Orders)/Scripts/blades/shipment-items.tpl.html"};r.showBlade(t,o)}))}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.shipmentTotalsWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){e.blade=e.widget.blade,e.$watch("widget.blade.currentEntity",(function(t){t&&(e.shipment=t)}),!0)}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.dashboard.statisticsWidgetController",["$scope","$localStorage","$state",function(e,t,r){e.$storage=t,e.openBlade=function(){r.go("workspace.orderModule")}}])},function(e,t){angular.module("virtoCommerce.orderModule").controller("virtoCommerce.orderModule.newOperationWizardController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.orderModule.knownOperations",function(e,t,r){var o=e.blade;e.availableOperations=_.map(o.availableTypes,(function(e){return r.getOperation(e)})),e.openDetailsBlade=function(e){var r=angular.copy(e.detailBlade);r.customerOrder=o.customerOrder,r.isNew=!0,t.showBlade(r,o.parentBlade)},o.isLoading=!1}])},function(e,t,r){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,