!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){n(1),n(2),n(3),n(4),n(5),n(6),n(7),n(8),n(9),n(10),n(11),e.exports=n(12)},function(e,t){void 0!==AppDependencies&&AppDependencies.push("virtoCommerce.inventoryModule"),angular.module("virtoCommerce.inventoryModule",[]).run(["$rootScope","platformWebApp.mainMenuService","platformWebApp.widgetService","platformWebApp.authService","platformWebApp.metaFormsService",function(e,t,n,r,i){n.registerWidget({isVisible:function(e){return"Digital"!==e.productType&&r.checkPermission("inventory:update")},controller:"virtoCommerce.inventoryModule.inventoryWidgetController",template:"Modules/$(VirtoCommerce.Inventory)/Scripts/widgets/inventoryWidget.tpl.html"},"itemDetail"),n.registerWidget({size:[2,1],controller:"virtoCommerce.inventoryModule.fulfillmentAddressesWidgetController",template:"Modules/$(VirtoCommerce.Inventory)/Scripts/widgets/fulfillmentAddressesWidget.tpl.html"},"fulfillmentCenterDetail"),n.registerWidget({controller:"virtoCommerce.inventoryModule.storeFulfillmentWidgetController",template:"Modules/$(VirtoCommerce.Inventory)/Scripts/widgets/storeFulfillmentWidget.tpl.html"},"storeDetail"),i.registerMetaFields("inventoryDetails",[]),i.registerMetaFields("fulfillmentCenterDetails",[])}])},function(e,t){angular.module("virtoCommerce.inventoryModule").controller("virtoCommerce.inventoryModule.fulfillmentCenterDetailController",["$scope","platformWebApp.dialogService","platformWebApp.bladeNavigationService","virtoCommerce.inventoryModule.fulfillments","platformWebApp.common.countries","platformWebApp.metaFormsService",function(e,t,n,r,i,o){var l=e.blade;function a(e){l.currentEntity=angular.copy(e),l.origEntity=e,l.isLoading=!1}function s(){return!angular.equals(l.currentEntity,l.origEntity)&&l.hasUpdatePermission()}function d(){return s()&&e.formScope&&e.formScope.$valid}function u(){l.isLoading=!0,r.update({},l.currentEntity,(function(e){l.currentEntityId=e.id,l.refresh(!0)}))}l.updatePermission="inventory:fulfillment:edit",l.refresh=function(e){l.currentEntityId?(l.isLoading=!0,r.get({id:l.currentEntityId},(function(t){a(t),e&&l.parentBlade.refresh(!0)}))):a(l.currentEntity)},l.metaFields=l.metaFields?l.metaFields:o.getMetaFields("fulfillmentCenterDetail"),e.setForm=function(t){e.formScope=t},l.headIcon="fa fa-wrench",l.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:u,canExecuteMethod:d,permission:l.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(l.origEntity,l.currentEntity)},canExecuteMethod:s,permission:l.updatePermission},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){var i={id:"confirmDelete",title:"inventory.dialogs.fulfillment-delete.title",message:"inventory.dialogs.fulfillment-delete.message",callback:function(t){t&&(l.isLoading=!0,r.remove({ids:l.currentEntityId},(function(){e.bladeClose(),l.parentBlade.refresh(!0)}),(function(e){n.setError("Error "+e.status,l)})))}};t.showConfirmationDialog(i)},canExecuteMethod:function(){return null!==l.currentEntity.id&&void 0!==l.currentEntity.id},permission:"inventory:fulfillment:delete"}],l.onClose=function(e){n.showConfirmationIfNeeded(s(),d(),l,u,e,"core.dialogs.fulfillments-save.title","core.dialogs.fulfillments-save.message")},l.refresh()}])},function(e,t){angular.module("virtoCommerce.inventoryModule").controller("virtoCommerce.inventoryModule.fulfillmentListController",["$scope","virtoCommerce.inventoryModule.fulfillments","platformWebApp.bladeNavigationService","platformWebApp.bladeUtils","uiGridConstants","platformWebApp.uiGridHelper","platformWebApp.dialogService",function(e,t,n,r,i,o,l){e.uiGridConstants=i;var a=e.blade;function s(t,r){e.selectedNodeId=t.id;var i={id:"fulfillmentDetail",currentEntityId:t.id,currentEntity:t,title:r,subtitle:"inventory.blades.fulfillment-center-detail.subtitle",controller:"virtoCommerce.inventoryModule.fulfillmentCenterDetailController",template:"Modules/$(VirtoCommerce.Inventory)/Scripts/blades/fulfillment-center-detail.tpl.html"};n.showBlade(i,a)}a.title="core.blades.fulfillment-center-list.title",a.subtitle="core.blades.fulfillment-center-list.subtitle",a.refresh=function(n){a.isLoading=!0,t.search({searchPhrase:d.keyword?d.keyword:void 0,sort:o.getSortExpression(e),skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount},(function(t){return a.isLoading=!1,e.pageSettings.totalItems=t.totalCount,a.currentEntities=t.results,!0===n&&a.parentBlade.refresh(!0),t.results}))},a.selectNode=function(e){s(e,e.name)},a.headIcon="fa fa-wrench",a.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:a.refresh,canExecuteMethod:function(){return!0}},{name:"platform.commands.add",icon:"fas fa-plus",executeMethod:function(){s({maxReleasesPerPickBatch:20,pickDelay:30},"New Fulfillment center")},canExecuteMethod:function(){return!0},permission:"inventory:fulfillment:edit"}],e.delete=function(e){var r={id:"confirmDelete",title:"inventory.dialogs.fulfillment-delete.title",message:"inventory.dialogs.fulfillment-delete.message",callback:function(r){r&&(a.isLoading=!0,t.remove({ids:e.id},(function(){a.refresh(!0),a.isLoading=!1}),(function(e){n.setError("Error "+e.status,a)})))}};l.showConfirmationDialog(r)};var d=e.filter={};d.criteriaChanged=function(){e.pageSettings.currentPage>1?e.pageSettings.currentPage=1:a.refresh()},e.setGridOptions=function(t){o.initialize(e,t,(function(t){o.bindRefreshOnSortChanged(e)})),r.initializePagination(e)}}])},function(e,t){angular.module("virtoCommerce.inventoryModule").controller("virtoCommerce.inventoryModule.inventoryDetailController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.inventoryModule.inventories","platformWebApp.metaFormsService",function(e,t,n,r){var i=e.blade;function o(e){i.currentEntity=angular.copy(e),i.origEntity=e,i.isLoading=!1}function l(){return!angular.equals(i.currentEntity,i.origEntity)&&i.hasUpdatePermission()}function a(){return l()&&e.formScope&&e.formScope.$valid}i.updatePermission="inventory:update",i.refresh=function(){i.isLoading=!0,i.parentBlade.refresh().then((function(e){var t=_.findWhere(e,{fulfillmentCenterId:i.data.fulfillmentCenterId});o(angular.copy(t))}))},i.metaFields=i.metaFields?i.metaFields:r.getMetaFields("inventoryDetails"),e.setForm=function(t){e.formScope=t},e.saveChanges=function(){i.isLoading=!0,n.update({id:i.itemId},i.currentEntity,(function(){i.refresh()}))},i.onClose=function(n){t.showConfirmationIfNeeded(l(),a(),i,e.saveChanges,n,"inventory.dialogs.inventory-save.title","inventory.dialogs.inventory-save.message")},i.headIcon="fa fa-cubes",i.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:e.saveChanges,canExecuteMethod:a,permission:i.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(i.origEntity,i.currentEntity)},canExecuteMethod:l,permission:i.updatePermission}],e.datepickers={pod:!1,bod:!1},e.today=new Date,e.open=function(t,n){t.preventDefault(),t.stopPropagation(),e.datepickers[n]=!0},o(i.data)}])},function(e,t){angular.module("virtoCommerce.inventoryModule").controller("virtoCommerce.inventoryModule.inventoryFulfillmentcentersListController",["$scope","$q","$timeout","platformWebApp.bladeUtils","uiGridConstants","platformWebApp.uiGridHelper","platformWebApp.bladeNavigationService","virtoCommerce.inventoryModule.fulfillments",function(e,t,n,r,i,o,l,a){e.uiGridConstants=i;var s=e.blade,d=_.once((function(){_.any(e.items)&&n((function(){e.selectedNodeId=e.items[0],m(e.items[0])}),0,!1)}));function u(){if(e.hasMore){++e.pageSettings.currentPage,e.gridApi.infiniteScroll.saveScrollPercentage(),s.isLoading=!0;var t=p();a.searchFulfillmentCenterInventories(t,(function(t){_.each(t.results,c),e.items=e.items.concat(t.results),e.pageSettings.totalItems=t.totalCount,e.hasMore=t.results.length===e.pageSettings.itemsPerPageCount,e.gridApi.infiniteScroll.dataLoaded()})).$promise.finally((function(){s.isLoading=!1}))}}function c(e){e.productId||(e.productId=s.itemId)}s.refresh=function(){s.isLoading=!0;var n=t.defer();1!==e.pageSettings.currentPage&&(e.pageSettings.currentPage=1);var r=p();return a.searchFulfillmentCenterInventories(r,(function(t){_.each(t.results,c),e.items=t.results,e.pageSettings.totalItems=t.totalCount,e.hasMore=t.results.length===e.pageSettings.itemsPerPageCount})).$promise.finally((function(){s.isLoading=!1,d(),n.resolve(e.items)})),e.gridApi&&(e.items=[],e.gridApi.selection&&e.gridApi.selection.clearSelectedRows(),e.gridApi.infiniteScroll.resetScroll(!0,!0),e.gridApi.infiniteScroll.dataLoaded()),n.promise};var m=function(t){e.selectedNodeId=t.fulfillmentCenterId;var n={id:"inventoryDetailBlade",itemId:s.itemId,data:t,title:t.name,subtitle:"inventory.blades.inventory-detail.subtitle",controller:"virtoCommerce.inventoryModule.inventoryDetailController",template:"Modules/$(VirtoCommerce.Inventory)/Scripts/blades/inventory-detail.tpl.html"};l.showBlade(n,s)};s.selectNode=function(e){m(e)},s.headIcon="fa fa-cubes",s.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:s.refresh,canExecuteMethod:function(){return!0}},{name:"core.blades.fulfillment-center-list.subtitle",icon:"fa fa-wrench",executeMethod:function(){l.showBlade({id:"fulfillmentCenterList",controller:"virtoCommerce.inventoryModule.fulfillmentListController",template:"Modules/$(VirtoCommerce.Inventory)/Scripts/blades/fulfillment-center-list.tpl.html"},s.parentBlade)},canExecuteMethod:function(){return!0},permission:"inventory:fulfillment:edit"}];var f=e.filter={};function p(){return{searchPhrase:f.keyword?f.keyword:void 0,productId:s.itemId,sort:o.getSortExpression(e),skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount}}f.criteriaChanged=function(){e.pageSettings.currentPage>1?e.pageSettings.currentPage=1:s.refresh()},e.setGridOptions=function(t){r.initializePagination(e,!0),e.pageSettings.itemsPerPageCount=50,o.initialize(e,t,(function(t){e.gridApi=t,o.bindRefreshOnSortChanged(e),e.gridApi.infiniteScroll.on.needLoadMoreData(e,u)})),s.refresh()}}])},function(e,t){angular.module("virtoCommerce.inventoryModule").controller("virtoCommerce.inventoryModule.storeFulfillmentController",["$scope","$timeout","platformWebApp.bladeNavigationService","virtoCommerce.inventoryModule.fulfillments",function(e,t,n,r){function i(){e.fulfillmentCenterSelectorsShown=!0}e.fulfillmentCenterSelectorsShown=!0,e.saveChanges=function(){angular.copy(e.blade.currentEntity,e.blade.origEntity),e.bladeClose()},e.setForm=function(t){e.formScope=t},e.isValid=function(){return e.formScope&&e.formScope.$valid},e.cancelChanges=function(){e.bladeClose()},e.blade.refresh=function(){e.fulfillmentCenterSelectorsShown=!1,t(i,0)},e.openFulfillmentCentersList=function(){n.showBlade({id:"fulfillmentCenterList",controller:"virtoCommerce.inventoryModule.fulfillmentListController",template:"Modules/$(VirtoCommerce.Inventory)/Scripts/blades/fulfillment-center-list.tpl.html"},e.blade)},e.searchFulfillmentCenters=function(e){return r.search(e)},e.blade.headIcon="fa fa-archive",e.blade.isLoading=!1,e.blade.currentEntity=angular.copy(e.blade.entity),e.blade.origEntity=e.blade.entity}])},function(e,t){angular.module("virtoCommerce.inventoryModule").factory("virtoCommerce.inventoryModule.fulfillments",["$resource",function(e){return e("api/inventory/fulfillmentcenters",{},{get:{url:"api/inventory/fulfillmentcenters/:id"},update:{method:"PUT"},search:{url:"api/inventory/fulfillmentcenters/search",method:"POST"},searchFulfillmentCenterInventories:{url:"api/inventory/product/inventories/search",method:"POST"},getByIds:{url:"api/inventory/fulfillmentcenters/plenty",method:"POST",isArray:!0},updateBatch:{url:"api/inventory/fulfillmentcenters/batch",method:"POST",isArray:!0}})}])},function(e,t){angular.module("virtoCommerce.inventoryModule").factory("virtoCommerce.inventoryModule.inventories",["$resource",function(e){return e("api/inventory/products/:id",{id:"@Id"},{update:{method:"PUT"}})}])},function(e,t){angular.module("virtoCommerce.inventoryModule").controller("virtoCommerce.inventoryModule.fulfillmentAddressesWidgetController",["$scope","platformWebApp.bladeNavigationService","platformWebApp.metaFormsService",function(e,t,n){var r=e.widget.blade;e.address=r.currentEntity.address;var i=[{name:"countryCode",templateUrl:"countrySelector.html",priority:4},{templateUrl:"countryRegionSelector.html",priority:5},{name:"city",title:"inventory.widgets.fulfillmentWidget.address-detail.city",valueType:"ShortText",priority:6},{name:"line1",title:"inventory.widgets.fulfillmentWidget.address-detail.address1",valueType:"ShortText",priority:7},{name:"postalCode",title:"inventory.widgets.fulfillmentWidget.address-detail.zip-code",valueType:"ShortText",priority:9},{name:"email",title:"inventory.widgets.fulfillmentWidget.address-detail.email",valueType:"Email",priority:10},{name:"phone",title:"inventory.widgets.fulfillmentWidget.address-detail.phone",valueType:"ShortText",priority:11}],o=n.getMetaFields("fulfillmentAddressesWidget");o&&o.length&&(i=_.sortBy(i.concat(o),"priority")),e.openBlade=function(){var n={id:"coreAddressDetail",currentEntity:e.address?e.address:{isNew:!0},metaFields:i,title:r.title,subtitle:"inventory.widgets.fulfillmentWidget.address-detail.subtitle",controller:"virtoCommerce.coreModule.common.coreAddressDetailController",confirmChangesFn:function(e){r.currentEntity.address=e,e.isEmpty=!1,r.confirmChangesFn&&r.confirmChangesFn(e)},deleteFn:function(e){r.currentEntity.address={}},template:"Modules/$(VirtoCommerce.Core)/Scripts/common/blades/address-detail.tpl.html"};t.showBlade(n,e.blade)},e.$watch("blade.currentEntity",(function(t){t&&t.address&&(e.address=t.address)}))}])},function(e,t){angular.module("virtoCommerce.inventoryModule").controller("virtoCommerce.inventoryModule.fulfillmentWidgetController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.inventoryModule.fulfillments",function(e,t,n){var r=e.widget.blade;e.widget.refresh=function(){e.currentNumberInfo="...",n.query({},(function(t){e.currentNumberInfo=t.length}),(function(e){}))},e.openBlade=function(){t.showBlade({id:"fulfillmentCenterList",controller:"virtoCommerce.inventoryModule.fulfillmentListController",template:"Modules/$(VirtoCommerce.Inventory)/Scripts/fulfillment/blades/fulfillment-center-list.tpl.html"},r)},e.widget.refresh()}])},function(e,t){angular.module("virtoCommerce.inventoryModule").controller("virtoCommerce.inventoryModule.inventoryWidgetController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.inventoryModule.inventories",function(e,t,n){var r=e.blade;function i(){return e.currentInventory="...",n.query({id:r.itemId},(function(t){if(_.any(t)){e.currentInventory=_.reduce(t,(function(e,t){return e+t.inStockQuantity}),0);var n=_.reduce(t,(function(e,t){return e+t.reservedQuantity}),0);e.availableInventory=e.currentInventory-n}else e.currentInventory="N/A"}),(function(e){}))}e.openBlade=function(){if("..."!==e.currentInventory){var n={id:"inventoryFulfillmentcentersListBlade",itemId:r.itemId,parentWidgetRefresh:i,title:r.title,subtitle:"inventory.widgets.inventoryWidget.blade-subtitle",controller:"virtoCommerce.inventoryModule.inventoryFulfillmentcentersListController",template:"Modules/$(VirtoCommerce.Inventory)/Scripts/blades/inventory-fulfillmentcenters-list.tpl.html"};t.showBlade(n,r)}},e.$watch("blade.origItem.productType",(function(t){t&&"Digital"===t&&e.widget.widgetsInContainer.splice(e.widget.widgetsInContainer.indexOf(e.widget),1)})),i()}])},function(e,t){angular.module("virtoCommerce.inventoryModule").controller("virtoCommerce.inventoryModule.storeFulfillmentWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var n=e.widget.blade;e.openBlade=function(){var e={id:"storeChildBlade",entity:n.currentEntity,title:n.title,subtitle:"Fulfillment Centers of the Store",controller:"virtoCommerce.inventoryModule.storeFulfillmentController",template:"Modules/$(VirtoCommerce.Inventory)/Scripts/blades/store-fulfillment-centers.tpl.html"};t.showBlade(e,n)}}])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,