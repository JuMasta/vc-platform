!function(e){var t={};function i(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,o){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(o,n,function(t){return e[t]}.bind(null,n));return o},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){i(1),i(2),i(3),i(4),e.exports=i(5)},function(e,t){null!=AppDependencies&&AppDependencies.push("virtoCommerce.shippingModule"),angular.module("virtoCommerce.shippingModule",["ngSanitize"]).run(["platformWebApp.widgetService",function(e){e.registerWidget({controller:"virtoCommerce.shippingModule.storeShippingWidgetController",template:"Modules/$(VirtoCommerce.Shipping)/Scripts/widgets/storeShippingWidget.tpl.html"},"storeDetail"),e.registerWidget({controller:"platformWebApp.entitySettingsWidgetController",template:"$(Platform)/Scripts/app/settings/widgets/entitySettingsWidget.tpl.html"},"shippingMethodDetail")}])},function(e,t){angular.module("virtoCommerce.shippingModule").controller("virtoCommerce.shippingModule.shippingMethodDetailController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.shippingModule.shippingMethods","platformWebApp.settings",function(e,t,i,o){var n=e.blade;function r(e){n.title="shipping.labels."+e.typeName+".name",n.currentEntity=angular.copy(e),n.origEntity=e,n.isLoading=!1}function s(){return!angular.equals(n.currentEntity,n.origEntity)&&n.hasUpdatePermission()}function p(){return s()}n.refresh=function(e){n.isLoading=!0,n.shippingMethod.id?i.get({id:n.shippingMethod.id},(function(t){r(t),e&&n.parentBlade.refresh()}),(function(e){t.setError("Error "+e.status,n)})):r(n.shippingMethod)},n.onClose=function(i){t.showConfirmationIfNeeded(s(),p(),n,e.saveChanges,i,"shipping.dialogs.shipping-method-save.title","shipping.dialogs.shipping-method-save.message")},e.cancelChanges=function(){e.bladeClose()},e.saveChanges=function(){n.isLoading=!0,n.currentEntity.storeId=n.storeId,i.update({},n.currentEntity,(function(e){n.shippingMethod.id=e.id,n.refresh(!0)}),(function(e){t.setError("Error "+e.status,n)}))},e.setForm=function(t){e.formScope=t},e.getDictionaryValues=function(e,t){t(e.allowedValues)},n.openDictionarySettingManagement=function(e){var i={id:"settingDetailChild",isApiSave:!0,controller:"platformWebApp.settingDictionaryController",template:"$(Platform)/Scripts/app/settings/blades/setting-dictionary.tpl.html"};switch(e){case"TaxTypes":_.extend(i,{currentEntityId:"VirtoCommerce.Core.General.TaxTypes",parentRefresh:function(e){n.taxTypes=e}})}t.showBlade(i,n)},n.headIcon="fa fa-archive",n.toolbarCommands=[{name:"platform.commands.save",icon:"fa fa-save",executeMethod:e.saveChanges,canExecuteMethod:p,permission:n.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(n.origEntity,n.currentEntity)},canExecuteMethod:s,permission:n.updatePermission}],n.taxTypes=o.getValues({id:"VirtoCommerce.Core.General.TaxTypes"}),n.refresh()}])},function(e,t){angular.module("virtoCommerce.shippingModule").controller("virtoCommerce.shippingModule.shippingMethodListController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.shippingModule.shippingMethods",function(e,t,i){var o=e.blade;o.refresh=function(){o.isLoading=!0,i.search({storeId:o.storeId},(function(e){o.isLoading=!1,o.currentEntities=e.results,o.selectedShippingMethods=_.findWhere(o.currentEntities,{isActive:!0})}),(function(e){t.setError("Error "+e.status,o)}))},e.selectNode=function(i){e.selectedNodeId=i.typeName;var n={id:"shippingMethodDetail",shippingMethod:i,storeId:o.storeId,subtitle:"shipping.blades.shipping-method-detail.subtitle",controller:"virtoCommerce.shippingModule.shippingMethodDetailController",template:"Modules/$(VirtoCommerce.Shipping)/Scripts/blades/shippingMethod-detail.tpl.html"};t.showBlade(n,e.blade)},o.isLoading=!1,o.headIcon="fa fa-archive",e.sortableOptions={stop:function(t,i){for(var o=0;o<e.blade.currentEntities.length;o++)e.blade.currentEntities[o].priority=o+1},axis:"y",cursor:"move"},o.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:o.refresh,canExecuteMethod:function(){return!0}}],o.refresh()}])},function(e,t){angular.module("virtoCommerce.shippingModule").factory("virtoCommerce.shippingModule.shippingMethods",["$resource",function(e){return e("api/shipping",{},{getAllRegistered:{method:"GET",isArray:!0},search:{method:"POST",url:"api/shipping/search"},get:{url:"api/shipping/:id"},update:{method:"PUT"}})}])},function(e,t){angular.module("virtoCommerce.shippingModule").controller("virtoCommerce.shippingModule.storeShippingWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var i=e.blade;e.openBlade=function(){var e={id:"storeChildBlade",storeId:i.currentEntity.id,title:i.title,subtitle:"shipping.widgets.store-shipping-widget.blade-subtitle",controller:"virtoCommerce.shippingModule.shippingMethodListController",template:"Modules/$(VirtoCommerce.Shipping)/Scripts/blades/shippingMethod-list.tpl.html"};t.showBlade(e,i)}}])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,