!function(e){var t={};function o(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,i){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(i,n,function(t){return e[t]}.bind(null,n));return i},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){o(1),o(2),o(3),o(4),o(5),o(6),o(7),o(8),o(9),o(10),e.exports=o(11)},function(e,t){void 0!==AppDependencies&&AppDependencies.push("virtoCommerce.sitemapsModule"),angular.module("virtoCommerce.sitemapsModule",[]).run(["platformWebApp.widgetService","platformWebApp.toolbarService","platformWebApp.breadcrumbHistoryService",function(e,t,o){e.registerWidget({controller:"virtoCommerce.sitemapsModule.storeSitemapsWidgetController",template:"Modules/$(VirtoCommerce.Sitemaps)/Scripts/widgets/store-sitemaps-widget.tpl.html"},"storeDetail"),t.register(o.getBackButtonInstance(),"virtoCommerce.sitemapsModule.staticContentItemSelectController")}])},function(e,t){angular.module("virtoCommerce.customerModule").controller("virtoCommerce.customerModule.memberItemSelectController",["$scope","$timeout","virtoCommerce.customerModule.members","platformWebApp.dialogService","platformWebApp.bladeUtils","platformWebApp.uiGridHelper","virtoCommerce.customerModule.memberTypesResolverService",function(e,t,o,i,n,r,a){e.uiGridConstants=r.uiGridConstants;var s=n.bladeNavigationService,l=e.blade;l.selectedItems=[],l.headIcon="fa fa-user",l.currentEntity={},l.setSelectedNode=function(t){e.selectedNodeId=t.id},l.refresh=function(){l.isLoading=!0,o.search({memberTypes:l.options.memberTypes,memberType:l.memberType,memberId:l.currentEntity.id,keyword:m.keyword?m.keyword:void 0,sort:r.getSortExpression(e),skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount},(function(t){var o;e.listEntries=t.results,e.pageSettings.totalItems=t.totalCount,_.each(t.results,(function(e){(o=a.resolve(e.memberType))&&(e._memberTypeIcon=o.icon)})),function(){if(l.breadcrumbs){var e=l.breadcrumbs.slice(0);if(_.all(e,(function(e){return e.id!==l.currentEntity.id}))){var t=d(l.currentEntity.id,l.currentEntity.name);e.push(t)}l.breadcrumbs=e}else l.breadcrumbs=[d(void 0,"sitemapsModule.blades.addVendorItems.bread-crumb-top")]}(),l.isLoading=!1}))},e.options=angular.extend({showCheckingMultiple:!0,allowCheckingItem:!0,selectedItemIds:[]},l.options),e.selectNode=function(t){if(e.selectedNodeId!==t.id)if(l.setSelectedNode(t),e.options.selectItemFn&&e.options.selectItemFn(t),"organization"===t.memberType.toLowerCase()){var o={id:l.id,breadcrumbs:l.breadcrumbs,subtitle:"customer.blades.member-list.subtitle",subtitleValues:{name:t.name},currentEntity:t,disableOpenAnimation:!0,controller:l.controller,template:l.template,isClosingDisabled:!0};s.showBlade(o,l.parentBlade)}else l.showDetailBlade(t)};var m=e.filter={};function d(e,t){return{id:e,name:t,blade:l,navigate:function(e){e.blade.disableOpenAnimation=!0,s.showBlade(e.blade),e.blade.refresh()}}}function c(o){o.grid.registerDataChangeCallback((function(i){t((function(){_.each(e.items,(function(t){_.some(e.options.selectedItemIds,(function(e){return e===t.id}))&&o.selection.selectRow(t)}))}))}),[e.uiGridConstants.dataChange.ROW]),o.selection.on.rowSelectionChanged(e,(function(t){e.options.checkItemFn&&e.options.checkItemFn(t.entity,t.isSelected),t.isSelected?_.contains(e.options.selectedItemIds,t.entity.id)||(e.options.selectedItemIds.push(t.entity.id),l.selectedItems.push(t.entity)):(e.options.selectedItemIds=_.without(e.options.selectedItemIds,t.entity.id),l.selectedItems=_.filter(l.selectedItems,(function(e){return e.id!==t.entity.id})))})),r.bindRefreshOnSortChanged(e)}m.criteriaChanged=function(){null===m.keyword&&(l.memberType=void 0),e.pageSettings.currentPage>1?e.pageSettings.currentPage=1:l.refresh()},e.setGridOptions=function(t){r.initialize(e,t,c),n.initializePagination(e)}}])},function(e,t){angular.module("virtoCommerce.sitemapsModule").controller("virtoCommerce.sitemapsModule.sitemapItemsAddCustomItemController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var o=e.blade;o.toolbarCommands=[{name:"sitemapsModule.blades.addCustomItem.toolbar.save",icon:"fa fa-save",executeMethod:function(){o.confirmChangesFn([{title:o.currentEntity.urlTemplate,objectType:"Custom",urlTemplate:o.currentEntity.urlTemplate}],o)},canExecuteMethod:function(){return e.formScope&&e.formScope.$valid}}],e.setForm=function(t){e.formScope=t},o.currentEntity={},o.isLoading=!1}])},function(e,t){angular.module("virtoCommerce.sitemapsModule").controller("virtoCommerce.sitemapsModule.sitemapDetailController",["$scope","platformWebApp.bladeUtils","platformWebApp.uiGridHelper","platformWebApp.bladeNavigationService","virtoCommerce.sitemapsModule.sitemapApi","platformWebApp.dialogService",function(e,t,o,i,n,r){var a=e.blade;function s(e){a.currentEntity=angular.copy(e),a.origEntity=e,a.isLoading=!1}function l(){a.refreshSitemapItems(),m()}function m(){a.parentRefresh&&a.parentRefresh()}function d(){return!angular.equals(a.origEntity,a.currentEntity)&&a.hasUpdatePermission()}function c(){return d()&&e.formScope&&e.formScope.$valid}if(a.updatePermission="sitemaps:update",a.refresh=function(){a.isLoading=!0,n.get({id:a.currentEntity.id},(function(e){s(e),a.title=a.currentEntity.location}))},a.refreshSitemapItems=function(){n.searchSitemapItems({sitemapId:a.currentEntity.id,sort:o.getSortExpression(e),skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount},(function(t){e.pageSettings.totalItems=t.totalCount,a.currentEntities=t.results,a.isLoading=!1}))},a.onClose=function(t){i.showConfirmationIfNeeded(d(),c(),a,e.saveChanges,t,"sitemapsModule.dialogs.discardChanges.title","sitemapsModule.dialogs.discardChanges.message")},e.setForm=function(t){e.formScope=t},e.hasStaticContentItems=function(){var e=_.find(a.currentEntities,(function(e){return"contentitem"===e.objectType.toLowerCase()||"folder"===e.objectType.toLowerCase()}));return null!=e&&null!=e},e.saveChanges=function(){e.errorMessage=null,"sitemap.xml"===a.currentEntity.location.toLowerCase()?e.errorMessage="sitemapsModule.blades.sitemap.formSitemap.sitemapIndexErrorMessage":(a.isLoading=!0,n.search({storeId:a.currentEntity.storeId,location:a.currentEntity.location},(function(t){_.any(t.results,(function(e){return a.inNew||e.id!==a.currentEntity.id}))?(e.errorMessage="sitemapsModule.blades.sitemap.formSitemap.sitemapSitemapLocationExistErrorMessage",a.isLoading=!1):a.isNew?n.addSitemap(a.currentEntity,(function(){angular.copy(a.currentEntity,a.origEntity),i.closeBlade(a,a.parentRefresh)})):n.updateSitemap(a.currentEntity,(function(){a.refresh(),m()}))})))},a.isNew)a.title="sitemapsModule.blades.sitemap.newSitemapTitle",s(a.currentEntity);else{a.title=a.currentEntity.location,a.toolbarCommands=[{name:"platform.commands.save",icon:"fa fa-save",executeMethod:e.saveChanges,canExecuteMethod:c},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(a.origEntity,a.currentEntity)},canExecuteMethod:d,permission:a.updatePermission},{name:"sitemapsModule.blades.sitemap.toolbar.addItems",icon:"fa fa-plus",executeMethod:function(){var e={id:"addSitemapItemsBlade",sitemap:a.currentEntity,storeId:a.currentEntity.storeId,parentRefresh:l,title:"sitemapsModule.blades.addItems.title",controller:"virtoCommerce.sitemapsModule.sitemapItemsAddController",template:"Modules/$(VirtoCommerce.Sitemaps)/Scripts/blades/sitemap-items-add.tpl.html"};i.showBlade(e,a)},canExecuteMethod:function(){return!0},permission:a.updatePermission},{name:"sitemapsModule.blades.sitemap.toolbar.removeItems",icon:"fa fa-trash-o",executeMethod:function(){a.removeItems(e.gridApi.selection.getSelectedRows())},canExecuteMethod:function(){return e.gridApi&&_.any(e.gridApi.selection.getSelectedRows())},permission:a.updatePermission}],a.removeItems=function(e){var t={id:"confirmDelete",title:"sitemapsModule.dialogs.sitemapItems-delete.title",message:"sitemapsModule.dialogs.sitemapItems-delete.message",callback:function(t){if(t){a.isLoading=!0;var o=_.pluck(e,"id");n.removeSitemapItems({itemIds:o},l)}}};r.showConfirmationDialog(t)},e.setGridOptions=function(o){e.gridOptions=o,o.onRegisterApi=function(t){t.core.on.sortChanged(e,(function(){a.isLoading||a.refreshSitemapItems()}))},t.initializePagination(e,!0),e.$watch("pageSettings.currentPage",(function(){a.refreshSitemapItems()})),a.refresh()}}}])},function(e,t){angular.module("virtoCommerce.sitemapsModule").controller("virtoCommerce.sitemapsModule.sitemapDownloadController",["$scope","virtoCommerce.sitemapsModule.sitemapApi","platformWebApp.bladeNavigationService",function(e,t,o){var i=e.blade;i.isLoading=!1,e.$on("new-notification-event",(function(e,t){i.notification&&t.id==i.notification.id&&angular.copy(t,i.notification)})),t.download({storeId:i.storeId,baseUrl:i.baseUrl},(function(e){i.notification=e}),(function(t){o.setError("Error "+t.status,e.blade)}))}])},function(e,t){angular.module("virtoCommerce.sitemapsModule").controller("virtoCommerce.sitemapsModule.sitemapItemsAddController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.sitemapsModule.sitemapApi","virtoCommerce.sitemapsModule.knownSitemapItemTypes",function(e,t,o,i){var n=e.blade;function r(e,t,o){return o?_.all(e,(function(e){return e.id!=t.id}))&&e.push(t):e=_.reject(e,(function(e){return e.id==t.id})),n.error=void 0,e}function a(e,i){i.isLoading=!0,o.addSitemapItems({sitemapId:n.sitemap.id},e,(function(){t.closeBlade(i,n.parentRefresh)}))}e.availableTypes=i.types,n.isLoading=!1,e.addItem=function(e){var o=angular.extend(e.newBlade,{id:e.newBlade.id||"sitemapItem-details",selectedItems:[],storeId:n.storeId,checkItemFn:r,confirmChangesFn:a});t.showBlade(o,n.parentBlade)}}]).run(["virtoCommerce.sitemapsModule.knownSitemapItemTypes",function(e){function t(e){return{title:e.name,imageUrl:e.imageUrl,objectId:e.id,objectType:e.type||e.seoObjectType}}var o={id:"addSitemapCatalogItems",title:"sitemapsModule.blades.addCatalogItems.title",controller:"virtoCommerce.catalogModule.catalogItemSelectController",template:"Modules/$(VirtoCommerce.Catalog)/Scripts/blades/common/catalog-items-select.tpl.html",breadcrumbs:[],toolbarCommands:[{name:"sitemapsModule.blades.addCatalogItems.toolbar.addSelected",icon:"fa fa-plus",executeMethod:function(e){var i=_.map(o.selectedItems,t);o.confirmChangesFn(i,e)},canExecuteMethod:function(){return _.any(o.selectedItems)}}],options:{allowCheckingCategory:!0,checkItemFn:function(e,t){o.selectedItems=o.checkItemFn(o.selectedItems,e,t)}}};e.registerType({type:"CatalogItem",icon:"fa-folder",newBlade:o}),e.registerType({type:"VendorItem",icon:"fa-balance-scale",newBlade:{title:"sitemapsModule.blades.addVendorItems.title",controller:"virtoCommerce.customerModule.memberItemSelectController",template:"Modules/$(VirtoCommerce.Sitemaps)/Scripts/blades/member-items-select.tpl.html",toolbarCommands:[{name:"sitemapsModule.blades.addVendorItems.toolbar.addSelected",icon:"fa fa-plus",executeMethod:function(e){var o=_.map(e.selectedItems,t);e.confirmChangesFn(o,e)},canExecuteMethod:function(e){return _.any(e.selectedItems)}}],options:{memberTypes:["vendor"]}}}),e.registerType({type:"CustomItem",icon:"fa-link",newBlade:{id:"addCustomItemBlade",title:"sitemapsModule.blades.addCustomItem.title",controller:"virtoCommerce.sitemapsModule.sitemapItemsAddCustomItemController",template:"Modules/$(VirtoCommerce.Sitemaps)/Scripts/blades/sitemap-add-custom-item.tpl.html"}});e.registerType({type:"StaticContentItem",icon:"fa-code",newBlade:{id:"addSitemapStaticContentItems",title:"sitemapsModule.blades.addStaticContentItems.title",controller:"virtoCommerce.sitemapsModule.staticContentItemSelectController",template:"Modules/$(VirtoCommerce.Sitemaps)/Scripts/blades/static-content-items-select.tpl.html",headIcon:"fa fa-code",breadcrumbs:null,currentEntity:{}}})}]).factory("virtoCommerce.sitemapsModule.knownSitemapItemTypes",["platformWebApp.bladeNavigationService",function(e){return{types:[],registerType:function(e){this.types.push(e)}}}])},function(e,t){angular.module("virtoCommerce.sitemapsModule").controller("virtoCommerce.sitemapsModule.sitemapListController",["$window","$scope","$modal","platformWebApp.bladeUtils","platformWebApp.bladeNavigationService","platformWebApp.dialogService","platformWebApp.uiGridHelper","virtoCommerce.sitemapsModule.sitemapApi",function(e,t,o,i,n,r,a,s){var l=t.blade;l.refresh=function(){l.isLoading=!0,s.search({storeId:l.store.id,skip:(t.pageSettings.currentPage-1)*t.pageSettings.itemsPerPageCount,take:t.pageSettings.itemsPerPageCount},(function(e){t.pageSettings.totalItems=e.totalCount,t.listEntries=e.results,l.isLoading=!1}))},l.selectNode=function(e,o){t.selectedNodeId=e.id;var i={id:"sitemap-detail",isNew:o,currentEntity:e,parentRefresh:l.refresh,controller:"virtoCommerce.sitemapsModule.sitemapDetailController",template:"Modules/$(VirtoCommerce.Sitemaps)/Scripts/blades/sitemap-detail.tpl.html"};n.showBlade(i,l)},l.headIcon="fa fa-sitemap",l.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:l.refresh,canExecuteMethod:function(){return!0}},{name:"platform.commands.add",icon:"fa fa-plus",executeMethod:function(){l.selectNode({location:"sitemap/",urlTemplate:"{slug}",storeId:l.store.id,items:[]},!0)},canExecuteMethod:function(){return!0},permission:"sitemaps:create"},{name:"platform.commands.delete",icon:"fa fa-trash-o",executeMethod:function(){var e;e=t.gridApi.selection.getSelectedRows(),n.closeChildrenBlades(l,(function(){var t={id:"confirmDeleteSitemaps",title:"sitemapsModule.dialogs.sitemap-delete.title",message:"sitemapsModule.dialogs.sitemap-delete.message",callback:function(t){if(t){l.isLoading=!0;var o=_.pluck(e,"id");s.remove({ids:o},l.refresh)}}};r.showConfirmationDialog(t)}))},canExecuteMethod:function(){return t.gridApi&&_.any(t.gridApi.selection.getSelectedRows())},permission:"sitemaps:delete"},{name:"sitemapsModule.blades.sitemapList.toolbar.download",icon:"fa fa-download",executeMethod:function(){var e=l.store.url||l.store.secureUrl,t={id:"confirmBaseUrl",originalBaseUrl:angular.copy(e),baseUrl:e,templateUrl:"Modules/$(VirtoCommerce.Sitemaps)/Scripts/dialogs/confirm-base-url-dialog.tpl.html",controller:"virtoCommerce.sitemapsModule.baseUrlDialogController",resolve:{dialog:function(){return t}}};o.open(t).result.then((function(e){if(e){var t={id:"sitemap-download",title:"sitemapsModule.blades.download.title",headIcon:"fa fa-download",controller:"virtoCommerce.sitemapsModule.sitemapDownloadController",template:"Modules/$(VirtoCommerce.Sitemaps)/Scripts/blades/sitemap-download.tpl.html",storeId:l.store.id,baseUrl:e};n.showBlade(t,l)}}))},canExecuteMethod:function(){return!l.isLoading&&t.pageSettings.totalItems>0}}],t.setGridOptions=function(e){a.initialize(t,e,(function(e){a.bindRefreshOnSortChanged(t)})),i.initializePagination(t)}}])},function(e,t){angular.module("virtoCommerce.sitemapsModule").controller("virtoCommerce.sitemapsModule.staticContentItemSelectController",["$scope","$timeout","virtoCommerce.contentModule.contentApi","platformWebApp.bladeNavigationService","platformWebApp.bladeUtils","platformWebApp.uiGridHelper",function(e,t,o,i,n,r){var a=e.blade;function s(e,t){return{id:e,name:t,blade:a,navigate:function(e){e.blade.disableOpenAnimation=!0,i.showBlade(e.blade),e.blade.refresh()}}}function l(o){e.$watch("pageSettings.currentPage",o.pagination.seek),o.grid.registerDataChangeCallback((function(i){t((function(){_.each(e.items,(function(t){_.some(e.options.selectedItemIds,(function(e){return e===t.id}))&&o.selection.selectRow(t)}))}))}),[e.uiGridConstants.dataChange.ROW]),o.selection.on.rowSelectionChanged(e,(function(t){e.options.checkItemFn&&e.options.checkItemFn(t.entity,t.isSelected),t.isSelected?_.contains(e.options.selectedItemIds,t.entity.id)||(e.options.selectedItemIds.push(t.entity.id),a.selectedItems.push(t.entity)):(e.options.selectedItemIds=_.without(e.options.selectedItemIds,t.entity.id),a.selectedItems=_.filter(a.selectedItems,(function(e){return e.id!==t.entity.id})))}))}function m(e){return{title:e.relativeUrl,urlTemplate:e.relativeUrl,objectType:"folder"!==e.type.toLowerCase()?"ContentItem":e.type}}a.selectedItems=[],a.toolbarCommands=[{name:"sitemapsModule.blades.addStaticContentItems.toolbar.addSelected",icon:"fa fa-plus",canExecuteMethod:function(e){return _.any(e.selectedItems)},executeMethod:function(e){var t=_.map(e.selectedItems,m);e.confirmChangesFn(t,e)}}],a.refresh=function(){a.isLoading=!0,o.query({contentType:"pages",storeId:a.storeId,keyword:a.searchKeyword,folderUrl:a.currentEntity.url},(function(t){e.pageSettings.totalItems=t.length,_.each(t,(function(e){e.id=e.url,e.isImage=e.mimeType&&e.mimeType.startsWith("image/"),e.isOpenable=e.mimeType&&(e.mimeType.startsWith("application/j")||e.mimeType.startsWith("text/"))})),e.listEntries=t,a.isLoading=!1,function(){if(a.breadcrumbs){var e=a.breadcrumbs.slice(0);if(_.all(e,(function(e){return e.id!==a.currentEntity.id}))){var t=s(a.currentEntity.id,a.currentEntity.name);e.push(t)}a.breadcrumbs=e}else a.breadcrumbs=[s(void 0,"sitemapsModule.blades.addStaticContentItems.bread-crumb-top")]}()}),(function(e){i.setError("Error "+e.status,a),a.isLoading=!1}))},a.setSelectedNode=function(t){e.selectedNodeId=t.id},e.uiGridConstants=r.uiGridConstants,e.setGridOptions=function(t){r.initialize(e,t,l)},e.selectNode=function(t){if(e.selectedNodeId!==t.id&&(a.setSelectedNode(t),e.options.selectItemFn&&e.options.selectItemFn(t),"folder"===t.type.toLowerCase())){var o={confirmChangesFn:a.confirmChangesFn,id:a.id,contentType:a.contentType,storeId:a.storeId,languages:a.languages,currentEntity:t,breadcrumbs:a.breadcrumbs,title:a.title,subtitle:a.subtitle,controller:a.controller,template:a.template,disableOpenAnimation:!0,isClosingDisabled:a.isClosingDisabled};i.showBlade(o,a.parentBlade)}},e.options=angular.extend({showCheckingMultiple:!0,allowCheckingItem:!0,selectedItemIds:[]},a.options),n.initializePagination(e,!0),a.refresh()}])},function(e,t){angular.module("virtoCommerce.sitemapsModule").controller("virtoCommerce.sitemapsModule.baseUrlDialogController",["$scope","$modalInstance","dialog",function(e,t,o){angular.extend(e,o),e.confirm=function(){t.close(e.baseUrl)},e.cancel=function(){t.dismiss("cancel")}}])},function(e,t){angular.module("virtoCommerce.sitemapsModule").factory("virtoCommerce.sitemapsModule.sitemapApi",["$resource",function(e){return e("api/sitemaps/:id",{},{search:{method:"POST",url:"api/sitemaps/search"},addSitemap:{method:"POST"},updateSitemap:{method:"PUT"},removeSitemap:{method:"DELETE"},searchSitemapItems:{method:"POST",url:"api/sitemaps/items/search"},addSitemapItems:{method:"POST",url:"api/sitemaps/:sitemapId/items"},removeSitemapItems:{method:"DELETE",url:"api/sitemaps/:sitemapId/items"},download:{method:"GET",url:"api/sitemaps/download"}})}])},function(e,t){angular.module("virtoCommerce.sitemapsModule").controller("virtoCommerce.sitemapsModule.storeSitemapsWidgetController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var o=e.blade;e.openBlade=function(){var e={id:"storeSitemapsList",title:"sitemapsModule.blades.sitemapList.title",subtitle:"sitemapsModule.blades.sitemapList.subtitle",controller:"virtoCommerce.sitemapsModule.sitemapListController",template:"Modules/$(VirtoCommerce.Sitemaps)/Scripts/blades/sitemap-list.tpl.html",store:o.currentEntity};t.showBlade(e,o)}}])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,