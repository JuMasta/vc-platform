!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){n(1),n(2),n(3),n(4),n(5),n(6),n(7),n(8),e.exports=n(9)},function(e,t){void 0!==AppDependencies&&AppDependencies.push("virtoCommerce.searchModule"),angular.module("virtoCommerce.searchModule",[]).config(["$stateProvider",function(e){e.state("workspace.searchIndexModule",{url:"/searchIndex",controller:["$scope","platformWebApp.bladeNavigationService",function(e,t){t.showBlade({id:"searchIndex",title:"search.blades.document-type-list.title",headIcon:"fa fa-search",controller:"virtoCommerce.searchModule.indexesListController",template:"Modules/$(VirtoCommerce.Search)/Scripts/blades/indexes-list.tpl.html",isClosingDisabled:!0}),e.moduleName="vc-core vc-search-index"}],templateUrl:"$(Platform)/Scripts/common/templates/home.tpl.html"})}]).run(["platformWebApp.mainMenuService","$state","platformWebApp.pushNotificationTemplateResolver","platformWebApp.bladeNavigationService",function(e,t,n,o){n.register({priority:900,satisfy:function(e,t){return"history"===t&&"IndexProgressPushNotification"===e.notifyType},template:"Modules/$(VirtoCommerce.Search)/Scripts/notifications/historyIndex.tpl.html",action:function(e){var t={id:"indexProgress",notification:e,controller:"virtoCommerce.searchModule.indexProgressController",template:"Modules/$(VirtoCommerce.Search)/Scripts/blades/index-progress.tpl.html"};o.showBlade(t)}}),n.register({priority:900,satisfy:function(e,t){return"header-notification"===t&&"IndexProgressPushNotification"===e.notifyType},template:"Modules/$(VirtoCommerce.Search)/Scripts/notifications/headerNotification.tpl.html",action:function(e){t.go("workspace.pushNotificationsHistory",e)}}),e.addMenuItem({path:"browse/searchIndex",icon:"fa fa-search",title:"search.main-menu-title.search-index",priority:25,action:function(){t.go("workspace.searchIndexModule")},permission:"search:index:access"})}])},function(e,t){angular.module("virtoCommerce.searchModule").controller("virtoCommerce.searchModule.indexDetailController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.searchModule.searchIndexation",function(e,t,n){var o=e.blade;o.initialize=function(e){o.currentEntity=e,o.isLoading=!1},o.headIcon="fa fa-search",o.toolbarCommands=[{name:"search.commands.rebuild-index",icon:"fa fa-recycle",index:2,executeMethod:function(e){n.index([{documentType:e.documentType,documentIds:[e.currentEntityId]}],(function(n){var o={id:"indexProgress",notification:n,parentRefresh:e.parentRefresh,controller:"virtoCommerce.searchModule.indexProgressController",template:"Modules/$(VirtoCommerce.Search)/Scripts/blades/index-progress.tpl.html"};t.showBlade(o,e.parentBlade||e)}))},canExecuteMethod:function(){return!0},permission:"search:index:rebuild"},{name:"search.commands.copy-to-clipboard",icon:"fa fa-clipboard",executeMethod:function(){var e=document.getElementById("indexData"),t=document.createRange();t.selectNode(e),window.getSelection().removeAllRanges(),window.getSelection().addRange(t),document.execCommand("copy"),window.getSelection().removeAllRanges()},canExecuteMethod:function(){return!0}}],o.title=o.currentEntity.name,o.subtitle="search.blades.index-detail.subtitle",o.data||(o.title="search.blades.index-detail.title-new",o.subtitle=void 0),o.initialize(o.data)}])},function(e,t){angular.module("virtoCommerce.searchModule").controller("virtoCommerce.searchModule.indexProgressController",["$scope","virtoCommerce.searchModule.searchIndexation",function(e,t){var n=e.blade;e.$on("new-notification-event",(function(e,t){n.notification&&t.id==n.notification.id&&(n.progressPercentage=t.processedCount/t.totalCount*100,angular.copy(t,n.notification),t.finished&&n.parentRefresh&&n.parentRefresh())})),n.toolbarCommands=[{name:"platform.commands.cancel",icon:"fa fa-times",canExecuteMethod:function(){return n.notification&&!n.notification.finished},executeMethod:function(){t.cancel({taskId:n.notification.id})}}],n.title=n.notification.title,n.headIcon="fa fa-search",n.isLoading=!1}])},function(e,t){angular.module("virtoCommerce.searchModule").controller("virtoCommerce.searchModule.indexesListController",["$scope","platformWebApp.bladeNavigationService","platformWebApp.dialogService","virtoCommerce.searchModule.searchIndexation","platformWebApp.ui-grid.extension",function(e,t,n,o,r){var i=e.blade;i.isLoading=!1,i.manageIndexMode=!1,i.showBackupIndicesCommand={name:"Show backup indices",icon:"fas fa-eye",canExecuteMethod:function(){return!0},executeMethod:function(){i.manageIndexMode=!i.manageIndexMode,i.refresh(),i.manageIndexMode?(i.showBackupIndicesCommand.name="search.commands.hide-backup-indices",i.showBackupIndicesCommand.icon="fas fa-eye-slash"):(i.showBackupIndicesCommand.name="search.commands.show-backup-indices",i.showBackupIndicesCommand.icon="fas fa-eye")}},o.swapIndexSupported({},(function(t){i.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",canExecuteMethod:function(){return!0},executeMethod:function(){i.refresh()}},{name:"search.commands.rebuild-index",icon:"fa fa-recycle",canExecuteMethod:function(){return e.gridApi&&_.any(e.gridApi.selection.getSelectedRows())},executeMethod:function(){e.rebuildIndex(e.gridApi.selection.getSelectedRows())},permission:"search:index:rebuild"}],t.result&&i.toolbarCommands.push(i.showBackupIndicesCommand)})),i.refresh=function(){i.isLoading=!0,(i.manageIndexMode?o.getAll:o.get)({},(function(e){i.currentEntities=e,i.isLoading=!1}))},e.rebuildIndex=function(e){var r=_.groupBy(e,(function(e){return e.documentType})),a={id:"confirmRebuildIndex",callback:function(e){var n=_.map(r,(function(t){return{documentType:_.first(t).documentType,deleteExistingIndex:e}}));o.index(n,(function(e){var n={id:"indexProgress",notification:e,parentRefresh:i.parentRefresh,controller:"virtoCommerce.searchModule.indexProgressController",template:"Modules/$(VirtoCommerce.Search)/Scripts/blades/index-progress.tpl.html"};t.showBlade(n,i.parentBlade||i)}))}};n.showDialog(a,"Modules/$(VirtoCommerce.Search)/Scripts/dialogs/reindex-dialog.tpl.html","platformWebApp.confirmDialogController")},e.swapIndex=function(t){e.loading=!0,o.swapIndex({documentType:t},(function(e){i.refresh()}))},e.setGridOptions=function(t,n){return e.gridOptions=n,r.tryExtendGridOptions(t,n),n},i.refresh()}])},function(e,t){angular.module("virtoCommerce.searchModule").factory("virtoCommerce.searchModule.searchIndexation",["$resource",function(e){return e("api/search/indexes",{},{get:{method:"GET",isArray:!0},getAll:{method:"GET",url:"api/search/indexes/all",isArray:!0},getDocIndex:{method:"GET",url:"api/search/indexes/index/:documentType/:documentId",isArray:!0},index:{method:"POST",url:"api/search/indexes/index"},cancel:{method:"GET",url:"api/search/indexes/tasks/{taskId}/cancel",params:{taskId:"@taskId"}},swapIndexSupported:{method:"GET",url:"api/search/indexes/swapIndexSupported"},swapIndex:{method:"POST",url:"api/search/indexes/swapIndex"}})}])},function(e,t){angular.module("virtoCommerce.searchModule").controller("virtoCommerce.searchModule.indexWidgetController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.searchModule.searchIndexation","moment",function(e,t,n,o){var r=e.blade,i="YYYYMMDDHHmmss";function a(){n.getDocIndex({documentType:e.widget.documentType,documentId:r.currentEntityId},(function(t){_.any(t)&&(e.index=t[0],e.indexDate=o.utc(e.index.indexationdate,i)),e.loading=!1,c()}))}function c(){!e.loading&&r.currentEntity&&(e.widget.UIclass=!e.index||e.indexDate.isBefore(o.utc(r.currentEntity.modifiedDate,i))?"error":"")}e.loading=!0,e.openBlade=function(){var n={id:"detailChild",currentEntityId:r.currentEntityId,currentEntity:r.currentEntity,data:e.index,indexDate:e.indexDate,documentType:e.widget.documentType,parentRefresh:a,controller:"virtoCommerce.searchModule.indexDetailController",template:"Modules/$(VirtoCommerce.Search)/Scripts/blades/index-detail.tpl.html"};t.showBlade(n,r)},e.$watch("blade.currentEntity",c),a()}])},function(e,t,n){},function(e,t,n){},function(e,t,n){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,