!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){n(1),n(2),n(3),n(4),n(5),n(6),n(7),n(8),n(9),n(10),n(11),n(12),n(13),n(14),n(15),n(16),n(17),n(18),n(19),n(20),n(21),n(22),n(23),n(24),n(25),n(26),n(27),n(28),e.exports=n(29)},function(e,t){null!=AppDependencies&&AppDependencies.push("virtoCommerce.marketingModule"),angular.module("virtoCommerce.marketingModule",[]).config(["$stateProvider",function(e){e.state("workspace.marketing",{url:"/marketing",templateUrl:"$(Platform)/Scripts/common/templates/home.tpl.html",controller:["$scope","platformWebApp.bladeNavigationService",function(e,t){t.showBlade({id:"marketing",title:"marketing.blades.marketing-main.title",controller:"virtoCommerce.marketingModule.marketingMainController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/common/marketing-main.tpl.html",isClosingDisabled:!0})}]})}]).factory("virtoCommerce.marketingModule.marketingMenuItemService",(function(){return{items:[],register:function(e){this.items.push(e)}}})).run(["$http","$compile","platformWebApp.mainMenuService","platformWebApp.widgetService","platformWebApp.toolbarService","platformWebApp.breadcrumbHistoryService","$state","platformWebApp.authService","virtoCommerce.storeModule.stores","platformWebApp.permissionScopeResolver","platformWebApp.bladeNavigationService","virtoCommerce.coreModule.common.dynamicExpressionService","virtoCommerce.marketingModule.marketingMenuItemService",function(e,t,n,o,i,r,a,l,c,s,d,m,u){var p={path:"browse/marketing",icon:"fa fa-flag",title:"marketing.main-menu-title",priority:40,action:function(){a.go("workspace.marketing")},permission:"marketing:access"};n.addMenuItem(p),u.register({id:"1",name:"Promotions",entityName:"promotion",icon:"fa-area-chart"}),u.register({id:"2",name:"Dynamic content",entityName:"dynamicContent",icon:"fa-calendar-o"}),i.register(r.getBackButtonInstance(),"virtoCommerce.marketingModule.itemsDynamicContentListController"),i.register(r.getBackButtonInstance(),"virtoCommerce.marketingModule.placeholdersDynamicContentListController"),i.register(r.getBackButtonInstance(),"virtoCommerce.marketingModule.addPublishingContentItemsStepController"),i.register(r.getBackButtonInstance(),"virtoCommerce.marketingModule.addPublishingPlaceholdersStepController"),o.registerWidget({controller:"virtoCommerce.marketingModule.couponsWidgetController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/promotion/widgets/couponsWidget.tpl.html"},"promotionDetail");var g={type:"MarketingStoreSelectedScope",title:"Only for promotions in selected stores",selectFn:function(e,t){var n={id:"store-pick",title:this.title,subtitle:"Select stores",currentEntity:this,onChangesConfirmedFn:t,dataService:c,controller:"platformWebApp.security.scopeValuePickFromSimpleListController",template:"$(Platform)/Scripts/app/security/blades/common/scope-value-pick-from-simple-list.tpl.html"};d.showBlade(n,e)}};s.register(g),m.registerExpression({id:"ConditionHasNoSalePrice",displayName:"Apply only to full price items and not sales items"});m.registerExpression({groupName:"Catalog",id:"DynamicContentConditionCategoryIs",templateURL:"expression-ConditionCategoryIs.html",displayName:"Specific category"}),m.registerExpression({groupName:"Catalog",id:"DynamicContentConditionProductIs",templateURL:"expression-ConditionEntryIs.html",displayName:"Specific product"}),e.get("Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicConditions/templates.html").then((function(e){t(e.data)}))}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.marketingMainController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.marketingModule.marketingMenuItemService",function(e,t,n){var o;e.selectedNodeId=null,e.blade.openBlade=function(n){e.selectedNodeId=n.id;var o={id:"marketingMainListChildren",title:n.name,subtitle:"Marketing service",controller:n.controller||"virtoCommerce.marketingModule."+n.entityName+"ListController",template:n.template||"Modules/$(VirtoCommerce.Marketing)/Scripts/"+n.entityName+"/blades/"+n.entityName+"-list.tpl.html"};t.showBlade(o,e.blade)},e.blade.headIcon="fa fa-flag",o=_.sortBy(n.items,"id"),e.blade.currentEntities=o,e.blade.isLoading=!1,e.blade.openBlade(o[0])}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.dynamicContentListController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var n=e.blade;e.selectedNodeId=null,n.openBlade=function(o){e.selectedNodeId=o.id;var i={id:"dynamicContentList",title:o.name,subtitle:o.subname,controller:"virtoCommerce.marketingModule."+o.entityName+"DynamicContentListController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/"+o.entityName+"/list.tpl.html"};t.showBlade(i,n)},e.blade.headIcon="fa fa-calendar-o",n.currentEntities=[{id:"DC_1",name:"marketing.blades.items.list.title",subname:"marketing.blades.items.list.subtitle",title:"marketing.blades.dynamicContent-list.menu.items.title",description:"marketing.blades.dynamicContent-list.menu.items.description",icon:"fa-inbox",entityName:"items"},{id:"DC_2",name:"marketing.blades.placeholders.list.title",subname:"marketing.blades.placeholders.list.subtitle",title:"marketing.blades.dynamicContent-list.menu.placeholders.title",description:"marketing.blades.dynamicContent-list.menu.placeholders.description",icon:"fa-location-arrow",entityName:"placeholders"},{id:"DC_3",name:"marketing.blades.publishing.list.title",subname:"marketing.blades.publishing.list.subtitle",title:"marketing.blades.dynamicContent-list.menu.publishing.title",description:"marketing.blades.dynamicContent-list.menu.publishing.description",icon:"fa-paperclip",entityName:"publishing"}],n.isLoading=!1}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.addContentItemsElementController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.catalogModule.categories","virtoCommerce.catalogModule.items","platformWebApp.dynamicProperties.api",function(e,t,n,o,i){var r=e.blade;e.pageSettings={},e.pageSettings.totalItems=0,e.pageSettings.currentPage=1,e.pageSettings.numPages=5,e.pageSettings.itemsPerPageCount=999,r.addFolder=function(){var e={name:"",description:"",parentFolderId:r.chosenFolder,items:[],childrenFolders:[]};r.addNewFolder(e)},r.addContentItem=function(){e.pageSettings.currentPage,e.pageSettings.itemsPerPageCount,e.pageSettings.itemsPerPageCount;i.query({id:"VirtoCommerce.MarketingModule.Core.Model.DynamicContentItem"},(function(e){angular.forEach(e,(function(e){e.values=[],e.displayNames=[]}));var t={name:"",description:"",folderId:r.chosenFolder,dynamicProperties:e};r.addNewContentItem(t)}))},e.blade.isLoading=!1}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.itemDetailController",["$scope","virtoCommerce.marketingModule.dynamicContent.contentItems","platformWebApp.bladeNavigationService","platformWebApp.dialogService","platformWebApp.dynamicProperties.dictionaryItemsApi","platformWebApp.settings","platformWebApp.dynamicProperties.api",function(e,t,n,o,i,r,a){var l=e.blade;l.updatePermission="marketing:update",l.refresh=function(){l.isNew?l.initialize():t.get({id:l.entity.id},(function(e){a.search({objectType:l.entity.objectType,take:1e4},(function(t){var n=t.results;_.each(n,(function(t){t.values=[];var n=_.find(e.dynamicProperties,(function(e){return e.id===t.id}));n&&(t.values=n.values)})),e.dynamicProperties=n,l.entity=e,l.currentEntity=e,l.initialize()}))}))},l.IsChanged=function(){let e=angular.equals(l.origEntity,l.currentEntity);if(e)return!1;if(l.origEntity.name!==l.currentEntity.name||l.origEntity.description!==l.currentEntity.description)return!0;if(e=angular.equals(_.omit(l.origEntity,["dynamicProperties"]),_.omit(l.currentEntity,["dynamicProperties"])),!(l.origEntity.dynamicProperties&&l.currentEntity.dynamicProperties&&l.origEntity.dynamicProperties.length&&l.currentEntity.dynamicProperties.length))return e;for(var t of l.origEntity.dynamicProperties){let n=l.currentEntity.dynamicProperties.find(e=>e.name==t.name);if(t.isDictionary){let o=n.values.filter(e=>null!=e.value).map(e=>e.value.id);e=t.values.length?t.values.every(e=>o.includes(e.valueId)):!o.length}else if(t.isArray){let o=t.values.map(e=>e.value),i=n.values.map(e=>e.value);e=t.values.length==n.values.length&&o.every(e=>i.includes(e))}else n.values=0==t.values.length?n.values.filter(e=>""!=e.value):n.values,e=angular.equals(t.values,n.values);if(!e)break}return!e},l.initialize=function(){l.toolbarCommands=[],l.isNew||(l.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:function(){l.saveChanges()},canExecuteMethod:function(){return l.IsChanged()&&e.formScope.$valid},permission:l.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(l.origEntity,l.currentEntity)},canExecuteMethod:function(){return l.IsChanged()},permission:l.updatePermission},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){var e={id:"confirmDeleteContentItem",title:"marketing.dialogs.content-item-delete.title",message:"marketing.dialogs.content-item-delete.message",callback:function(e){e&&(l.isLoading=!0,t.delete({ids:[l.currentEntity.id]},(function(){l.parentBlade.initializeBlade(),n.closeBlade(l)})))}};o.showConfirmationDialog(e)},canExecuteMethod:function(){return!0},permission:l.updatePermission}]),l.toolbarCommands.push({name:"marketing.commands.manage-type-properties",icon:"fa fa-edit",executeMethod:function(){var e={id:"dynamicPropertyList",objectType:l.currentEntity.objectType,controller:"platformWebApp.dynamicPropertyListController",template:"$(Platform)/Scripts/app/dynamicProperties/blades/dynamicProperty-list.tpl.html"};n.showBlade(e,l)},canExecuteMethod:function(){return angular.isDefined(l.currentEntity.objectType)}}),l.origEntity=l.entity,l.currentEntity=angular.copy(l.origEntity),l.isLoading=!1},l.saveChanges=function(){l.isLoading=!0,l.isNew?t.save(l.currentEntity,(function(e){l.parentBlade.initializeBlade(),n.closeBlade(l)})):t.update(l.currentEntity,(function(e){l.parentBlade.initializeBlade(),l.origEntity=angular.copy(l.currentEntity),l.isLoading=!1}))},e.editDictionary=function(e){var t={id:"propertyDictionary",isApiSave:!0,currentEntity:e,controller:"platformWebApp.propertyDictionaryController",template:"$(Platform)/Scripts/app/dynamicProperties/blades/property-dictionary.tpl.html",onChangesConfirmedFn:function(){l.currentEntity.dynamicProperties=angular.copy(l.currentEntity.dynamicProperties)}};n.showBlade(t,l)},e.getDictionaryValues=function(e,t){i.query({id:e.objectType,propertyId:e.id},t)},e.setForm=function(t){e.formScope=t},l.headIcon="fa fa-inbox",r.getValues({id:"VirtoCommerce.Core.General.Languages"},(function(t){e.languages=t})),l.refresh()}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.itemFolderDetailController",["$scope","virtoCommerce.marketingModule.dynamicContent.folders","platformWebApp.bladeNavigationService","platformWebApp.dialogService",function(e,t,n,o){var i=e.blade;i.updatePermission="marketing:update",i.saveChanges=function(){i.isLoading=!0,i.isNew?t.save(i.currentEntity,(function(e){i.parentBlade.initializeBlade(),n.closeBlade(i),i.isLoading=!1})):t.update(i.currentEntity,(function(){i.parentBlade.initializeBlade(),i.origEntity=angular.copy(i.currentEntity),i.isLoading=!1}))},i.headIcon="fa fa-inbox",i.isNew||(i.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:i.saveChanges,canExecuteMethod:function(){return!angular.equals(i.origEntity,i.currentEntity)&&!e.formScope.$invalid},permission:i.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(i.origEntity,i.currentEntity)},canExecuteMethod:function(){return!angular.equals(i.origEntity,i.currentEntity)},permission:i.updatePermission},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){var e={id:"confirmDeleteContentItem",title:"marketing.dialogs.content-folder-delete.title",message:"marketing.dialogs.content-folder-delete.message",callback:function(e){e&&(i.isLoading=!0,t.delete({ids:[i.currentEntity.id]},(function(){n.closeBlade(i);var e=i.currentEntity.outline.split(";"),t=e[e.length-2];i.parentBlade.chosenFolder=t,i.parentBlade.initializeBlade()})))}};o.showConfirmationDialog(e)},canExecuteMethod:function(){return!0},permission:i.updatePermission}]),e.setForm=function(t){e.formScope=t},i.origEntity=i.entity,i.currentEntity=angular.copy(i.origEntity),i.isLoading=!1}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.itemsDynamicContentListController",["$scope","platformWebApp.bladeUtils","platformWebApp.uiGridHelper","platformWebApp.dialogService","virtoCommerce.marketingModule.dynamicContent.folders","virtoCommerce.marketingModule.dynamicContent.contentItems",function(e,t,n,o,i,r){var a=t.bladeNavigationService,l=e.blade;function c(e){var t={id:"listItemChild",title:"marketing.blades.items.content-item-details.title-new",subtitle:"marketing.blades.items.content-item-details.subtitle-new",entity:e,isNew:!0,controller:"virtoCommerce.marketingModule.itemDetailController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/items/item-detail.tpl.html"};a.showBlade(t,l)}function s(e){var t={id:"listItemChild",title:"marketing.blades.items.folder-details.title-new",subtitle:"marketing.blades.items.folder-details.subtitle-new",entity:e,isNew:!0,controller:"virtoCommerce.marketingModule.itemFolderDetailController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/items/itemFolder-detail.tpl.html"};a.showBlade(t,l)}function d(t){return{id:t.id,name:t.name,navigate:function(){e.selectNode(t)}}}l.headIcon="fa fa-inbox",l.chosenFolderId="ContentItem",l.currentEntity={},l.initializeBlade=function(){l.refresh()},l.addNew=function(){a.closeChildrenBlades(l,(function(){e.selectedNodeId=null;var t={id:"listItemChild",title:"marketing.blades.items.add.title",subtitle:"marketing.blades.items.add.subtitle",chosenFolder:l.chosenFolderId,addNewContentItem:c,addNewFolder:s,controller:"virtoCommerce.marketingModule.addContentItemsElementController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/items/add.tpl.html"};a.showBlade(t,l)}))},l.refresh=function(){l.isLoading=!0,r.search({skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount,keyword:l.searchKeyword,folderId:l.chosenFolderId,sort:n.getSortExpression(e),responseGroup:"18"},(function(t){_.each(t.results,(function(e){e.isFolder="DynamicContentFolder"===e.objectType})),e.listEntries=t.results,e.pageSettings.totalItems=t.totalCount,function(){if(l.breadcrumbs){var e=_.find(l.breadcrumbs,(function(e){return e.id===l.currentEntity.id}));if(e){var t=l.breadcrumbs.indexOf(e);l.breadcrumbs=l.breadcrumbs.slice(0,t+1)}else e=d(l.currentEntity),l.breadcrumbs.push(e)}else l.breadcrumbs=[d({id:"ContentItem",name:"marketing.blades.items.list.bread-crumb-top",isFolder:!0})]}(),l.isLoading=!1}))},l.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:l.refresh,canExecuteMethod:function(){return!0}},{name:"platform.commands.add",icon:"fas fa-plus",executeMethod:l.addNew,canExecuteMethod:function(){return!0}},{name:"platform.commands.delete",icon:"fa fa-trash",executeMethod:function(){e.deleteItems(e.gridApi.selection.getSelectedRows())},canExecuteMethod:function(){return e.gridApi&&_.any(e.gridApi.selection.getSelectedRows())}}],(e.filter={}).criteriaChanged=function(){e.pageSettings.currentPage>1?e.pageSettings.currentPage=1:l.refresh()},e.clearKeyword=function(){l.searchKeyword=null,l.refresh()},e.selectNode=function(t){a.closeChildrenBlades(l,(function(){t.id&&t.isFolder?(l.currentEntity=t,l.chosenFolderId=t.id,l.refresh()):e.openDetailsBlade(t)}))},e.openDetailsBlade=function(t){e.selectedNodeId=t.id;var n={id:"listItemChild",entity:t,isNew:!1};t.isFolder?(n.title="marketing.blades.items.folder-details.title",n.subtitle="marketing.blades.items.folder-details.subtitle",n.controller="virtoCommerce.marketingModule.itemFolderDetailController",n.template="Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/items/itemFolder-detail.tpl.html"):(n.title="marketing.blades.items.content-item-details.title",n.subtitle="marketing.blades.items.content-item-details.subtitle",n.controller="virtoCommerce.marketingModule.itemDetailController",n.template="Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/items/item-detail.tpl.html"),a.showBlade(n,l)},e.deleteItems=function(e){a.closeChildrenBlades(l,(function(){var t={id:"confirmDeleteContentItemsFolder",title:"marketing.dialogs.content-item-folder-delete.title",message:"marketing.dialogs.content-item-folder-delete.message",callback:function(t){if(t){l.isLoading=!0;var n=_.filter(e,(function(e){return e.isFolder}));n.length&&i.delete({ids:_.pluck(n,"id")},l.refresh);var o=_.filter(e,(function(e){return!e.isFolder}));o.length&&r.delete({ids:_.pluck(o,"id")},l.refresh)}}};o.showConfirmationDialog(t)}))},e.setGridOptions=function(n){e.gridOptions=n,n.onRegisterApi=function(t){t.core.on.sortChanged(e,(function(){l.isLoading||l.refresh()}))},t.initializePagination(e)}}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.addPlaceholderElementController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.catalogModule.categories","virtoCommerce.catalogModule.items",function(e,t,n,o){var i=e.blade;i.addFolder=function(){var e={outline:"",name:"",description:"",parentFolderId:i.chosenFolder};i.addNewFolder(e)},i.addPlaceholder=function(){var e={name:"",description:"",imageUrl:"Modules/$(VirtoCommerce.Marketing)/Content/images/noimage.png",folderId:i.chosenFolder};i.addNewPlaceholder(e)},e.blade.isLoading=!1}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.addFolderPlaceholderController",["$scope","virtoCommerce.marketingModule.dynamicContent.folders","platformWebApp.bladeNavigationService","platformWebApp.dialogService",function(e,t,n,o){var i=e.blade;i.updatePermission="marketing:update",i.initialize=function(){i.origEntity=i.entity,i.currentEntity=angular.copy(i.origEntity),i.isLoading=!1},i.saveChanges=function(){i.isNew?t.save({},i.currentEntity,(function(){i.parentBlade.initialize(),n.closeBlade(i)})):t.update({},i.currentEntity,(function(){i.origEntity=angular.copy(i.currentEntity),i.parentBlade.initialize()}))},i.isNew||(i.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:function(){i.saveChanges()},canExecuteMethod:function(){return!angular.equals(i.origEntity,i.currentEntity)&&!e.formScope.$invalid},permission:i.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(i.origEntity,i.currentEntity)},canExecuteMethod:function(){return!angular.equals(i.origEntity,i.currentEntity)},permission:i.updatePermission},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){var e={id:"confirmDeleteContentPlaceholdersFolder",title:"marketing.dialogs.placeholders-folder-delete.title",message:"marketing.dialogs.placeholders-folder-delete.message",callback:function(e){e&&(i.isLoading=!0,t.delete({ids:[i.currentEntity.id]},(function(){var e=i.currentEntity.outline.split(";"),t=e[e.length-2];i.parentBlade.chosenFolder=t,i.parentBlade.initialize(),n.closeBlade(i)})))}};o.showConfirmationDialog(e)},canExecuteMethod:function(){return!0},permission:i.updatePermission}]),e.setForm=function(t){e.formScope=t},i.headIcon="fa fa-location-arrow",i.initialize()}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.placeholdersDynamicContentListController",["$scope","platformWebApp.bladeUtils","platformWebApp.uiGridHelper","platformWebApp.dialogService","virtoCommerce.marketingModule.dynamicContent.folders","virtoCommerce.marketingModule.dynamicContent.contentPlaces",function(e,t,n,o,i,r){var a=t.bladeNavigationService,l=e.blade;function c(e){a.closeChildrenBlades(l,(function(){var t={id:"listItemChild",title:"marketing.blades.placeholders.folder-details.title-new",subtitle:"marketing.blades.placeholders.folder-details.subtitle-new",entity:e,isNew:!0,controller:"virtoCommerce.marketingModule.addFolderPlaceholderController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/placeholders/folder-details.tpl.html"};a.showBlade(t,l)}))}function s(e){a.closeChildrenBlades(l,(function(){var t={id:"listItemChild",title:"marketing.blades.placeholders.placeholder-details.title-new",subtitle:"marketing.blades.placeholders.placeholder-details.subtitle-new",entity:e,isNew:!0,controller:"virtoCommerce.marketingModule.placeholderDetailController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/placeholders/placeholder-details.tpl.html"};a.showBlade(t,l)}))}function d(t){return{id:t.id,name:t.name,navigate:function(){e.selectNode(t)}}}l.headIcon="fa fa-location-arrow",l.chosenFolderId="ContentPlace",l.currentEntity={},l.initialize=function(){l.refresh()},l.addNew=function(){a.closeChildrenBlades(l,(function(){e.selectedNodeId=null;var t={id:"listItemChild",title:"marketing.blades.placeholders.add.title",subtitle:"marketing.blades.placeholders.add.subtitle",chosenFolder:l.chosenFolderId,addNewFolder:c,addNewPlaceholder:s,controller:"virtoCommerce.marketingModule.addPlaceholderElementController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/placeholders/add.tpl.html"};a.showBlade(t,l)}))},l.refresh=function(){l.isLoading=!0,r.search({skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount,keyword:l.searchKeyword,folderId:l.chosenFolderId,sort:n.getSortExpression(e),responseGroup:"20"},(function(t){_.each(t.results,(function(e){e.isFolder="DynamicContentFolder"===e.objectType})),e.listEntries=t.results,e.pageSettings.totalItems=t.totalCount,function(){if(l.breadcrumbs){var e=_.find(l.breadcrumbs,(function(e){return e.id===l.currentEntity.id}));if(e){var t=l.breadcrumbs.indexOf(e);l.breadcrumbs=l.breadcrumbs.slice(0,t+1)}else e=d(l.currentEntity),l.breadcrumbs.push(e)}else l.breadcrumbs=[d({id:"ContentPlace",name:"marketing.blades.placeholders.list.bread-crumb-top",isFolder:!0})]}(),l.isLoading=!1}))},l.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:l.refresh,canExecuteMethod:function(){return!0}},{name:"platform.commands.add",icon:"fas fa-plus",executeMethod:l.addNew,canExecuteMethod:function(){return!0}},{name:"platform.commands.delete",icon:"fa fa-trash",executeMethod:function(){e.deleteItems(e.gridApi.selection.getSelectedRows())},canExecuteMethod:function(){return e.gridApi&&_.any(e.gridApi.selection.getSelectedRows())}}],(e.filter={}).criteriaChanged=function(){e.pageSettings.currentPage>1?e.pageSettings.currentPage=1:l.refresh()},e.clearKeyword=function(){l.searchKeyword=null,l.refresh()},e.selectNode=function(t){a.closeChildrenBlades(l,(function(){t.id&&t.isFolder?(l.currentEntity=t,l.chosenFolderId=t.id,l.refresh()):e.openDetailsBlade(t)}))},e.openDetailsBlade=function(t){e.selectedNodeId=t.id;var n={id:"listItemChild",entity:t,isNew:!1};t.isFolder?(n.title="marketing.blades.placeholders.folder-details.title-new",n.subtitle="marketing.blades.placeholders.folder-details.subtitle-new",n.controller="virtoCommerce.marketingModule.addFolderPlaceholderController",n.template="Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/placeholders/folder-details.tpl.html"):(n.title="marketing.blades.placeholders.placeholder-details.title",n.subtitle="marketing.blades.placeholders.placeholder-details.subtitle",n.controller="virtoCommerce.marketingModule.placeholderDetailController",n.template="Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/placeholders/placeholder-details.tpl.html"),a.showBlade(n,l)},e.deleteItems=function(e){a.closeChildrenBlades(l,(function(){var t={id:"confirmDeleteContentPlaceholdersFolder",title:"marketing.dialogs.placeholders-folder-delete.title",message:"marketing.dialogs.placeholders-folder-delete.message",callback:function(t){if(t){l.isLoading=!0;var n=_.filter(e,(function(e){return e.isFolder}));n.length&&i.delete({ids:_.pluck(n,"id")},l.refresh);var o=_.filter(e,(function(e){return!e.isFolder}));o.length&&r.delete({ids:_.pluck(o,"id")},l.refresh)}}};o.showConfirmationDialog(t)}))},e.setGridOptions=function(n){e.gridOptions=n,n.onRegisterApi=function(t){t.core.on.sortChanged(e,(function(){l.isLoading||l.refresh()}))},t.initializePagination(e)}}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.placeholderDetailController",["$scope","virtoCommerce.marketingModule.dynamicContent.contentPlaces","platformWebApp.bladeNavigationService","FileUploader","platformWebApp.dialogService",function(e,t,n,o,i){var r=e.blade;r.updatePermission="marketing:update",r.origEntity=r.entity,r.currentEntity=angular.copy(r.origEntity),r.initialize=function(){if(!e.uploader&&r.hasUpdatePermission()){var a=e.uploader=new o({scope:e,headers:{Accept:"application/json"},url:"api/assets?folderUrl=placeholders-images",autoUpload:!0,removeAfterUpload:!0});a.onSuccessItem=function(e,t,n,o){r.currentEntity.imageUrl=t[0].url},a.onAfterAddingAll=function(e){n.setError(null,r)},a.onErrorItem=function(e,t,o,i){n.setError(e._file.name+" failed: "+(t.message?t.message:o),r)}}r.isNew||(e.blade.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:r.saveChanges,canExecuteMethod:function(){return!angular.equals(r.origEntity,r.currentEntity)&&!e.formScope.$invalid},permission:r.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(r.origEntity,r.currentEntity)},canExecuteMethod:function(){return!angular.equals(r.origEntity,r.currentEntity)},permission:r.updatePermission},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){var e={id:"confirmDeleteContentPlaceholder",title:"marketing.dialogs.content-placeholder-delete.title",message:"marketing.dialogs.content-placeholder-delete.message",callback:function(e){e&&(r.isLoading=!0,t.delete({ids:[r.currentEntity.id]},(function(){r.parentBlade.initialize(),n.closeBlade(r)})))}};i.showConfirmationDialog(e)},canExecuteMethod:function(){return!0},permission:r.updatePermission}]),r.isLoading=!1},r.saveChanges=function(){r.isLoading=!0,r.isNew?t.save({},r.currentEntity,(function(e){r.parentBlade.initialize(),n.closeBlade(r)})):t.update({},r.currentEntity,(function(e){r.parentBlade.initialize(),r.origEntity=angular.copy(r.currentEntity),r.isLoading=!1}))},e.setForm=function(t){e.formScope=t},e.blade.headIcon="fa fa-location-arrow",r.initialize()}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.addPublishingContentItemsStepController",["$scope","virtoCommerce.marketingModule.dynamicContent.contentItems","platformWebApp.bladeNavigationService","platformWebApp.bladeUtils","platformWebApp.uiGridHelper",function(e,t,n,o,i){var r=e.blade;function a(e){r.chosenFolder&&angular.equals(r.chosenFolder,e.id)||(r.chosenFolder=e.id,r.currentEntity=e,r.refresh())}function l(e){return{id:e.id,name:e.name,navigate:function(){a(e)}}}r.chosenFolder="ContentItem",r.currentEntity={},r.refresh=function(){r.isLoading=!0,t.search({skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount,folderId:r.chosenFolder,sort:i.getSortExpression(e),responseGroup:"18"},(function(t){_.each(t.results,(function(e){e.isFolder="DynamicContentFolder"===e.objectType})),r.currentEntity.listEntries=t.results,e.pageSettings.totalItems=t.totalCount,function(){if(r.breadcrumbs){var e,t=_.findLastIndex(r.breadcrumbs,{id:r.chosenFolder});t>-1?e=r.breadcrumbs.slice(0,t+1):(e=r.breadcrumbs.slice(0)).push(l(r.currentEntity)),r.breadcrumbs=e}else r.breadcrumbs=[l({id:"ContentItem",name:"marketing.blades.publishing.add-content-items.bread-crumb-top"})]}(),r.isLoading=!1}))},r.publication.contentItems.forEach((function(e){t.get({id:e.id},(function(t){var n=_.find(r.parentBlade.origEntity.contentItems,(function(t){return t.id===e.id}));angular.isUndefined(n)||(n.path=t.path,n.outline=t.outline,n.dynamicProperties=t.dynamicProperties,n.objectType=t.objectType),e.path=t.path,e.outline=t.outline,e.dynamicProperties=t.dynamicProperties,e.objectType=t.objectType}))})),r.deleteAllContentItems=function(){r.publication.contentItems=[],e.gridApi.grid.queueGridRefresh()},r.deleteContentItem=function(t){r.publication.contentItems=_.filter(r.publication.contentItems,(function(e){return!angular.equals(t.id,e.id)})),e.gridApi.grid.queueGridRefresh()},r.selectNode=function(t){t.isFolder?a(t):(r.publication.contentItems.push(t),e.gridApi.grid.queueGridRefresh())},e.setGridOptions=function(t){e.gridOptions=t,t.onRegisterApi=function(t){t.grid.registerRowsProcessor((function(t){var n=0;return t.forEach((function(e){e.visible=e.entity.isFolder||_.all(r.publication.contentItems,(function(t){return t.id!==e.entity.id})),e.visible&&n++})),e.filteredEntitiesCount=n,t}),90),t.core.on.sortChanged(e,(function(){r.isLoading||r.refresh()}))},o.initializePagination(e)}}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.addPublishingPlaceholdersStepController",["$scope","virtoCommerce.marketingModule.dynamicContent.contentPlaces","platformWebApp.bladeNavigationService","platformWebApp.bladeUtils","platformWebApp.uiGridHelper",function(e,t,n,o,i){var r=e.blade;function a(e){r.chosenFolder&&angular.equals(r.chosenFolder,e.id)?(r.chosenFolder=e.parentFolderId,r.currentEntity=void 0):(r.chosenFolder=e.id,r.currentEntity=e,r.refresh())}function l(e){return{id:e.id,name:e.name,navigate:function(){a(e)}}}r.chosenFolder="ContentPlace",r.currentEntity={},r.refresh=function(){r.isLoading=!0,t.search({folderId:r.chosenFolder,skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount,sort:i.getSortExpression(e),responseGroup:"20"},(function(t){_.each(t.results,(function(e){e.isFolder="DynamicContentFolder"===e.objectType})),r.currentEntity.listEntries=t.results,e.pageSettings.totalItems=t.totalCount,function(){if(r.breadcrumbs){var e,t=_.findLastIndex(r.breadcrumbs,{id:r.chosenFolder});t>-1?e=r.breadcrumbs.slice(0,t+1):(e=r.breadcrumbs.slice(0)).push(l(r.currentEntity)),r.breadcrumbs=e}else r.breadcrumbs=[l({id:"ContentPlace",name:"marketing.blades.publishing.add-placeholders.bread-crumb-top"})]}(),r.isLoading=!1}))},_.each(r.publication.contentPlaces,(function(e){t.get({id:e.id},(function(t){var n=_.find(r.parentBlade.origEntity.contentPlaces,(function(t){return t.id===e.id}));angular.isUndefined(n)||(n.path=t.path,n.outline=t.outline),e.path=t.path,e.outline=t.outline}))})),r.deleteAllPlaceholder=function(){r.publication.contentPlaces=[],e.gridApi.grid.queueGridRefresh()},r.deletePlaceholder=function(t){r.publication.contentPlaces=_.filter(r.publication.contentPlaces,(function(e){return!angular.equals(t.id,e.id)})),e.gridApi.grid.queueGridRefresh()},r.selectNode=function(t){t.isFolder?a(t):(r.publication.contentPlaces.push(t),e.gridApi.grid.queueGridRefresh())},e.setGridOptions=function(t){e.gridOptions=t,t.onRegisterApi=function(t){t.grid.registerRowsProcessor((function(t){var n=0;return t.forEach((function(e){e.visible=e.entity.isFolder||_.all(r.publication.contentPlaces,(function(t){return t.id!==e.entity.id})),e.visible&&n++})),e.filteredEntitiesCount=n,t}),90),t.core.on.sortChanged(e,(function(){r.isLoading||r.refresh()}))},o.initializePagination(e)}}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.publishingDynamicContentListController",["$scope","platformWebApp.bladeUtils","platformWebApp.uiGridHelper","platformWebApp.dialogService","virtoCommerce.marketingModule.dynamicContent.contentPublications",function(e,t,n,o,i){var r=t.bladeNavigationService,a=e.blade;a.headIcon="fa fa-paperclip",a.isLoading=!1,a.initialize=function(){a.refresh()},a.removePublishings=function(e){r.closeChildrenBlades(a,(function(){var t={id:"confirmDeletePublishings",title:"marketing.dialogs.publication-delete.title",message:"marketing.dialogs.publication-delete.message",callback:function(t){if(t){var n=_.pluck(e,"id");i.remove({ids:n},a.refresh)}}};o.showConfirmationDialog(t)}))},a.refresh=function(){a.isLoading=!0,i.search({skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount,sort:n.getSortExpression(e),responseGroup:"8",keyword:a.searchKeyword},(function(t){e.listEntries=t.results,e.pageSettings.totalItems=t.totalCount,a.isLoading=!1}))},a.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",canExecuteMethod:function(){return!0},executeMethod:a.refresh},{name:"platform.commands.add",icon:"fas fa-plus",canExecuteMethod:function(){return!0},executeMethod:function(){e.selectNode({},!0)}},{name:"platform.commands.delete",icon:"fa fa-trash",canExecuteMethod:function(){return e.gridApi&&_.any(e.gridApi.selection.getSelectedRows())},executeMethod:function(){return a.removePublishings(e.gridApi.selection.getSelectedRows())}}],e.clearKeyword=function(){a.searchKeyword=null,a.refresh()},e.selectNode=function(t,n){e.selectedNodeId=t.id;var o={isNew:n,controller:"virtoCommerce.marketingModule.publicationDetailController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/publishing/publication-detail.tpl.html"};n?angular.extend(o,{id:"add_publishing_element",title:"marketing.blades.publishing.publishing-main-step.title-new",subtitle:"marketing.blades.publishing.publishing-main-step.subtitle-new"}):angular.extend(o,{id:"edit_publishing_element",title:"marketing.blades.publishing.publishing-main-step.title",subtitle:"marketing.blades.publishing.publishing-main-step.subtitle",currentEntity:t}),r.showBlade(o,a)},e.deleteItems=function(e){var t={id:"confirmDeleteContentPublications",title:"marketing.dialogs.content-item-folder-delete.title",message:"marketing.dialogs.content-item-folder-delete.message",callback:function(t){t&&i.remove({ids:_.pluck(e,"id")},(function(){a.refresh()}))}};o.showConfirmationDialog(t)},e.setGridOptions=function(n){e.gridOptions=n,n.onRegisterApi=function(t){t.core.on.sortChanged(e,(function(){a.isLoading||a.refresh()}))},t.initializePagination(e)}}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.publicationDetailController",["$scope","virtoCommerce.marketingModule.dynamicContent.contentPublications","platformWebApp.bladeNavigationService","virtoCommerce.coreModule.common.dynamicExpressionService","virtoCommerce.storeModule.stores","platformWebApp.dialogService",function(e,t,n,o,i,r){var a=e.blade;function l(t){var n;t.dynamicExpression&&(_.each(t.dynamicExpression.children,c),n=t.dynamicExpression.children[0],results=_.groupBy(n.availableChildren,"groupName"),n.availableChildren=_.map(results,(function(e,t){return{displayName:t,subitems:e}}))),a.currentEntity=t,a.origEntity=angular.copy(a.currentEntity),a.isLoading=!1,e.$watch("blade.currentEntity",a.autogenerateName,!0)}function c(e){var t=o.expressions[e.id];return t||(t={displayName:"unknown element: "+e.id}),_.extend(e,t),e.children||(e.children=[]),_.each(e.children,c),_.each(e.availableChildren,c),e}function s(e){e.availableChildren=void 0,e.displayName=void 0,e.getValidationError=void 0,e.groupName=void 0,e.newChildLabel=void 0,e.templateURL=void 0,_.each(e.children,s)}a.updatePermission="marketing:update",a.initializeBlade=function(){a.isNew?t.getNew(l):t.get({id:a.currentEntity.id},(function(e){l(e),a.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:function(){a.saveChanges()},canExecuteMethod:function(){return a.checkDifferense()},permission:a.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(a.origEntity,a.currentEntity)},canExecuteMethod:function(){return a.checkDifferense()},permission:a.updatePermission},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){var e={id:"confirmDeleteContentItem",title:"marketing.dialogs.publication-delete.title",message:"marketing.dialogs.publication-delete.message",callback:function(e){e&&(a.isLoading=!0,t.delete({ids:[a.currentEntity.id]},(function(){a.parentBlade.initialize(),n.closeBlade(a)})))}};r.showConfirmationDialog(e)},canExecuteMethod:function(){return!0},permission:a.updatePermission}]}))},a.addPlaceholders=function(){n.closeChildrenBlades(a,(function(){a.selectedNodeId="addPlaceholders";var e={id:"publishing_add_placeholders",title:"marketing.blades.publishing.add-placeholders.title",subtitle:"marketing.blades.publishing.add-placeholders.subtitle",publication:a.currentEntity,controller:"virtoCommerce.marketingModule.addPublishingPlaceholdersStepController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/publishing/add-placeholders.tpl.html"};n.showBlade(e,a)}))},a.addContentItems=function(){n.closeChildrenBlades(a,(function(){a.selectedNodeId="addContentItems";var e={id:"publishing_add_content_items",title:"marketing.blades.publishing.add-content-items.title",subtitle:"marketing.blades.publishing.add-content-items.subtitle",publication:a.currentEntity,controller:"virtoCommerce.marketingModule.addPublishingContentItemsStepController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/dynamicContent/blades/publishing/add-content-items.tpl.html"};n.showBlade(e,a)}))},a.saveChanges=function(){n.closeChildrenBlades(a,(function(){a.isLoading=!0,a.currentEntity.dynamicExpression&&(a.currentEntity.dynamicExpression.availableChildren=void 0,_.each(a.currentEntity.dynamicExpression.children,s)),a.isNew?t.save({},a.currentEntity,(function(e){a.currentEntity=e,a.origEntity=angular.copy(e),a.isNew=!1,a.initializeBlade(),a.parentBlade.initialize()})):t.update({},a.currentEntity,(function(e){a.currentEntity=e,a.origEntity=angular.copy(e),a.isNew=!1,a.initializeBlade(),a.parentBlade.initialize()}),(function(e){n.setError(e.statusText,a)}))}))},a.availableSave=function(){return!e.formScope.$invalid&&a.currentEntity.contentItems.length>0&&a.currentEntity.contentPlaces.length>0},a.checkDifferense=function(){var t=!e.formScope.$invalid&&a.currentEntity.contentItems.length>0&&a.currentEntity.contentPlaces.length>0;if(t){if(!(t=!angular.equals(a.currentEntity,a.origEntity))){var n=a.currentEntity.contentItems.map((function(e){return e.id})),o=a.origEntity.contentItems.map((function(e){return e.id}));t=_.intersection(n,o).length<Math.max(n.length,o.length)}if(!t){var i=a.currentEntity.contentPlaces.map((function(e){return e.id})),r=a.origEntity.contentPlaces.map((function(e){return e.id}));t=_.intersection(i,r).length<Math.max(i.length,r.length)}}return t},e.setForm=function(t){e.formScope=t},e.datepickers={endDate:!1,startDate:!1},e.today=new Date,e.open=function(t,n){t.preventDefault(),t.stopPropagation(),e.datepickers[n]=!0},e.dateOptions={"year-format":"'yyyy'","starting-day":1},e.formats=["shortDate","dd-MMMM-yyyy","yyyy/MM/dd"],e.format=e.formats[0],a.headIcon="fa fa-paperclip",String.prototype.trimLeft=function(e){return void 0===e&&(e="s"),this.replace(new RegExp("^["+e+"]+"),"")},String.prototype.trimRight=function(e){return void 0===e&&(e="s"),this.replace(new RegExp("["+e+"]+$"),"")},a.focusNameInput=!1,a.autogenerateName=function(){if(!a.focusNameInput){var e="",t="";angular.isUndefined(a.currentEntity)||(angular.isUndefined(a.currentEntity.contentPlaces)||1!=a.currentEntity.contentPlaces.length||(e=a.currentEntity.contentPlaces[0].name),angular.isUndefined(a.currentEntity.contentItems)||1!=a.currentEntity.contentItems.length||(t=a.currentEntity.contentItems[0].name));var n=(e+"_"+t).trimLeft("_").trimRight("_");angular.isUndefined(a.currentEntity.name)||""!==a.currentEntity.name||(angular.isUndefined(a.currentEntity.name)||null===a.currentEntity.name||""===a.currentEntity.name||"_"===n?"_"!==n&&(a.currentEntity.name=n):(a.currentEntity.name.indexOf(e)>=0||a.currentEntity.name.indexOf(t)>=0)&&(a.currentEntity.name=n))}},a.initializeBlade(),e.stores=i.query()}])},function(e,t){angular.module("virtoCommerce.marketingModule").factory("virtoCommerce.marketingModule.dynamicContent.contentItems",["$resource",function(e){return e("api/marketing/contentitems/:id",null,{search:{method:"POST",url:"api/marketing/contentitems/listentries/search"},create:{method:"POST"},update:{method:"PUT"}})}]).factory("virtoCommerce.marketingModule.dynamicContent.contentPlaces",["$resource",function(e){return e("api/marketing/contentplaces/:id",null,{search:{method:"POST",url:"api/marketing/contentplaces/listentries/search"},update:{method:"PUT"}})}]).factory("virtoCommerce.marketingModule.dynamicContent.contentPublications",["$resource",function(e){return e("api/marketing/contentpublications/:id",null,{search:{method:"POST",url:"api/marketing/contentpublications/search"},getNew:{url:"api/marketing/contentpublications/new"},update:{method:"PUT"}})}]).factory("virtoCommerce.marketingModule.dynamicContent.folders",["$resource",function(e){return e("api/marketing/contentfolders/:id",null,{get:{method:"GET"},update:{method:"PUT"}})}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.catalogEntriesController",["$scope","virtoCommerce.catalogModule.items","platformWebApp.ui-grid.extension","platformWebApp.bladeUtils","platformWebApp.uiGridHelper","platformWebApp.bladeNavigationService",function(e,t,n,o,i,r){var a=e.blade;e.isValid=function(){return!angular.equals(this.blade.productIds,this.blade.promotion.productIds)},e.saveChanges=function(){this.blade.promotion.productIds=this.blade.productIds,this.blade.promotion.productNames=_.pluck(c,"name"),this.blade.promotion.productCodes=_.pluck(c,"code"),e.bladeClose()},e.setGridOptions=function(t,r){n.tryExtendGridOptions(t,r),s(),i.initialize(e,r,d),o.initializePagination(e)},a.refresh=function(){s()},e.cancelChanges=function(){e.bladeClose()};var l=!0,c=[];function s(){a.isLoading=!0,a.promotion.productIds||(a.promotion.productIds=[]),!l||(l=!1,a.productIds=angular.copy(a.promotion.productIds),a.promotion.productIds&&a.promotion.productIds.length)?t.query({ids:a.productIds,respGroup:"ItemInfo"},(function(e){a.$scope.gridApi.grid.options.data=e,c=angular.copy(e),a.isLoading=!1})):m()}function d(t){e.gridApi=t,e.$parent.blade.refresh(),i.bindRefreshOnSortChanged(e)}function m(){var e={id:"CatalogEntrySelect",title:"marketing.blades.catalog-items-select.title-product",controller:"virtoCommerce.catalogModule.catalogItemSelectController",template:"Modules/$(VirtoCommerce.Catalog)/Scripts/blades/common/catalog-items-select.tpl.html",breadcrumbs:[],toolbarCommands:[{name:"platform.commands.pick-selected",icon:"fas fa-plus",executeMethod:function(){a.$scope.gridApi.grid.options.data=_.map(c,(function(e){return e.imageUrl&&(e.imgSrc=e.imageUrl),e}));var t=_.pluck(c,"id");a.productIds=_.uniq(_.union(t,a.productIds),!1),r.closeBlade(e)},canExecuteMethod:function(){return c.length>0}}]};e.options={selectedItemIds:[],showCheckingMultiple:!1,checkItemFn:function(e,t){"category"==e.type?(a.error="Must select Product",e.selected=void 0):(t?_.all(c,(function(t){return t.id!=e.id}))&&c.push(e):c=_.reject(c,(function(t){return t.id==e.id})),a.error=void 0)}},r.showBlade(e,a)}e.blade.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:function(e){e.refresh()},canExecuteMethod:function(){return!0}},{name:"platform.commands.add",icon:"fas fa-plus",executeMethod:function(){m()},canExecuteMethod:function(){return!0}},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){var t=e.gridApi.selection.getSelectedRows(),n=_.pluck(t,"id");a.productIds=_.difference(a.productIds,n),a.refresh()},canExecuteMethod:function(){return!(a.childrenBlades.length>0)&&(!!a.$scope.gridApi&&a.$scope.gridApi.grid.api.selection.getSelectedRows().length>0)}}]}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.couponDetailController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.marketingModule.promotions",function(e,t,n){var o=e.blade;o.isLoading=!1,o.refresh=function(e){o.isNew||n.getCoupon({id:o.currentEntity.id},(function(e){o.currentEntity=e,o.parentBlade.refresh()}),(function(e){t.setError("Error "+e.status,o)}))},e.setForm=function(t){e.formCoupon=t},e.datepickers={expirationDate:!1},e.openCalendar=function(t,n){t.preventDefault(),t.stopPropagation(),e.datepickers[n]=!0},e.format="shortDate",e.isValid=function(){return!angular.equals(o.currentEntity,o.originalEntity)&&e.formCoupon&&e.formCoupon.$valid},e.saveChanges=function(){o.isLoading=!0,n.saveCoupon([o.currentEntity],(function(e){o.isLoading=!1,o.parentBlade.refresh(),t.closeBlade(o)}),(function(e){t.setError("Error "+e.status,o)}))},o.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:e.saveChanges,canExecuteMethod:e.isValid}]}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.couponImportProcessingController",["$rootScope","$scope",function(e,t){var n=t.blade;n.isLoading=!1,t.$on("new-notification-event",(function(t,o){n.notification&&o.id==n.notification.id&&(angular.copy(o,n.notification),o.finished&&e.$broadcast("coupon-import-finished"))}))}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.couponImportController",["$scope","platformWebApp.bladeNavigationService","FileUploader","virtoCommerce.marketingModule.promotions",function(e,t,n,o){var i=e.blade;if(i.headIcon="fa fa-download",i.isLoading=!1,!e.uploader){var r=e.uploader=new n({scope:e,headers:{Accept:"application/json"},url:"api/assets?folderUrl=tmp",method:"POST",autoUpload:!0,removeAfterUpload:!0});r.filters.push({name:"csvFilter",fn:function(e,t){var n="|"+e.type.slice(e.type.lastIndexOf("/")+1)+"|";return-1!=="|csv|vnd.ms-excel|".indexOf(n)}}),r.onBeforeUploadItem=function(e){i.isLoading=!0},r.onSuccessItem=function(e,t,n,o){i.isLoading=!1,i.canImport=!0,i.csvFileUrl=t[0].relativeUrl},r.onAfterAddingAll=function(e){t.setError(null,i)},r.onErrorItem=function(e,n,o,r){t.setError(e._file.name+" failed: "+(n.message?n.message:o),i)}}e.setForm=function(t){e.formScope=t},e.columnDelimiters=[{name:"marketing.blades.coupons-import.labels.space",value:" "},{name:"marketing.blades.coupons-import.labels.comma",value:","},{name:"marketing.blades.coupons-import.labels.semicolon",value:";"},{name:"marketing.blades.coupons-import.labels.tab",value:"\t"}],e.datepickers={expirationDate:!1},e.open=function(t,n){t.preventDefault(),t.stopPropagation(),e.datepickers[n]=!0},e.startImport=function(){var n={fileUrl:i.csvFileUrl,delimiter:i.columnDelimiter,promotionId:i.promotionId,expirationDate:i.expirationDate};o.importCoupons(n,(function(n){var o={id:"importProgress",title:"marketing.blades.coupons-import-processing.title",promotionId:i.promotionId,notification:n,controller:"virtoCommerce.marketingModule.couponImportProcessingController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/promotion/blades/coupon-import-processing.tpl.html"};e.$on("new-notification-event",(function(e,t){t&&t.id==o.notification.id&&(i.canImport=null!=t.finished)})),i.canImport=!1,t.showBlade(o,i)}),(function(e){t.setError("Error "+e.status,i)}))}}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.couponListController",["$scope","$localStorage","platformWebApp.dialogService","platformWebApp.bladeUtils","platformWebApp.uiGridHelper","virtoCommerce.marketingModule.promotions",function(e,t,n,o,i,r){var a=e.blade,l=o.bladeNavigationService;a.headIcon="fa fa-ticket",a.isLoading=!1,a.refresh=function(){a.isLoading=!0;var t={promotionId:a.promotionId,sort:i.getSortExpression(e),code:c.keyword,skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount};c.current&&angular.extend(t,c.current),r.searchCoupons(t,(function(t){a.isLoading=!1,a.currentEntities=t.results,a.parentBlade.couponCount(),e.pageSettings.totalItems=t.totalCount}))},e.$on("coupon-import-finished",(function(e){a.refresh()})),a.toolbarCommands=[{name:"marketing.blades.coupons.toolbar.add",icon:"fas fa-plus",canExecuteMethod:function(){return!0},executeMethod:function(){var e={id:"couponImport",title:"marketing.blades.coupon-detail.new-title",promotionId:a.promotionId,currentEntity:{promotionId:a.promotionId,isNew:!0},controller:"virtoCommerce.marketingModule.couponDetailController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/promotion/blades/coupon-detail.tpl.html"};l.showBlade(e,a)}},{name:"marketing.blades.coupons.toolbar.import",icon:"fa fa-download",canExecuteMethod:function(){return!0},executeMethod:function(){var e={id:"couponImport",title:"marketing.blades.coupons-import.title",promotionId:a.promotionId,controller:"virtoCommerce.marketingModule.couponImportController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/promotion/blades/coupon-import.tpl.html"};l.showBlade(e,a)}},{name:"marketing.blades.coupons.toolbar.refresh",icon:"fa fa-refresh",canExecuteMethod:function(){return!0},executeMethod:a.refresh},{name:"marketing.blades.coupons.toolbar.delete",icon:"fas fa-trash-alt",canExecuteMethod:function(){return e.gridApi&&_.any(e.gridApi.selection.getSelectedRows())},executeMethod:function(){var t,o,i;i={id:"confirmDeleteItem",title:"marketing.dialogs.coupon-delete.title",message:(t=!1)?"marketing.dialogs.coupon-delete.message-all":"marketing.dialogs.coupon-delete.message",callback:function(n){n&&l.closeChildrenBlades(a,(function(){if(a.isLoading=!0,t&&o)r.clearCoupons({promotionId:o},(function(){a.refresh(),a.parentBlade.refresh()}));else if(!t){var n=_.pluck(e.gridApi.selection.getSelectedRows(),"id");r.deleteCoupons({ids:n,all:t},(function(){a.refresh(),a.parentBlade.refresh()}))}}))}},n.showConfirmationDialog(i)}}];var c=a.filter=e.filter={};function s(e){var t={id:"filterDetail",controller:"virtoCommerce.marketingModule.filterDetailController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/promotion/blades/filter-detail.tpl.html"};angular.extend(t,e),l.showBlade(t,a)}e.$localStorage=t,t.couponSearchFilters||(t.couponSearchFilters=[{name:"marketing.blades.promotion-list.new-filter"}]),t.couponSearchFilterId&&(c.current=_.findWhere(t.couponSearchFilters,{id:t.couponSearchFilterId})),c.change=function(){t.couponSearchFilterId=c.current?c.current.id:null,c.current&&!c.current.id?(c.current=null,s({isNew:!0})):(l.closeBlade({id:"filterDetail"}),c.criteriaChanged())},c.edit=function(){c.current&&s({data:c.current})},c.criteriaChanged=function(){e.pageSettings.currentPage>1?e.pageSettings.currentPage=1:a.refresh()},e.selectNode=function(e){var t={id:"couponDetail",originalEntity:angular.copy(e),currentEntity:angular.copy(e),title:'Coupon "'+e.code+'"',controller:"virtoCommerce.marketingModule.couponDetailController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/promotion/blades/coupon-detail.tpl.html"};l.showBlade(t,a),selectedEntity=e},e.setGridOptions=function(t){i.initialize(e,t,(function(t){i.bindRefreshOnSortChanged(e)})),o.initializePagination(e)}}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.filterDetailController",["$scope","$localStorage","$translate","virtoCommerce.storeModule.stores",function(e,t,n,o){var i,r=e.blade;function a(e){r.currentEntity=angular.copy(e),r.origEntity=e,r.isLoading=!1,r.title=r.isNew?"marketing.blades.filter-detail.new-title":e.name,r.subtitle=r.isNew?"marketing.blades.filter-detail.new-subtitle":"marketing.blades.filter-detail.subtitle"}r.metaFields=[{name:"onlyActive",title:"marketing.blades.filter-detail.labels.active",valueType:"Boolean"},{name:"store",title:"marketing.blades.promotion-detail.labels.store",templateUrl:"storeSelector.html"}],e.saveChanges=function(){angular.copy(r.currentEntity,r.origEntity),r.isNew&&(t.promotionSearchFilters.push(r.origEntity),t.promotionSearchFilterId=r.origEntity.id,r.parentBlade.filter.current=r.origEntity,r.isNew=!1),a(r.origEntity),r.parentBlade.filter.criteriaChanged()},e.setForm=function(e){i=e},r.headIcon="fa fa-filter",r.toolbarCommands=[{name:"core.commands.apply-filter",icon:"fa fa-filter",executeMethod:function(){e.saveChanges()},canExecuteMethod:function(){return i&&i.$valid}},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(r.origEntity,r.currentEntity)},canExecuteMethod:function(){return!angular.equals(r.currentEntity,r.origEntity)}},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){r.parentBlade.filter.current=null,t.promotionSearchFilters.splice(t.promotionSearchFilters.indexOf(r.origEntity),1),delete t.promotionSearchFilterId,r.parentBlade.refresh(),e.bladeClose()},canExecuteMethod:function(){return!r.isNew}}],r.stores=o.query(),r.isNew?n("marketing.blades.filter-detail.unnamed-filter").then((function(e){a({id:(new Date).getTime(),name:e})})):a(r.data)}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.promotionDetailController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.marketingModule.promotions","virtoCommerce.storeModule.stores","virtoCommerce.coreModule.common.dynamicExpressionService","virtoCommerce.catalogModule.categories","virtoCommerce.catalogModule.items","$q","platformWebApp.settings","platformWebApp.metaFormsService","virtoCommerce.shippingModule.shippingMethods","virtoCommerce.paymentModule.paymentMethods",function(e,t,n,o,i,r,a,l,c,s,d,m){var u=e.blade;function p(e){u.isNew||(u.title=e.name),e.coupons=_.map(e.coupons,(function(e){return{text:e}})),u.expressionPromises=[],e.dynamicExpression&&_.each(e.dynamicExpression.children,h),l.all(u.expressionPromises).then((function(t){u.currentEntity=angular.copy(e),u.origEntity=e})).finally((function(){u.isLoading=!1}))}function g(){return!angular.equals(u.currentEntity,u.origEntity)&&u.hasUpdatePermission()}function f(){u.isNew||(u.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:e.saveChanges,canExecuteMethod:e.isValid,permission:u.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(u.origEntity,u.currentEntity)},canExecuteMethod:g,permission:u.updatePermission},{name:"platform.commands.clone",icon:"fas fa-clone",executeMethod:function(){var e={id:"promotionClone",title:"marketing.blades.promotion-detail.title-new",isNew:!0,isCloning:!0,data:u.currentEntity,controller:"virtoCommerce.marketingModule.promotionDetailController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/promotion/blades/promotion-detail.tpl.html"};t.showBlade(e,u.parentBlade)},canExecuteMethod:function(){return!g()},permission:"marketing:create"}])}function h(e){var t=i.expressions[e.id];t||(t={displayName:"unknown element: "+e.id}),_.extend(e,t),e.children||(e.children=[]),_.each(e.excludingCategoryIds,(function(t){var n={id:"ExcludingCategoryCondition",categoryId:t};e.children.push(n);var o=r.query({ids:[t],respGroup:"Info"},(function(e){_.any(e)&&(n.categoryName=e[0].name)})).$promise;u.expressionPromises.push(o)})),_.each(e.excludingProductIds,(function(t){var n={id:"ExcludingProductCondition",productId:t};e.children.push(n);var o=a.query({ids:[t],respGroup:"ItemInfo"},(function(e){_.any(e)&&(n.productName=e[0].name,n.productCode=e[0].code)})).$promise;u.expressionPromises.push(o)})),_.each(e.children,h),_.each(e.availableChildren,h)}function C(e){e.availableChildren=void 0,e.displayName=void 0,e.getValidationError=void 0,e.newChildLabel=void 0,e.templateURL=void 0;var t=_.where(e.children,{id:"ExcludingCategoryCondition"});e.excludingCategoryIds=_.pluck(t,"categoryId"),e.children=_.difference(e.children,t);var n=_.where(e.children,{id:"ExcludingProductCondition"});e.excludingProductIds=_.pluck(n,"productId"),e.children=_.difference(e.children,n),_.each(e.children,C)}u.updatePermission="marketing:update",u.metaFields=s.getMetaFields("promotionDetail"),u.expressionTreeTemplateUrl=i.expressionTreeTemplateUrl,u.showPriority=!1,c.get({id:"Marketing.Promotion.CombinePolicy"},(function(e){u.showPriority="CombineStackable"===e.value})),u.refresh=function(e){var t=u.shippingMethods?l.when():d.getAllRegistered((function(e){u.shippingMethods=_.uniq(e,e=>e.code),_.each(u.shippingMethods,(function(e){e.id=e.id?e.id:e.code}))})).$promise,o=u.paymentMethods?l.when():m.getAllRegistered((function(e){u.paymentMethods=_.uniq(e,e=>e.code),_.each(u.paymentMethods,(function(e){e.id=e.id?e.id:e.code}))})).$promise;l.all(t,o).then(()=>{u.isNew?u.isCloning?(u.data.id=null,u.data.name=null,p(u.data)):n.getNew(p):n.get({id:u.currentEntity.id,code:void 0===u.currentEntityCode?"":u.currentEntityCode},(function(t){p(t),e&&u.parentBlade.refresh()}))})},e.cancelChanges=function(){e.bladeClose()},e.saveChanges=function(){t.setError(null,u),u.isLoading=!0,u.currentEntity.coupons=_.pluck(u.currentEntity.coupons,"text"),u.currentEntity.dynamicExpression&&_.each(u.currentEntity.dynamicExpression.children,C),u.isNew?n.save({},u.currentEntity,(function(e){u.isNew=void 0,u.currentEntity=e,f(),u.refresh(!0)})):n.update({},u.currentEntity,(function(e){u.refresh(!0)}))},e.setForm=function(t){e.formScope=t},e.isValid=function(){return g()&&e.formScope&&e.formScope.$valid},u.onClose=function(n){t.showConfirmationIfNeeded(g()&&!u.isNew,e.isValid(),u,e.saveChanges,n,"marketing.dialogs.promotion-save.title","marketing.dialogs.promotion-save.message")},u.headIcon="fa fa-area-chart",e.datepickers={str:!1,end:!1},e.open=function(t,n){t.preventDefault(),t.stopPropagation(),e.datepickers[n]=!0},f(),e.pageSize=25,e.stores=[];var b="",y=0;function v(){return _.any(u.currentEntity.storeIds)&&!_.any(e.stores)?o.search({storeIds:u.currentEntity.storeIds,take:u.currentEntity.storeIds.length,responseGroup:"none"},e=>{k(e.results)}).$promise:l.resolve()}function k(t){t=_.reject(t,t=>_.any(e.stores,e=>e.id===t.id)),_.each(t,(function(e){e.shippingMethods=u.shippingMethods||[],e.paymentMethods=u.paymentMethods||[]})),e.stores=e.stores.concat(t)}e.fetchStores=function(t){l.all([v(),e.fetchNextStores(t)])},e.fetchNextStores=t=>(t.page=t.page||0,b!==t.search&&(b=t.search,t.page=0),0===t.page||y>e.stores.length?o.search({searchPhrase:t.search,take:e.pageSize,skip:t.page*e.pageSize,responseGroup:"none"},n=>{k(n.results),t.page++,t.page*e.pageSize<n.totalCount&&e.$broadcast("scrollCompleted"),y=Math.max(y,n.totalCount)}).$promise:l.resolve()),u.refresh(!1),e.exclusivityTypes=[{name:"marketing.blades.promotion-detail.labels.combined-with-others",value:!1},{name:"marketing.blades.promotion-detail.labels.exclusive",value:!0}]}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.promotionConditionCurrencyIsController",["$scope","virtoCommerce.coreModule.currency.currencyUtils",function(e,t){e.currencyUtils=t}]).controller("virtoCommerce.marketingModule.promotionExpressionsController",["$scope","virtoCommerce.catalogModule.items","platformWebApp.authService","platformWebApp.bladeNavigationService",function(e,t,n,o){e.openItemSelectWizard=function(t,i){if(n.checkPermission("marketing:update"))if(i){var r={id:"CatalogEntries",title:"marketing.blades.catalog-entries.title-product",controller:"virtoCommerce.marketingModule.catalogEntriesController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/promotion/blades/catalog-entry-list.tpl.html",breadcrumbs:[],promotion:t};o.showBlade(r,e.blade)}else if(t.productId){let n={id:"listItemDetail",itemId:t.productId,title:t.productName,controller:"virtoCommerce.catalogModule.itemDetailController",template:"Modules/$(VirtoCommerce.Catalog)/Scripts/blades/item-detail.tpl.html"};o.showBlade(n,e.blade)}else{var a=[],l={id:"CatalogEntrySelect",title:"marketing.blades.catalog-items-select.title-product",controller:"virtoCommerce.catalogModule.catalogItemSelectController",template:"Modules/$(VirtoCommerce.Catalog)/Scripts/blades/common/catalog-items-select.tpl.html",breadcrumbs:[],toolbarCommands:[{name:"platform.commands.pick-selected",icon:"fas fa-plus",executeMethod:function(e){t.productId=a[0].id,t.productName=a[0].name,t.productCode=a[0].code,o.closeBlade(e)},canExecuteMethod:function(){return 1==a.length}}]};l.options={showCheckingMultiple:!1,checkItemFn:function(e,t){"category"==e.type?(l.error="Must select Product",e.selected=void 0):(t?_.all(a,(function(t){return t.id!=e.id}))&&a.push(e):a=_.reject(a,(function(t){return t.id==e.id})),l.error=void 0)}},o.showBlade(l,e.blade)}},e.openCategorySelectWizard=function(t){if(n.checkPermission("marketing:update")){var i=[],r={id:"CatalogCategorySelect",title:"marketing.blades.catalog-items-select.title-category",controller:"virtoCommerce.catalogModule.catalogItemSelectController",template:"Modules/$(VirtoCommerce.Catalog)/Scripts/blades/common/catalog-items-select.tpl.html",breadcrumbs:[],toolbarCommands:[{name:"platform.commands.pick-selected",icon:"fas fa-plus",executeMethod:function(e){t.categoryId=i[0].id,t.categoryName=i[0].name,o.closeBlade(e)},canExecuteMethod:function(){return 1==i.length}}]};r.options={showCheckingMultiple:!1,allowCheckingItem:!1,allowCheckingCategory:!0,checkItemFn:function(e,t){"category"!=e.type?(r.error="Must select Category",e.selected=void 0):(t?_.all(i,(function(t){return t.id!=e.id}))&&i.push(e):i=_.reject(i,(function(t){return t.id==e.id})),r.error=void 0)}},o.showBlade(r,e.blade)}}}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.promotionListController",["$scope","$localStorage","virtoCommerce.marketingModule.promotions","platformWebApp.dialogService","platformWebApp.bladeUtils","platformWebApp.uiGridHelper",function(e,t,n,o,i,r){var a=e.blade,l=i.bladeNavigationService;a.refresh=function(){a.isLoading=!0;var t={responseGroup:"none",keyword:c.keyword,sort:r.getSortExpression(e),skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount};c.current&&angular.extend(t,c.current),n.search(t,(function(t){a.isLoading=!1,e.pageSettings.totalItems=t.totalCount,a.currentEntities=t.results}))},e.selectNode=function(t){e.selectedNodeId=t.id;var n={id:"listItemChild",currentEntity:t,title:t.name,subtitle:a.subtitle,controller:"virtoCommerce.marketingModule.promotionDetailController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/promotion/blades/promotion-detail.tpl.html"};l.showBlade(n,a)},e.deleteList=function(e){var t={id:"confirmDeleteItem",title:"marketing.dialogs.promotions-delete.title",message:"marketing.dialogs.promotions-delete.message",callback:function(t){t&&l.closeChildrenBlades(a,(function(){a.isLoading=!0;var t=_.pluck(e,"id");n.remove({ids:t},(function(){a.refresh()}))}))}};o.showConfirmationDialog(t)},a.headIcon="fa fa-area-chart",a.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:a.refresh,canExecuteMethod:function(){return!0}},{name:"platform.commands.add",icon:"fas fa-plus",executeMethod:function(){l.closeChildrenBlades(a,(function(){var e={id:"listItemChild",title:"marketing.blades.promotion-detail.title-new",subtitle:a.subtitle,isNew:!0,currentEntity:{},controller:"virtoCommerce.marketingModule.promotionDetailController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/promotion/blades/promotion-detail.tpl.html"};l.showBlade(e,a)}))},canExecuteMethod:function(){return!0},permission:"marketing:create"},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){e.deleteList(e.gridApi.selection.getSelectedRows())},canExecuteMethod:function(){return e.gridApi&&_.any(e.gridApi.selection.getSelectedRows())},permission:"marketing:delete"}];var c=a.filter=e.filter={};function s(e){var t={id:"filterDetail",controller:"virtoCommerce.marketingModule.filterDetailController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/promotion/blades/filter-detail.tpl.html"};angular.extend(t,e),l.showBlade(t,a)}e.$localStorage=t,t.promotionSearchFilters||(t.promotionSearchFilters=[{name:"marketing.blades.promotion-list.new-filter"}]),t.promotionSearchFilterId&&(c.current=_.findWhere(t.promotionSearchFilters,{id:t.promotionSearchFilterId})),c.change=function(){t.promotionSearchFilterId=c.current?c.current.id:null,c.current&&!c.current.id?(c.current=null,s({isNew:!0})):(l.closeBlade({id:"filterDetail"}),c.criteriaChanged())},c.edit=function(){c.current&&s({data:c.current})},c.criteriaChanged=function(){e.pageSettings.currentPage>1?e.pageSettings.currentPage=1:a.refresh()},e.setGridOptions=function(t){r.initialize(e,t,(function(t){r.bindRefreshOnSortChanged(e)})),i.initializePagination(e)}}])},function(e,t){angular.module("virtoCommerce.marketingModule").factory("virtoCommerce.marketingModule.promotions",["$resource",function(e){return e("api/marketing/promotions/:id",null,{search:{url:"api/marketing/promotions/search",method:"POST"},getNew:{url:"api/marketing/promotions/new"},update:{method:"PUT"},searchCoupons:{url:"api/marketing/promotions/coupons/search",method:"POST"},getCoupon:{url:"api/marketing/promotions/coupons/:id"},saveCoupon:{url:"api/marketing/promotions/coupons/add",method:"POST"},deleteCoupons:{url:"api/marketing/promotions/coupons/delete",method:"DELETE"},importCoupons:{url:"api/marketing/promotions/coupons/import",method:"POST"}})}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.couponsWidgetController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.marketingModule.promotions",function(e,t,n){var o=e.blade;o.couponCount=function(){o.isNew||n.searchCoupons({promotionId:o.currentEntity.id,skip:0,take:0},(function(e){o.totalCouponsCount=e.totalCount}))},o.couponCount(),e.$on("coupon-import-finished",(function(e){o.couponCount()})),e.openBlade=function(){var e={id:"coupons",title:"marketing.blades.promotion-detail.toolbar.coupons",promotionId:o.currentEntity.id,promotion:o.currentEntity,controller:"virtoCommerce.marketingModule.couponListController",template:"Modules/$(VirtoCommerce.Marketing)/Scripts/promotion/blades/coupon-list.tpl.html"};t.showBlade(e,o)}}])},function(e,t){angular.module("virtoCommerce.marketingModule").controller("virtoCommerce.marketingModule.dashboard.promotionsWidgetController",["$scope","$state","virtoCommerce.marketingModule.promotions",function(e,t,n){e.data={count:"",descr:"Active Promotions"},e.widgetAction=function(){t.go("workspace.marketing")},n.search({responseGroup:"none",count:1e3},(function(t){var n=_.where(t.results,{isActive:!0});e.data.count=n.length}))}])},function(e,t,n){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,