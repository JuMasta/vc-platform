!function(e){var t={};function i(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(r,n,function(t){return e[t]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){i(1),i(2),i(3),i(4),i(5),i(6),i(7),i(8),i(9),i(10),i(11),i(12),i(13),i(14),i(15),i(16),i(17),i(18),i(19),e.exports=i(20)},function(e,t){null!=AppDependencies&&AppDependencies.push("virtoCommerce.pricingModule"),angular.module("virtoCommerce.pricingModule",["ui.grid.cellNav","ui.grid.edit","ui.grid.validate"]).config(["$stateProvider",function(e){e.state("workspace.pricingModule",{url:"/pricing",templateUrl:"$(Platform)/Scripts/common/templates/home.tpl.html",controller:["$scope","platformWebApp.bladeNavigationService",function(e,t){t.showBlade({id:"pricing",title:"pricing.blades.pricing-main.title",subtitle:"pricing.blades.pricing-main.subtitle",controller:"virtoCommerce.pricingModule.pricingMainController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/pricing-main.tpl.html",isClosingDisabled:!0}),e.moduleName="vc-pricing"}]})}]).run(["$http","$compile","platformWebApp.mainMenuService","platformWebApp.widgetService","$state","platformWebApp.authService","platformWebApp.metaFormsService","virtoCommerce.exportModule.genericViewerItemService",function(e,t,i,r,n,o,c,a){var l={path:"browse/pricing",icon:"fa fa-usd",title:"pricing.main-menu-title",priority:30,action:function(){n.go("workspace.pricingModule")},permission:"pricing:access"};i.addMenuItem(l);var s={isVisible:function(e){return o.checkPermission("pricing:read")},controller:"virtoCommerce.pricingModule.itemPricesWidgetController",size:[2,1],template:"Modules/$(VirtoCommerce.Pricing)/Scripts/widgets/itemPricesWidget.tpl.html"};r.registerWidget(s,"itemDetail"),r.registerWidget({isVisible:function(e){return!e.isNew},controller:"virtoCommerce.pricingModule.pricesWidgetController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/widgets/pricesWidget.tpl.html"},"pricelistDetail"),r.registerWidget({controller:"virtoCommerce.pricingModule.assignmentsWidgetController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/widgets/assignmentsWidget.tpl.html"},"pricelistDetail"),e.get("Modules/$(VirtoCommerce.Pricing)/Scripts/dynamicConditions/templates.html").then((function(e){t(e.data)})),c.registerMetaFields("VirtoCommerce.PricingModule.Data.ExportImport.ExportablePriceExportFilter",[{name:"pricelistSelector",title:"pricing.selectors.titles.price-lists",templateUrl:"Modules/$(VirtoCommerce.Pricing)/Scripts/selectors/pricelist-selector.tpl.html"},{name:"productSelector",title:"pricing.selectors.titles.products",templateUrl:"Modules/$(VirtoCommerce.Pricing)/Scripts/selectors/product-selector.tpl.html"},{name:"modifiedSince",title:"pricing.selectors.titles.modified-since",valueType:"DateTime"}]),c.registerMetaFields("VirtoCommerce.PricingModule.Data.ExportImport.ExportablePricelistExportFilter",[{name:"currencySelector",title:"pricing.selectors.titles.currencies",templateUrl:"Modules/$(VirtoCommerce.Pricing)/Scripts/selectors/currency-selector.tpl.html"}]),c.registerMetaFields("VirtoCommerce.PricingModule.Data.ExportImport.ExportablePricelistFullDataExportFilter",[{name:"currencySelector",title:"pricing.selectors.titles.currencies",templateUrl:"Modules/$(VirtoCommerce.Pricing)/Scripts/selectors/currency-selector.tpl.html"}]),c.registerMetaFields("VirtoCommerce.PricingModule.Data.ExportImport.ExportablePricelistAssignmentExportFilter",[{name:"pricelistAssignmentSelector",title:"pricing.selectors.titles.price-lists",templateUrl:"Modules/$(VirtoCommerce.Pricing)/Scripts/selectors/pricelist-selector.tpl.html"},{name:"catalogSelector",title:"Select Catalog",templateUrl:"Modules/$(VirtoCommerce.Pricing)/Scripts/selectors/catalog-selector.tpl.html"}]),a.registerViewer("Price",(function(e){var t=angular.copy(e);return{id:"itemPrices",itemId:t.productId,priceListId:t.pricelistId,data:{prices:[t]},currency:t.currency,title:"pricing.blades.prices-list.title",titleValues:{name:t.name},subtitle:"pricing.blades.prices-list.subtitle",controller:"virtoCommerce.pricingModule.pricesListController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/prices-list.tpl.html"}})),a.registerViewer("Pricelist",(function(e){var t=angular.copy(e);return{id:"listItemChild",controller:"virtoCommerce.pricingModule.pricelistDetailController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/pricelist-detail.tpl.html",currentEntityId:t.id,title:t.name}})),a.registerViewer("PricelistAssignment",(function(e){var t=angular.copy(e);return{id:"pricelistAssignmentDetail",controller:"virtoCommerce.pricingModule.assignmentDetailController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/assignment-detail.tpl.html",currentEntityId:t.id,title:t.name,subtitle:"pricing.blades.assignment-detail.subtitle"}}))}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.assignmentDetailController",["$scope","virtoCommerce.catalogModule.catalogs","virtoCommerce.pricingModule.pricelists","virtoCommerce.pricingModule.pricelistAssignments","virtoCommerce.storeModule.stores","platformWebApp.bladeNavigationService","virtoCommerce.coreModule.common.dynamicExpressionService","platformWebApp.dialogService",function(e,t,i,r,n,o,c,a){var l=e.blade;function s(t){var i;l.isNew&&(t=angular.extend(l.data,t),l.data.pricelistId=l.pricelistId),t.dynamicExpression&&(_.each(t.dynamicExpression.children,m),i=t.dynamicExpression.children[0],results=_.groupBy(i.availableChildren,"groupName"),i.availableChildren=_.map(results,(function(e,t){return{displayName:t,subitems:e}}))),l.currentEntity=angular.copy(t),l.origEntity=t,l.isLoading=!1,l.isNew||(l.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:e.saveChanges,canExecuteMethod:u,permission:l.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(l.origEntity,l.currentEntity)},canExecuteMethod:d,permission:l.updatePermission}])}function d(){return!angular.equals(l.currentEntity,l.origEntity)&&l.hasUpdatePermission()}function u(){return d()&&e.formScope&&e.formScope.$valid&&p()}function p(){return(!l.currentEntity.storeId||!l.currentEntity.catalogId)&&(l.currentEntity.storeId||l.currentEntity.catalogId)}function m(e){var t=c.expressions[e.id];return t||(t={displayName:"unknown element: "+e.id}),_.extend(e,t),e.children||(e.children=[]),_.each(e.children,m),_.each(e.availableChildren,m),e}function g(e){e.availableChildren=void 0,e.displayName=void 0,e.getValidationError=void 0,e.groupName=void 0,e.newChildLabel=void 0,e.templateURL=void 0,_.each(e.children,g)}l.updatePermission="pricing:update",e.pageSize=20,l.refresh=function(e){l.isNew?r.getNew(s):(r.get({id:l.currentEntityId},s),e&&angular.isFunction(l.parentBlade.refresh)&&l.parentBlade.refresh())},e.setForm=function(t){e.formScope=t},e.cancelChanges=function(){e.bladeClose()},e.saveChanges=function(){if(p())l.isLoading=!0,l.currentEntity.dynamicExpression&&(l.currentEntity.dynamicExpression.availableChildren=void 0,_.each(l.currentEntity.dynamicExpression.children,g)),l.isNew?r.save(l.currentEntity,(function(e){l.isNew=void 0,l.currentEntityId=e.id,l.refresh(!0)}),(function(e){o.setError("Error "+e.status,l)})):r.update(l.currentEntity,(function(e){l.refresh(!0)}),(function(e){o.setError("Error "+e.status,l)}));else{a.showErrorDialog({id:"assignmentSaveValidationError",title:"pricing.dialogs.assignment-save-validation.title",message:"pricing.dialogs.assignment-save-validation.message"})}},l.onClose=function(t){o.showConfirmationIfNeeded(d(),u(),l,e.saveChanges,t,"pricing.dialogs.assignment-save.title","pricing.dialogs.assignment-save.message")},e.datepickers={str:!1,end:!1},e.open=function(t,i){t.preventDefault(),t.stopPropagation(),e.datepickers[i]=!0},e.catalogDataSource=e=>t.search(e),e.pricelistDataSource=e=>i.search(e),e.storeDataSource=e=>n.search(e),l.refresh()}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.assignmentListController",["$scope","virtoCommerce.pricingModule.pricelistAssignments","platformWebApp.dialogService","platformWebApp.uiGridHelper","platformWebApp.bladeUtils","virtoCommerce.catalogModule.catalogs","$localStorage",function(e,t,i,r,n,o,c){e.uiGridConstants=r.uiGridConstants;var a=e.blade,l=n.bladeNavigationService,s={exportTypeName:"VirtoCommerce.PricingModule.Data.ExportImport.ExportablePricelistAssignment",dataQuery:{exportTypeName:"PricelistAssignmentExportDataQuery"}},d=angular.copy(s),u=a.filter=e.filter={};function p(){angular.forEach(a.childrenBlades.slice(),(function(e){l.closeBlade(e)}))}function m(){var t={keyword:u.keyword,sort:r.getSortExpression(e),skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount};return u.current?(t.pricelistIds=u.current.pricelistIds,t.catalogIds=u.current.catalogIds||[]):t.pricelistIds=a.pricelistId?[a.pricelistId]:[],t}function g(e){var t={id:"exportGenericViewerFilter",controller:"virtoCommerce.exportModule.exportGenericViewerFilterController",template:"Modules/$(VirtoCommerce.Export)/Scripts/blades/export-generic-viewer-filter.tpl.html",onBeforeApply:a.resetRequestCustomFilter};angular.extend(t,e),l.showBlade(t,a)}a.refresh=function(){a.isLoading=!0,t.search(m(),(function(t){o.search({take:1e3,responseGroup:"Info"},(function(i){a.isLoading=!1,e.pageSettings.totalItems=t.totalCount;var r=t.results;_.each(r,(function(e){var t=_.findWhere(i.results,{id:e.catalogId});t&&(e.catalog=t.name)})),a.currentEntities=r}))}))},e.selectNode=function(t,i){e.selectedNodeId=t.id;var r={id:"pricelistAssignmentDetail",controller:"virtoCommerce.pricingModule.assignmentDetailController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/assignment-detail.tpl.html"};i?angular.extend(r,{isNew:!0,pricelistId:a.pricelistId,data:t,title:"pricing.blades.assignment-detail.new-title"}):angular.extend(r,{currentEntityId:t.id,title:t.name,subtitle:"pricing.blades.assignment-detail.subtitle"}),l.showBlade(r,a)},e.deleteList=function(e){var r={id:"confirmDeleteItem",title:"pricing.dialogs.assignments-delete.title",message:"pricing.dialogs.assignments-delete.message",callback:function(i){if(i){p();var r=_.pluck(e,"id");t.remove({ids:r},(function(){a.refresh()}),(function(e){l.setError("Error "+e.status,a)}))}}};i.showConfirmationDialog(r)},e.deleteAllFiltered=function(){var e={id:"confirmDeleteItems",callback:function(e){e&&(p(),a.isLoading=!0,t.removeFiltered({pricelistId:a.pricelistId,keyword:u.keyword},(function(){a.refresh()})))}};i.showDialog(e,"Modules/$(VirtoCommerce.Pricing)/Scripts/dialogs/deleteAll-dialog.tpl.html","platformWebApp.confirmDialogController")},a.headIcon="fa fa-anchor",a.subtitle="pricing.blades.pricelist-assignment-list.subtitle",a.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:a.refresh,canExecuteMethod:function(){return!0}},{name:"platform.commands.add",icon:"fas fa-plus",executeMethod:function(){e.selectNode({},!0)},canExecuteMethod:function(){return!0},permission:"pricing:create"},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){e.deleteList(e.gridApi.selection.getSelectedRows())},canExecuteMethod:function(){return e.gridApi&&_.any(e.gridApi.selection.getSelectedRows())},permission:"pricing:delete"},{name:"pricing.commands.delete-all-filtered",icon:"fas fa-trash-alt",executeMethod:function(){e.deleteAllFiltered()},canExecuteMethod:function(){return a.currentEntities&&a.currentEntities.length>0},permission:"pricing:delete"},{name:"platform.commands.export",icon:"fa fa-upload",canExecuteMethod:function(){return!0},executeMethod:function(){var t=e.gridApi.selection.getSelectAllState();d.dataQuery.isAllSelected=t;var i=e.gridApi.selection.getSelectedRows();d.dataQuery.objectIds=[],(d.dataQuery.objectIds&&d.dataQuery.objectIds.length||!t)&&(d.dataQuery.objectIds=_.map(i,(function(e){return e.id}))),angular.extend(d.dataQuery,m());var r={id:"priceAssignmentExport",title:"pricing.blades.exporter.priceAssignmentTitle",subtitle:"pricing.blades.exporter.priceAssignmentSubtitle",controller:"virtoCommerce.exportModule.exportSettingsController",template:"Modules/$(VirtoCommerce.Export)/Scripts/blades/export-settings.tpl.html",exportDataRequest:d};l.showBlade(r,a)}}],u.criteriaChanged=function(){e.pageSettings.currentPage>1?(a.refresh(),e.pageSettings.currentPage=1):a.refresh()},e.setGridOptions=function(t){e.gridOptions=t,t.onRegisterApi=function(t){t.core.on.sortChanged(e,(function(){a.isLoading||a.refresh()}))},n.initializePagination(e)},c.exportSearchFilters||(c.exportSearchFilters=[]),c.exportSearchFilters[d.exportTypeName]||(c.exportSearchFilters[d.exportTypeName]=[{name:"export.blades.export-generic-viewer.labels.new-filter"}]),e.exportSearchFilters=c.exportSearchFilters[d.exportTypeName],c.exportSearchFilterIds||(c.exportSearchFilterIds=[]),e.exportSearchFilterId=c.exportSearchFilterIds[d.exportTypeName],e.exportSearchFilterId&&(u.current=_.findWhere(e.exportSearchFilters,{id:e.exportSearchFilterId})),u.change=function(){c.exportSearchFilterId=u.current?u.current.id:null;var e=d.exportTypeName+"ExportFilter";u.current&&!u.current.id?(u.current=null,g({isNew:!0,metafieldsId:e,exportTypeName:d.exportTypeName})):(l.closeBlade({id:"exportGenericViewerFilter"}),u.current||a.resetRequestCustomFilter(),u.criteriaChanged())},u.edit=function(){var e=d.exportTypeName+"ExportFilter",t={data:u.current,metafieldsId:e,exportTypeName:d.exportTypeName};u.current?angular.extend(t,{data:u.current}):angular.extend(t,{isNew:!0}),g(t)},u.criteriaChanged=function(){a.refresh()},u.resetKeyword=function(){u.keyword=void 0,d.dataQuery&&(d.dataQuery.keyword=void 0)},a.resetRequestCustomFilter=function(){angular.copy(d,s)}}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.pricelistDetailController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.pricingModule.pricelists","platformWebApp.settings","virtoCommerce.coreModule.currency.currencyUtils",function(e,t,i,r,n){var o=e.blade;function c(e){o.isNew||(o.title=e.name),o.currentEntity=angular.copy(e),o.origEntity=e,o.isLoading=!1}function a(){return!angular.equals(o.currentEntity,o.origEntity)&&o.hasUpdatePermission()}function l(){return a()&&e.formScope&&e.formScope.$valid}o.updatePermission="pricing:update",o.refresh=function(e){o.isNew?c({productPrices:[],assignments:[]}):i.get({id:o.currentEntityId},(function(t){c(t),e&&o.parentBlade.refresh()}))},e.cancelChanges=function(){angular.copy(o.origEntity,o.currentEntity),e.bladeClose()},e.saveChanges=function(){o.isLoading=!0,o.isNew?i.save({},o.currentEntity,(function(t){angular.copy(o.currentEntity,o.origEntity),e.bladeClose(),o.saveCallback?o.saveCallback(t):o.parentBlade.refresh()})):i.update({},o.currentEntity,(function(e){o.refresh(!0)}))},e.setForm=function(t){e.formScope=t},o.onClose=function(i){t.showConfirmationIfNeeded(a(),l(),o,e.saveChanges,i,"pricing.dialogs.pricelist-save.title","pricing.dialogs.pricelist-save.message")},o.headIcon=o.parentBlade.headIcon,o.isNew||(o.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:e.saveChanges,canExecuteMethod:l,permission:o.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(o.origEntity,o.currentEntity)},canExecuteMethod:a,permission:o.updatePermission}]),o.refresh(!1),e.currencyUtils=n}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.pricelistItemListController",["$scope","virtoCommerce.pricingModule.prices","$filter","platformWebApp.bladeNavigationService","uiGridConstants","platformWebApp.uiGridHelper","platformWebApp.bladeUtils","platformWebApp.dialogService","$translate",function(e,t,i,r,n,o,c,a,l){e.uiGridConstants=n,e.noProductRowName=l.instant("pricing.blades.pricelist-item-list.labels.no-product-row-name");var s=e.blade,d={exportTypeName:"VirtoCommerce.PricingModule.Data.ExportImport.ExportablePrice",dataQuery:{exportTypeName:"PriceExportDataQuery"}};function u(e,i){i.isLoading=!0,t.search({priceListId:s.currentEntityId,productIds:_.pluck(e,"id")},(function(n){var o=_.filter(e,(function(e){return _.all(n.results,(function(t){return t.productId!==e.id}))})),c=_.map(o,(function(e){return{prices:[{productId:e.id,list:0,minQuantity:1,currency:s.currency,priceListId:s.currentEntityId}]}}));t.update(c,(function(){r.closeBlade(i),s.refresh(),s.parentWidgetRefresh()}),(function(e){r.setError("Error "+e.status,s)}))}),(function(e){r.setError("Error "+e.status,s)}))}s.getSearchCriteria=function(){return{groupByProducts:!0,pricelistIds:[s.currentEntityId],keyword:p.keyword,sort:o.getSortExpression(e),skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount}},s.refresh=function(){s.isLoading=!0,t.search(s.getSearchCriteria(),(function(t){s.currentEntities=e.preparePrices(t.results),e.pageSettings.totalItems=t.totalCount,s.totalItems=t.totalCount,s.isLoading=!1}),(function(e){r.setError("Error "+e.status,s)}))},e.preparePrices=function(t){return _.each(t,t=>{t.product||(t.product={name:e.noProductRowName})}),t},e.selectNode=function(t){e.selectedNodeId=t.productId;var i={id:"productItemPrices",itemId:t.productId,priceListId:s.currentEntityId,data:t,currency:s.currency,title:"pricing.blades.prices-list.title",titleValues:{name:t.product.name},subtitle:"pricing.blades.prices-list.subtitle",controller:"virtoCommerce.pricingModule.pricesListController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/prices-list.tpl.html"};r.showBlade(i,s)},e.deleteList=function(e){var i={id:"confirmDeleteItem",title:"pricing.dialogs.pricelist-item-list-delete.title",message:"pricing.dialogs.pricelist-item-list-delete.message",callback:function(i){i&&r.closeChildrenBlades(s,(function(){t.remove({priceListId:s.currentEntityId,productIds:_.pluck(e,"productId")},(function(){s.refresh(),s.parentWidgetRefresh()}),(function(e){r.setError("Error "+e.status,s)}))}))}};a.showConfirmationDialog(i)},s.exportPrices=function(){var t=e.gridApi.selection.getSelectAllState();d.dataQuery.isAllSelected=t;var i=e.gridApi.selection.getSelectedRows();if(d.dataQuery.objectIds=[],!t&&i){var n=_.pluck(_.flatten(_.pluck(i,"prices")),"id");d.dataQuery.objectIds=n}d.dataQuery.productIds=[],(d.dataQuery.productIds&&d.dataQuery.productIds.length||!t)&&(d.dataQuery.productIds=_.map(i,(function(e){return e.productId})));var o=s.getSearchCriteria();(t||o.pricelistIds&&o.pricelistIds.length>0||""!==o.keyword)&&(d.dataQuery.isAnyFilterApplied=!0),angular.extend(d.dataQuery,o);var c={id:"priceExport",title:"pricing.blades.exporter.priceTitle",subtitle:"pricing.blades.exporter.priceSubtitle",controller:"virtoCommerce.exportModule.exportSettingsController",template:"Modules/$(VirtoCommerce.Export)/Scripts/blades/export-settings.tpl.html",exportDataRequest:d};r.showBlade(c,s)},s.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:s.refresh,canExecuteMethod:function(){return!0}},{name:"platform.commands.add",icon:"fas fa-plus",executeMethod:function(){e.selectedNodeId=null;var t=[],i={id:"CatalogItemsSelect",title:"Select items for pricing",controller:"virtoCommerce.catalogModule.catalogItemSelectController",template:"Modules/$(VirtoCommerce.Catalog)/Scripts/blades/common/catalog-items-select.tpl.html",breadcrumbs:[],toolbarCommands:[{name:"pricing.commands.add-selected",icon:"fas fa-plus",executeMethod:function(e){u(t,e)},canExecuteMethod:function(){return t.length>0}}]};i.options={checkItemFn:function(e,r){"category"===e.type?(i.error="Categories are not supported",e.selected=void 0):(r?_.all(t,(function(t){return t.id!==e.id}))&&t.push(e):t=_.reject(t,(function(t){return t.id===e.id})),i.error=void 0)}},r.showBlade(i,s)},canExecuteMethod:function(){return!0},permission:s.updatePermission},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){e.deleteList(e.gridApi.selection.getSelectedRows())},canExecuteMethod:function(){return e.gridApi&&_.any(e.gridApi.selection.getSelectedRows())},permission:s.updatePermission},{name:"platform.commands.export",icon:"fa fa-upload",canExecuteMethod:function(){return!0},executeMethod:function(){s.exportPrices()}}],e.getPriceRange=function(e){var t=_.union(_.pluck(e.prices,"list"),_.pluck(e.prices,"sale")),r=i("currency")(_.min(t),"",2),n=i("currency")(_.max(t),"",2);return r===n?r:r+"-"+n};var p=e.filter={};p.criteriaChanged=function(){e.pageSettings.currentPage>1?e.pageSettings.currentPage=1:s.refresh()},e.setGridOptions=function(t){e.gridOptions=t,t.onRegisterApi=function(t){t.core.on.sortChanged(e,(function(){s.isLoading||s.refresh()}))},c.initializePagination(e)}}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.pricelistListController",["$scope","virtoCommerce.pricingModule.pricelists","platformWebApp.dialogService","platformWebApp.uiGridHelper","platformWebApp.bladeUtils","$localStorage",function(e,t,i,r,n,o){var c=e.blade,a=n.bladeNavigationService,l={exportTypeName:"VirtoCommerce.PricingModule.Data.ExportImport.ExportablePricelist",dataQuery:{exportTypeName:"PricelistExportDataQuery"}},s=angular.copy(l),d=c.filter=e.filter={};function u(e){var t={id:"exportGenericViewerFilter",controller:"virtoCommerce.exportModule.exportGenericViewerFilterController",template:"Modules/$(VirtoCommerce.Export)/Scripts/blades/export-generic-viewer-filter.tpl.html",onBeforeApply:c.resetRequestCustomFilter};angular.extend(t,e),a.showBlade(t,c)}function p(){var t={keyword:d.keyword,sort:r.getSortExpression(e),skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount};return d.current&&(t.currencies=d.current.currencies),t}c.refresh=function(i){return c.isLoading=!0,t.search(p(),(function(t){return c.isLoading=!1,c.currentEntities=t.results,e.pageSettings.totalItems=t.totalCount,!0===i&&c.parentRefresh&&c.parentRefresh(),t})).$promise},e.selectNode=function(t,i){e.selectedNodeId=t.id;var r={id:"listItemChild",controller:"virtoCommerce.pricingModule.pricelistDetailController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/pricelist-detail.tpl.html"};i?angular.extend(r,{title:"pricing.blades.pricelist-detail.title-new",isNew:!0,saveCallback:function(e){r.isNew=!1,c.refresh(!0).then((function(){r.currentEntityId=e.id,a.showBlade(r,c)}))}}):angular.extend(r,{currentEntityId:t.id,title:t.name,subtitle:c.subtitle}),a.showBlade(r,c)},e.deleteList=function(e){var r={id:"confirmDeleteItem",title:"pricing.dialogs.pricelists-delete.title",message:"pricing.dialogs.pricelists-delete.message",callback:function(i){i&&a.closeChildrenBlades(c,(function(){t.remove({ids:_.pluck(e,"id")},(function(){return c.refresh(!0)}))}))}};i.showConfirmationDialog(r)},c.headIcon="fa fa-usd",c.subtitle="pricing.blades.pricelist-list.subtitle",c.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:c.refresh,canExecuteMethod:function(){return!0}},{name:"platform.commands.add",icon:"fas fa-plus",executeMethod:function(){e.selectNode({},!0)},canExecuteMethod:function(){return!0},permission:"pricing:create"},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){e.deleteList(e.gridApi.selection.getSelectedRows())},canExecuteMethod:function(){return e.gridApi&&_.any(e.gridApi.selection.getSelectedRows())},permission:"pricing:delete"},{name:"platform.commands.export",icon:"fa fa-upload",canExecuteMethod:function(){return!0},executeMethod:function(){var t=e.gridApi.selection.getSelectAllState();s.dataQuery.isAllSelected=t;var i=e.gridApi.selection.getSelectedRows();s.dataQuery.objectIds=[],(s.dataQuery.objectIds&&s.dataQuery.objectIds.length||!t)&&(s.dataQuery.objectIds=_.map(i,(function(e){return e.id}))),s.dataQuery=angular.extend(s.dataQuery,p());var r={id:"pricelistExport",title:"pricing.blades.exporter.priceListTitle",subtitle:"pricing.blades.exporter.pricelistSubtitle",controller:"virtoCommerce.exportModule.exportSettingsController",template:"Modules/$(VirtoCommerce.Export)/Scripts/blades/export-settings.tpl.html",exportDataRequest:s,totalItemsCount:s.dataQuery.objectIds.length||e.pageSettings.totalItems};a.showBlade(r,c)}}],d.criteriaChanged=function(){e.pageSettings.currentPage>1?e.pageSettings.currentPage=1:c.refresh()},e.setGridOptions=function(t){e.gridOptions=t,t.onRegisterApi=function(t){t.core.on.sortChanged(e,(function(){c.isLoading||c.refresh()}))},n.initializePagination(e)},o.exportSearchFilters||(o.exportSearchFilters={}),o.exportSearchFilters[s.exportTypeName]||(o.exportSearchFilters[s.exportTypeName]=[{name:"export.blades.export-generic-viewer.labels.new-filter"}]),e.exportSearchFilters=o.exportSearchFilters[s.exportTypeName],o.exportSearchFilterIds||(o.exportSearchFilterIds={}),e.exportSearchFilterId=o.exportSearchFilterIds[s.exportTypeName],e.exportSearchFilterId&&(d.current=_.findWhere(e.exportSearchFilters,{id:e.exportSearchFilterId})),d.change=function(){o.exportSearchFilterIds[s.exportTypeName]=d.current?d.current.id:null;var e=s.exportTypeName+"ExportFilter";d.current&&!d.current.id?(d.current=null,u({isNew:!0,metafieldsId:e,exportTypeName:s.exportTypeName})):(a.closeBlade({id:"exportGenericViewerFilter"}),d.current||c.resetRequestCustomFilter(),d.criteriaChanged())},d.edit=function(){var e=s.exportTypeName+"ExportFilter",t={data:d.current,metafieldsId:e,exportTypeName:s.exportTypeName};d.current?angular.extend(t,{data:d.current}):angular.extend(t,{isNew:!0}),u(t)},d.criteriaChanged=function(){c.refresh()},d.resetKeyword=function(){d.keyword=void 0,s.dataQuery&&(s.dataQuery.keyword=void 0)},c.resetRequestCustomFilter=function(){angular.copy(s,l)}}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.pricesListController",["$scope","virtoCommerce.pricingModule.prices","platformWebApp.objCompareService","platformWebApp.bladeNavigationService","platformWebApp.uiGridHelper","virtoCommerce.pricingModule.priceValidatorsService","platformWebApp.ui-grid.extension",function(e,t,i,r,n,o,c){e.uiGridConstants=n.uiGridConstants;var a=e.blade;function l(){return a.currentEntities&&!i.equal(a.origEntity,a.currentEntities)&&a.hasUpdatePermission()}function s(){return l()&&e.isValid()}a.updatePermission="pricing:update",a.refresh=function(){a.data.productId=a.itemId,a.data.prices||(a.data.prices=[]),a.currentEntities=angular.copy(a.data.prices),a.origEntity=a.data.prices,a.isLoading=!1,o.setAllPrices(a.currentEntities)},a.onClose=function(t){r.showConfirmationIfNeeded(l(),s(),a,e.saveChanges,t,"pricing.dialogs.prices-save.title","pricing.dialogs.prices-save.message")},e.cancelChanges=function(){e.bladeClose()},e.isValid=function(){return e.formScope&&e.formScope.$valid&&_.all(a.currentEntities,e.isListPriceValid)&&_.all(a.currentEntities,e.isSalePriceValid)&&_.all(a.currentEntities,e.isUniqueQty)&&(0===a.currentEntities.length||_.some(a.currentEntities,(function(e){return 1===e.minQuantity})))},e.saveChanges=function(){a.isLoading=!0,angular.copy(a.currentEntities,a.origEntity),_.any(a.currentEntities)?t.update({id:a.itemId},a.data,(function(t){e.bladeClose(),a.parentBlade.refresh()}),(function(t){r.setError("Error "+t.status,e.blade)})):t.remove({priceListId:a.priceListId,productIds:[a.itemId]},(function(){e.bladeClose(),a.parentBlade.refresh()}),(function(e){r.setError("Error "+e.status,a)}))},e.delete=function(e){e&&a.currentEntities.splice(a.currentEntities.indexOf(e),1)},e.setForm=function(t){e.formScope=t},a.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:e.saveChanges,canExecuteMethod:s,permission:a.updatePermission},{name:"platform.commands.reset",icon:"fa fa-undo",executeMethod:function(){angular.copy(a.origEntity,a.currentEntities)},canExecuteMethod:l,permission:a.updatePermission},{name:"platform.commands.add",icon:"fas fa-plus",executeMethod:function(){var t,i;t=a.currentEntities,i={productId:a.itemId,list:"",minQuantity:1,currency:a.currency,priceListId:a.priceListId},t.push(i),e.validateGridData()},canExecuteMethod:function(){return!0},permission:a.updatePermission},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){var t=e.gridApi.selection.getSelectedRows();angular.forEach(t,(function(e){a.currentEntities.splice(a.currentEntities.indexOf(e),1)}))},canExecuteMethod:function(){return e.gridApi&&_.any(e.gridApi.selection.getSelectedRows())},permission:a.updatePermission}],e.isListPriceValid=o.isListPriceValid,e.isSalePriceValid=o.isSalePriceValid,e.isUniqueQty=o.isUniqueQty,e.setGridOptions=function(t,i){return i.onRegisterApi=function(t){e.gridApi=t,t.edit.on.afterCellEdit(e,(function(){e.validateGridData()})),e.validateGridData()},e.gridOptions=i,c.tryExtendGridOptions(t,i),i},e.validateGridData=function(){e.gridApi&&angular.forEach(a.currentEntities,(function(t){angular.forEach(e.gridOptions.columnDefs,(function(i){e.gridApi.grid.validate.runValidators(t,i,t[i.name],void 0,e.gridApi.grid)}))}))},e.datepickers={},e.open=function(t,i){t.preventDefault(),t.stopPropagation(),e.datepickers[i]=!0},a.refresh()}]).factory("virtoCommerce.pricingModule.priceValidatorsService",[function(){var e={};return{setAllPrices:function(t){e=t},isListPriceValid:function(e){return e.list>=0},isSalePriceValid:function(e){return _.isUndefined(e.sale)||e.list>=e.sale},isUniqueQty:function(t){return!(!t.startDate&&!t.endData)||Math.round(t.minQuantity)>0&&_.all(e,(function(e){return e===t||Math.round(e.minQuantity)!==Math.round(t.minQuantity)||e.startDate||e.EndDate}))},isUniqueQtyForPricelist:function(t){return Math.round(t.minQuantity)>0&&_.filter(e,(function(e){return!(e.pricelistId!==t.pricelistId||e.minQuantity!==t.minQuantity||e.startDate||e.EndDate||t.startDate||t.endDate)})).length<=1}}}]).run(["platformWebApp.ui-grid.extension","virtoCommerce.pricingModule.priceValidatorsService","uiGridValidateService",function(e,t,i){i.setValidator("listValidator",(function(e){return function(e,i,r,n){return _.isUndefined(i)||t.isListPriceValid(r)}}),(function(e){return"List price is invalid "})),i.setValidator("saleValidator",(function(e){return function(e,i,r,n){return t.isSalePriceValid(r)}}),(function(e){return"Sale price should not exceed List price"})),i.setValidator("minQuantityValidator",(function(){return function(e,i,r,n){return t.isUniqueQty(r)}}),(function(){return"Quantity value should be unique"})),i.setValidator("minQuantityForPricelistValidator",(function(){return function(e,i,r,n){return t.isUniqueQtyForPricelist(r)}}),(function(){return"Quantity value should be unique"}))}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.pricingMainController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var i;e.selectedNodeId=null,e.blade.openBlade=function(i){e.selectedNodeId=i.entityName;var r={id:"pricingList",title:i.name,controller:"virtoCommerce.pricingModule."+i.entityName+"ListController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/"+i.entityName+"-list.tpl.html"};t.showBlade(r,e.blade)},e.blade.headIcon="fa fa-usd",i=[{name:"pricing.blades.pricing-main.menu.pricelist-list.title",entityName:"pricelist",icon:"fa fa-usd"},{name:"pricing.blades.pricing-main.menu.pricelist-assignment-list.title",entityName:"assignment",icon:"fa fa-anchor"}],e.blade.currentEntities=i,e.blade.isLoading=!1,e.blade.openBlade(i[0])}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.itemPricelistsListController",["$scope","platformWebApp.bladeNavigationService","uiGridConstants","virtoCommerce.pricingModule.prices","virtoCommerce.catalogModule.catalogs",function(e,t,i,r,n){e.uiGridConstants=i;var o=e.blade;o.refresh=function(){o.isLoading=!0,r.getProductPricelists({id:o.itemId},(function(e){if(n.search({take:1e3,responseGroup:"Info"},(function(t){o.isLoading=!1,o.currentEntities=[],_.each(e,(function(e){if(e.prices.length>0){var i={priority:_.max(e.assignments,(function(e){return e.priority})).priority};angular.extend(i,e),i.assignments=[e.assignment];var r=_.pluck(e.assignments,"catalogId"),n=_.map(r,(function(e){return _.findWhere(t.results,{id:e}).name}));i.catalog=n.join(", "),o.currentEntities.push(i)}}))})),!e.length){var i={id:"newPricelist",controller:"virtoCommerce.pricingModule.pricelistDetailController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/pricelist-detail.tpl.html",title:"pricing.blades.pricelist-detail.title-new",isNew:!0,saveCallback:function(e){o.refresh()}};t.showBlade(i,o)}}))},e.openBlade=function(i){e.selectedNodeId=i.id;var r={id:"itemPrices",itemId:o.itemId,priceListId:i.id,data:i,currency:i.currency,title:i.name,subtitle:"pricing.blades.prices-list.subtitle",controller:"virtoCommerce.pricingModule.pricesListController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/prices-list.tpl.html"};t.showBlade(r,o)},o.headIcon="fa fa-usd",o.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:o.refresh,canExecuteMethod:function(){return!0}}],e.setGridOptions=function(t){e.gridOptions=t},o.refresh()}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.itemPriceListController",["$scope","platformWebApp.bladeNavigationService","uiGridConstants","virtoCommerce.pricingModule.prices","virtoCommerce.catalogModule.catalogs","virtoCommerce.storeModule.stores","platformWebApp.ui-grid.extension","platformWebApp.objCompareService","virtoCommerce.pricingModule.priceValidatorsService","platformWebApp.dialogService",function(e,t,i,r,n,o,c,a,l,s){e.uiGridConstants=i;var d=e.blade;function u(){return d.currentEntities&&!a.equal(d.origEntity,d.currentEntities)&&d.hasUpdatePermission()}function p(){return u()&&e.isValid()}d.updatePermission="pricing:update",d.refresh=function(){d.isLoading=!0,r.getProductPricelists({id:d.itemId},(function(t){n.search({take:1e3,responseGroup:"Info"},(function(i){o.search({take:1e3,responseGroup:"StoreInfo"},(function(r){e.catalogsList=i.results,e.storeList=r.results,d.origEntity=[],d.pricelistList=_.map(t,(function(e){return{id:e.id,code:e.name,currency:e.currency,assignments:e.assignments,displayName:e.name+" - "+e.currency}})),d.selectedPricelist=_.first(d.pricelistList);var n=_.filter(t,(function(e){return e.prices.length>0}));_.each(n,(function(t){var i={name:t.name,currency:t.currency},r=_.pluck(_.filter(t.assignments,(function(e){return e.catalogId})),"catalogId"),n=_.map(r,(function(t){var i=_.findWhere(e.catalogsList,{id:t});return i?i.name:null}));i.catalog=n.join(", ");var o=_.pluck(_.filter(t.assignments,(function(e){return e.storeId})),"storeId"),c=_.map(o,(function(t){var i=_.findWhere(e.storeList,{id:t});return i?i.name:null}));i.store=c.join(", "),_.each(t.prices,(function(e){var t=angular.copy(i);t=angular.extend(e,t),d.origEntity.push(t)}))})),d.currentEntities=angular.copy(d.origEntity),l.setAllPrices(d.currentEntities),d.isLoading=!1}))}))}))},e.createNewPricelist=function(){var e={id:"pricingList",controller:"virtoCommerce.pricingModule.pricelistListController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/pricelist-list.tpl.html",title:"pricing.blades.pricing-main.menu.pricelist-list.title",parentRefresh:d.refresh};t.showBlade(e,d)},e.selectPricelist=function(e){var i={id:"listItemChild",currentEntityId:e.pricelistId,title:e.name,controller:"virtoCommerce.pricingModule.pricelistDetailController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/pricelist-detail.tpl.html"};t.showBlade(i,d)},d.onClose=function(i){t.showConfirmationIfNeeded(u(),p(),d,e.saveChanges,i,"pricing.dialogs.prices-save.title","pricing.dialogs.prices-save.message")},e.isValid=function(){return e.formScope&&e.formScope.$valid&&_.all(d.currentEntities,e.isListPriceValid)&&_.all(d.currentEntities,e.isSalePriceValid)&&_.all(d.currentEntities,e.isUniqueQtyForPricelist)&&(0==d.currentEntities.length||_.some(d.currentEntities,(function(e){return 1==e.minQuantity})))},e.saveChanges=function(){if(d.isLoading=!0,angular.copy(d.currentEntities,d.origEntity),_.any(d.currentEntities)){var i={productId:d.itemId,product:d.item,prices:d.currentEntities};r.update({id:d.itemId},i,(function(e){d.refresh()}),(function(i){t.setError("Error "+i.status,e.blade)}))}},e.setForm=function(t){e.formScope=t},d.toolbarCommands=[{name:"platform.commands.save",icon:"fas fa-save",executeMethod:e.saveChanges,canExecuteMethod:p,permission:d.updatePermission},{name:"platform.commands.delete",icon:"fas fa-trash-alt",executeMethod:function(){var i=e.gridApi.selection.getSelectedRows(),n=_.map(i,(function(e){return e.id})),o={id:"confirmDeleteItem",title:"pricing.dialogs.item-prices-delete.title",message:"pricing.dialogs.item-prices-delete.message",callback:function(e){e&&r.removePrice({priceIds:n},(function(){angular.forEach(i,(function(e){d.currentEntities.splice(d.currentEntities.indexOf(e),1)}))}),(function(e){t.setError("Error "+e.status,d)}))}};s.showConfirmationDialog(o)},canExecuteMethod:function(){return e.gridApi&&_.any(e.gridApi.selection.getSelectedRows())},permission:"pricing:delete"},{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:d.refresh,canExecuteMethod:function(){return!0}}],d.addNewPrice=function(t){l.setAllPrices(d.currentEntities);var i=_.pluck(t.assignments,"catalogId"),r=_.map(i,(function(t){var i=_.findWhere(e.catalogsList,{id:t});return i?i.name:null}));r=_.filter(r,(function(e){return null!==e}));var n=_.pluck(t.assignments,"storeId"),o=_.map(n,(function(t){var i=_.findWhere(e.storeList,{id:t});return i?i.name:null}));o=_.filter(o,(function(e){return null!==e}));var c={productId:d.itemId,list:"",minQuantity:1,currency:t.currency,pricelistId:t.id,name:t.code,catalog:r.join(", "),store:o.join(", ")};d.currentEntities.push(c),e.validateGridData()},e.isListPriceValid=l.isListPriceValid,e.isSalePriceValid=l.isSalePriceValid,e.isUniqueQtyForPricelist=l.isUniqueQtyForPricelist,e.setGridOptions=function(t,i){return i.onRegisterApi=function(t){e.gridApi=t,t.edit.on.afterCellEdit(e,(function(){e.validateGridData()})),e.validateGridData()},e.gridOptions=i,c.tryExtendGridOptions(t,i),i},e.validateGridData=function(){e.gridApi&&angular.forEach(d.currentEntities,(function(t){angular.forEach(e.gridOptions.columnDefs,(function(i){e.gridApi.grid.validate.runValidators(t,i,t[i.name],void 0,e.gridApi.grid)}))}))},e.datepickers={},e.open=function(t,i){t.preventDefault(),t.stopPropagation(),e.datepickers[i]=!0},d.refresh()}])},function(e,t){angular.module("virtoCommerce.pricingModule").factory("virtoCommerce.pricingModule.prices",["$resource",function(e){return e("api/products/:id/prices",{id:"@Id",catalogId:"@catalogId"},{search:{url:"api/catalog/products/prices/search"},getProductPrices:{isArray:!0},getProductPricesForWidget:{url:"api/products/:id/:catalogId/pricesWidget",isArray:!0},getProductPricelists:{url:"api/catalog/products/:id/pricelists",isArray:!0},update:{method:"PUT"},remove:{method:"DELETE",url:"api/pricing/pricelists/:priceListId/products/prices"},removePrice:{method:"DELETE",url:"api/pricing/products/prices"}})}]).factory("virtoCommerce.pricingModule.pricelists",["$resource",function(e){return e("api/pricing/pricelists/:id",{},{search:{url:"api/pricing/pricelists"},update:{method:"PUT"}})}]).factory("virtoCommerce.pricingModule.pricelistAssignments",["$resource",function(e){return e("api/pricing/assignments/:id",{id:"@Id"},{search:{url:"api/pricing/assignments"},getNew:{url:"api/pricing/assignments/new"},update:{method:"PUT"},removeFiltered:{method:"DELETE",url:"api/pricing/filteredAssignments"}})}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.catalogSelectorController",["$scope","virtoCommerce.catalogModule.catalogs",function(e,t){t.search({take:1e3},(function(t){e.catalogs=angular.copy(t.results)}))}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.currencySelectorController",["$scope","virtoCommerce.coreModule.currency.currencyUtils",function(e,t){e.currencies=t.getCurrencies()}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.pricelistSelectorController",["$scope","virtoCommerce.pricingModule.pricelists",function(e,t){t.search({take:1e3},(function(t){e.pricelists=t.results}))}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.productSelectorController",["$scope","platformWebApp.bladeNavigationService",function(e,t){var i=e.blade;e.selectedCount=(i.currentEntity.productIds||[]).length,e.selectProducts=function(){var r=i.currentEntity.productIds||[],n={id:"CatalogItemsSelect",controller:"virtoCommerce.catalogModule.catalogItemSelectController",template:"Modules/$(VirtoCommerce.Catalog)/Scripts/blades/common/catalog-items-select.tpl.html",title:"pricing.selectors.blades.titles.select-products",options:{allowCheckingCategory:!1,selectedItemIds:r,checkItemFn:function(e,t){t?_.find(r,(function(t){return t.id==e.id}))||r.push(e.id):r=_.reject(r,(function(t){return t.id==e.id}))}},breadcrumbs:[],toolbarCommands:[{name:"platform.commands.confirm",icon:"fa fa-check",executeMethod:function(n){i.currentEntity.productIds=_.union(i.currentEntity.productIds,r),e.selectedCount=i.currentEntity.productIds.length,t.closeBlade(n)},canExecuteMethod:function(){return _.any(r)}}]};t.showBlade(n,i)}}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.assignmentsWidgetController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.pricingModule.pricelistAssignments",function(e,t,i){var r=e.widget.blade;e.openBlade=function(){var e={id:"pricelistChild",pricelistId:r.currentEntity.id,currentEntity:r.currentEntity,title:r.title,subtitle:"pricing.blades.pricelist-assignment-list.subtitle",controller:"virtoCommerce.pricingModule.assignmentListController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/assignment-list.tpl.html"};t.showBlade(e,r)},e.$watch("widget.blade.currentEntity",(function(t){!function(t){if(t&&(e.widget.assignmentsCount=t.assignments?t.assignments.length:0,t.id))i.search({priceListId:t.id,take:0},(function(t){e.widget.assignmentsCount=t.totalCount}))}(t)}))}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.itemPricesWidgetController",["$scope","$filter","platformWebApp.bladeNavigationService","virtoCommerce.pricingModule.pricelists","virtoCommerce.pricingModule.prices","$state",function(e,t,i,r,n,o){var c=e.blade;function a(){return e.loading=!0,n.getProductPricesForWidget({id:c.itemId,catalogId:c.catalog.id},(function(i){if(e.loading=!1,i.length){i=_.groupBy(i,"currency"),i=_.max(_.values(i),(function(e){return e.length}));var r=_.union(_.pluck(i,"list"),_.pluck(i,"sale")),n=_.min(r),o=_.max(r),c=_.any(i)?i[0].currency:"";n=t("currency")(n,c),o=t("currency")(o,c),e.priceLabel=n==o?n:n+" - "+o}return i}))}e.openBlade=function(){if(!e.loading){var t={id:"itemPrices",itemId:c.itemId,item:c.item,parentWidgetRefresh:a,title:"pricing.blades.item-prices.title",titleValues:{name:c.item.name},subtitle:"pricing.blades.item-prices.subtitle",controller:"virtoCommerce.pricingModule.itemPriceListController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/item/item-prices.tpl.html"};i.showBlade(t,c)}},e.$watch("widget.blade.catalog.id",(function(e){e&&a()}))}])},function(e,t){angular.module("virtoCommerce.pricingModule").controller("virtoCommerce.pricingModule.pricesWidgetController",["$scope","platformWebApp.bladeNavigationService","virtoCommerce.pricingModule.prices",function(e,t,i){var r=e.widget.blade;function n(){e.priceCount="...",i.search({priceListId:r.currentEntityId,take:0},(function(t){e.priceCount=t.totalCount}))}e.openBlade=function(){var e={id:"pricelistChild",currency:r.currentEntity.currency,currentEntity:r.currentEntity,currentEntityId:r.currentEntityId,parentWidgetRefresh:n,title:r.title,subtitle:"pricing.blades.pricelist-item-list.subtitle",controller:"virtoCommerce.pricingModule.pricelistItemListController",template:"Modules/$(VirtoCommerce.Pricing)/Scripts/blades/pricelist-item-list.tpl.html"};t.showBlade(e,r)},n()}])},function(e,t,i){},function(e,t,i){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,